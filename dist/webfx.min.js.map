{"version":3,"file":"webfx.min.js","sources":["https://github.com/lideming/webfx/raw/v1.5.26/src/lib/utils.ts","https://github.com/lideming/webfx/raw/v1.5.26/src/lib/view.ts","https://github.com/lideming/webfx/raw/v1.5.26/src/lib/I18n.ts","https://github.com/lideming/webfx/raw/v1.5.26/src/lib/viewlib.ts","https://github.com/lideming/webfx/raw/v1.5.26/version"],"sourcesContent":["// file: utils.ts\n\nimport { BuildDomReturn, BuildDomExpr, BuildDOMCtx, jsxFactory, IDOM } from \"./view\";\n\nconst _object_assign = Object.assign;\nconst _object_hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/** The name \"utils\" tells it all. */\nexport var utils = new class Utils {\n\n    // Time & formatting utils:\n\n    strPadLeft(str: string, len: number, ch: string = ' ') {\n        while (str.length < len) {\n            str = ch + str;\n        }\n        return str;\n    }\n\n    formatTime(sec: number | any) {\n        if (typeof sec !== 'number' || isNaN(sec)) return '--:--';\n        sec = Math.round(sec);\n        var min = Math.floor(sec / 60);\n        sec %= 60;\n        return this.strPadLeft(min.toString(), 2, '0') + ':' + this.strPadLeft(sec.toString(), 2, '0');\n    }\n\n    fileSizeUnits = ['B', 'KB', 'MB', 'GB'];\n    formatFileSize(size: number | any) {\n        if (typeof size !== \"number\" || isNaN(size)) return 'NaN';\n        var unit = 0;\n        while (unit < this.fileSizeUnits.length - 1 && size >= 1024) {\n            unit++;\n            size /= 1024;\n        }\n        return size.toFixed(2) + ' ' + this.fileSizeUnits[unit];\n    }\n\n    formatDateTime(date: Date) {\n        var now = new Date();\n        var sameday = date.getFullYear() === now.getFullYear()\n            && date.getMonth() === now.getMonth()\n            && date.getDate() === now.getDate();\n        return sameday ? date.toLocaleTimeString() : date.toLocaleString();\n    }\n\n    numLimit(num: number, min: number, max: number) {\n        return (num < min || typeof num != 'number' || isNaN(num)) ? min :\n            (num > max) ? max : num;\n    }\n\n    createName(nameFunc: (num: number) => string, existsFunc: (str: string) => boolean) {\n        for (let num = 0; ; num++) {\n            let str = nameFunc(num);\n            if (!existsFunc(str)) return str;\n        }\n    }\n\n    /** \n     * btoa, but supports Unicode and uses UTF-8 encoding.\n     * @see https://stackoverflow.com/questions/30106476\n     */\n    base64EncodeUtf8(str) {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g,\n            function toSolidBytes(match, p1) {\n                return String.fromCharCode(('0x' + p1) as any);\n            }));\n    }\n\n\n    Timer: typeof Timer;\n\n    sleepAsync(time: number): Promise<void> {\n        return new Promise((resolve) => {\n            setTimeout(resolve, time);\n        });\n    }\n\n    /** \n     * Build a DOM tree from a JavaScript object.\n     * @example utils.buildDOM({\n            tag: 'div.item#firstitem',\n            child: ['Name: ', { tag: 'span.name', textContent: name } ],\n        })\n     */\n    buildDOM: <T extends BuildDomReturn = BuildDomReturn>(tree: BuildDomExpr, ctx?: BuildDOMCtx) => T\n        = null as any; // It will be initialized by view.ts\n\n    jsxFactory: typeof jsxFactory = null as any;\n    jsx: typeof jsxFactory = null as any;\n\n    /** Remove all children from the node */\n    clearChildren(node: Node) {\n        while (node.lastChild) node.removeChild(node.lastChild);\n    }\n\n    /** Remove all children from the node (if needed) and append one (if present) */\n    replaceChild(node: Node, newChild?: Node) {\n        this.clearChildren(node);\n        if (newChild) node.appendChild(newChild);\n    }\n\n    /** Add or remove a classname for the element\n     * @param force - true -> add; false -> remove; undefined -> toggle.\n     */\n    toggleClass(element: HTMLElement, clsName: string, force?: boolean) {\n        var clsList = element.classList;\n        if (clsList.toggle) return clsList.toggle(clsName, force);\n        if (force === undefined) force = !clsList.contains(clsName);\n        if (force) clsList.add(clsName);\n        else clsList.remove(clsName);\n        return force;\n    }\n\n    /** Fade out the element and remove it */\n    fadeout(element: HTMLElement, options?: { className?: string, duration?: number, waitTransition?: boolean; }) {\n        const { className = 'fading-out', duration = 500, waitTransition = true } = options || {};\n        element.classList.add(className);\n        var cb: Action | null = null;\n        var end: Action | null = () => {\n            if (!end) return; // use a random variable as flag ;)\n            end = null;\n            if (waitTransition)\n                element.removeEventListener('transitionend', onTransitionend);\n            element.classList.remove(className);\n            element.remove();\n            cb && cb();\n        };\n        if (waitTransition) {\n            var onTransitionend = function (e: TransitionEvent) {\n                if (e.eventPhase === Event.AT_TARGET) end!();\n            };\n            element.addEventListener('transitionend', onTransitionend);\n        }\n        setTimeout(end, duration); // failsafe\n        return {\n            get finished() { return !end; },\n            onFinished(callback: Action) {\n                if (!end) callback();\n                else cb = callback;\n            },\n            cancel() { end?.(); }\n        };\n    }\n\n    listenPointerEvents(element: HTMLElement, callback: (e: PtrEvent) => void | 'track', options?: AddEventListenerOptions) {\n        var touchDown = false;\n        var mouseDown = function (e: MouseEvent) {\n            if (callback({ type: 'mouse', ev: e, point: e, action: 'down' }) === 'track') {\n                var mousemove = function (e: MouseEvent) {\n                    callback({ type: 'mouse', ev: e, point: e, action: 'move' });\n                };\n                var mouseup = function (e: MouseEvent) {\n                    document.removeEventListener('mousemove', mousemove, true);\n                    document.removeEventListener('mouseup', mouseup, true);\n                    callback({ type: 'mouse', ev: e, point: e, action: 'up' });\n                };\n                document.addEventListener('mousemove', mousemove, true);\n                document.addEventListener('mouseup', mouseup, true);\n            }\n        };\n        var touchStart = function (e: TouchEvent) {\n            var ct = e.changedTouches[0];\n            var ret = callback({\n                type: 'touch', touch: 'start', ev: e, point: ct,\n                action: touchDown ? 'move' : 'down'\n            });\n            if (!touchDown && ret === 'track') {\n                touchDown = true;\n                var touchmove = function (e: TouchEvent) {\n                    var ct = e.changedTouches[0];\n                    callback({ type: 'touch', touch: 'move', ev: e, point: ct, action: 'move' });\n                };\n                var touchend = function (e: TouchEvent) {\n                    if (e.touches.length === 0) {\n                        touchDown = false;\n                        element.removeEventListener('touchmove', touchmove);\n                        element.removeEventListener('touchend', touchend);\n                        element.removeEventListener('touchcancel', touchend);\n                    }\n                    var ct = e.changedTouches[0];\n                    callback({\n                        type: 'touch', touch: 'end', ev: e, point: ct,\n                        action: touchDown ? 'move' : 'up'\n                    });\n                };\n                element.addEventListener('touchmove', touchmove, options);\n                element.addEventListener('touchend', touchend, options);\n                element.addEventListener('touchcancel', touchend, options);\n            }\n        };\n        element.addEventListener('mousedown', mouseDown, options);\n        element.addEventListener('touchstart', touchStart, options);\n        return {\n            remove: () => {\n                element.removeEventListener('mousedown', mouseDown, options);\n                element.removeEventListener('touchstart', touchStart, options);\n            }\n        };\n    }\n\n    listenEvent<K extends keyof HTMLElementEventMap>(element: HTMLElement, event: K,\n        handler: (ev: HTMLElementEventMap[K]) => any) {\n        element.addEventListener(event, handler);\n        return {\n            remove: () => element.removeEventListener(event, handler)\n        };\n    }\n\n    listenEvents<K extends Array<keyof HTMLElementEventMap>>(element: HTMLElement, events: K,\n        handler: (ev: HTMLElementEventMap[K[number]]) => any) {\n        events.forEach(event => element.addEventListener(event, handler));\n        return {\n            remove: () => events.forEach(event => element.removeEventListener(event, handler))\n        };\n    }\n\n    injectCss(css: string, options?: { tag: string; }) {\n        document.head.appendChild(utils.buildDOM({ tag: options?.tag ?? 'style', text: css }));\n    }\n\n    arrayRemove<T>(array: T[], val: T) {\n        for (let i = 0; i < array.length; i++) {\n            if (array[i] === val) {\n                array.splice(i, 1);\n                i--;\n            }\n        }\n    }\n\n    arrayInsert<T>(array: T[], val: T, pos?: number) {\n        if (pos === undefined) array.push(val);\n        else array.splice(pos, 0, val);\n    }\n\n    arrayMap<T, TRet>(arr: Iterable<T>, func: (item: T, idx: number) => TRet) {\n        if (arr instanceof Array) return arr.map(func);\n        var idx = 0;\n        var ret = new Array<TRet>((arr as any).length);\n        for (var item of arr) {\n            ret[idx] = (func(item, idx));\n            idx++;\n        }\n        return ret;\n    }\n\n    arrayForeach<T>(arr: Iterable<T>, func: (item: T, idx: number) => void) {\n        var idx = 0;\n        for (var item of arr) {\n            func(item, idx++);\n        }\n    }\n\n    arrayFind<T>(arr: Iterable<T>, func: (item: T, idx: number) => any): T | null {\n        if (arr instanceof Array) return arr.find(func);\n        var idx = 0;\n        for (var item of arr) {\n            if (func(item, idx++)) return item;\n        }\n        return null;\n    }\n\n    arraySum<T>(arr: Iterable<T>, func: (item: T) => number | null | undefined) {\n        var sum = 0;\n        this.arrayForeach(arr, (x) => {\n            var val = func(x);\n            if (val) sum += val;\n        });\n        return sum;\n    }\n\n    objectApply<T>(obj: Partial<T>, kv?: Partial<T>, keys?: Array<keyof T>) {\n        if (kv) {\n            if (!keys) return _object_assign(obj, kv);\n            for (const key in kv as any) {\n                if (_object_hasOwnProperty.call(kv, key) && (!keys || keys.indexOf(key as any) >= 0)) {\n                    const val = kv[key];\n                    obj[key] = val;\n                }\n            }\n        }\n        return obj;\n    }\n\n    mod(a: number, b: number): number {\n        if (a < 0) a = b + a;\n        return a % b;\n    }\n\n    readBlobAsDataUrl(blob: Blob) {\n        return new Promise<string>((resolve, reject) => {\n            var reader = new FileReader();\n            reader.onload = (ev) => {\n                resolve(reader.result as string);\n            };\n            reader.onerror = (ev) => reject();\n            reader.readAsDataURL(blob);\n        });\n    }\n};\n\nArray.prototype.remove = function (item) {\n    utils.arrayRemove(this, item);\n};\n\ndeclare global {\n    interface Array<T> {\n        /**\n         * (Extension method) remove the specified item from array.\n         * @param item The item to be removed from array\n         */\n        remove(item: T): void;\n    }\n}\n\n\nexport function startBlockingDetect(threshold = 20) {\n    var begin = Date.now();\n    var lastRun = Date.now();\n    setInterval(() => {\n        var now = Date.now();\n        if (now - lastRun >= threshold) {\n            console.info(`[Blocking] ${(now - begin) / 1000}s: blocked for ${now - lastRun} ms`);\n        }\n        lastRun = now;\n    }, 1);\n}\n\nexport class Timer {\n    callback: () => void;\n    cancelFunc: (() => void) | undefined;\n    constructor(callback: () => void) {\n        this.callback = callback;\n        this.cancelFunc = undefined;\n    }\n    timeout(time: number) {\n        this.tryCancel();\n        var handle = setTimeout(this.callback, time);\n        this.cancelFunc = () => window.clearTimeout(handle);\n    }\n    interval(time: number) {\n        this.tryCancel();\n        var handle = setInterval(this.callback, time);\n        this.cancelFunc = () => window.clearInterval(handle);\n    }\n    animationFrame() {\n        this.tryCancel();\n        var handle = requestAnimationFrame(this.callback);\n        this.cancelFunc = () => cancelAnimationFrame(handle);\n    }\n    tryCancel() {\n        if (this.cancelFunc) {\n            this.cancelFunc();\n            this.cancelFunc = undefined;\n        }\n    }\n}\nutils.Timer = Timer;\n\nexport type PtrEvent = ({\n    type: 'mouse';\n    ev: MouseEvent;\n} | {\n    type: 'touch';\n    touch: 'start' | 'move' | 'end';\n    ev: TouchEvent;\n}) & {\n    action: 'down' | 'move' | 'up';\n    point: MouseEvent | Touch;\n};\n\n\n// Some interesting function types:\nexport type AnyFunc = (...args: any) => any;\nexport type Action<T = void> = (arg: T) => void;\nexport type Func<TRet> = () => TRet;\nexport type AsyncFunc<T> = Func<Promise<T>>;\n\nexport type FuncOrVal<T> = T | Func<T>;\n\n\nexport class SettingItem<T> {\n    key: string;\n    type: SiType<T>;\n    data: T;\n    isInitial: boolean;\n    onRender: Action<T> | null = null;\n    constructor(key: string, type: 'bool' | 'str' | 'json' | SiType<T>, initial: T) {\n        this.key = key;\n        type = this.type = typeof type === 'string' ? SettingItem.types[type] : type;\n        if (!type || !type.serialize || !type.deserialize) throw new Error(\"invalid 'type' arugment\");\n        this.readFromStorage(initial);\n    }\n    readFromStorage(initial: T) {\n        var str = this.key ? localStorage.getItem(this.key) : null;\n        this.isInitial = !str;\n        this.set(str ? this.type.deserialize(str) : initial, true);\n    }\n    render(fn: (obj: T) => void, dontRaiseNow?: boolean) {\n        if (!dontRaiseNow) fn(this.data);\n        const oldFn = this.onRender;\n        const newFn = fn;\n        if (oldFn) fn = function (x) { oldFn(x); newFn(x); };\n        this.onRender = fn;\n        return this;\n    }\n    bindToBtn(btn: HTMLElement, prefix: string[]) {\n        if (this.type as any !== SettingItem.types.bool) throw new Error('only for bool type');\n        var span = document.createElement('span');\n        btn.insertBefore(span, btn.firstChild);\n        this.render(function (x) {\n            btn.classList.toggle('disabled', !x);\n            prefix = prefix || [\"❌\", \"✅\"];\n            span.textContent = prefix[+x];\n        });\n        var thiz = this;\n        btn.addEventListener('click', function () { thiz.toggle(); });\n        return this;\n    }\n    remove() {\n        localStorage.removeItem(this.key);\n    }\n    save() {\n        this.isInitial = false;\n        localStorage.setItem(this.key, this.type.serialize(this.data));\n    }\n    set(data: T, dontSave?: boolean) {\n        this.data = data;\n        this.isInitial = false;\n        this.onRender && this.onRender(data);\n        if (!dontSave && this.key) this.save();\n    }\n    get() {\n        return this.data;\n    }\n    toggle() {\n        if (this.type as any !== SettingItem.types.bool) throw new Error('only for bool type');\n        this.set((!(this.data as any)) as any);\n    }\n    loop(arr: any[]) {\n        var curData = this.data;\n        var oldIndex = arr.findIndex(function (x) { return x === curData; });\n        var newData = arr[(oldIndex + 1) % arr.length];\n        this.set(newData);\n    }\n\n    static types = {\n        bool: {\n            serialize: function (data) { return data ? 'true' : 'false'; },\n            deserialize: function (str) { return str === 'true' ? true : str === 'false' ? false : undefined; }\n        },\n        str: {\n            serialize: function (x) { return x; },\n            deserialize: function (x) { return x; }\n        },\n        json: {\n            serialize: function (x) { return JSON.stringify(x); },\n            deserialize: function (x) { return JSON.parse(x); }\n        }\n    };\n}\n\ninterface SiType<T> {\n    serialize: (obj: T) => string;\n    deserialize: (str: string) => T;\n}\n\nclass CallbacksImpl<T extends AnyFunc = Action> extends Array<T> {\n    invoke(...args: Parameters<T>) {\n        this.forEach((x) => {\n            try {\n                x.apply(this, args);\n            } catch (error) {\n                console.error(\"Error in callback\", error);\n            }\n        });\n    }\n    add(callback: T) {\n        this.push(callback);\n        return callback;\n    }\n    remove(callback: T) {\n        this.remove(callback);\n    }\n}\n\nexport interface Callbacks<T extends AnyFunc = Action> {\n    invoke(...args: Parameters<T>): void;\n    add(callback: T): T;\n    remove(callback: T): void;\n}\nexport const Callbacks: { new <T extends AnyFunc = Action>(): Callbacks<T> } = CallbacksImpl;\n\nexport class Lazy<T> {\n    private _func?: Func<T>;\n    private _value?: T;\n    get computed() { return !this._func; }\n    get rawValue() { return this._value; }\n    get value(): T {\n        if (this._func) {\n            this._value = this._func();\n            this._func = undefined;\n        }\n        return this._value!;\n    }\n    constructor(func: Func<T>) {\n        this._func = func;\n        this._value = undefined;\n    }\n}\n\nexport class Semaphore {\n    queue = new Array<Action>();\n    maxCount = 1;\n    runningCount = 0;\n    constructor(init: Partial<Semaphore>) {\n        utils.objectApply(this, init);\n    }\n    enter(): Promise<any> {\n        if (this.runningCount === this.maxCount) {\n            var resolve: Action;\n            var prom = new Promise((res) => { resolve = res; });\n            this.queue.push(resolve!);\n            return prom;\n        } else {\n            this.runningCount++;\n            return Promise.resolve();\n        }\n    }\n    exit() {\n        if (this.runningCount === this.maxCount && this.queue.length) {\n            if (window.queueMicrotask) {\n                window.queueMicrotask(this.queue.shift() as any);\n            } else {\n                setTimeout(this.queue.shift()!, 0);\n            }\n        } else {\n            this.runningCount--;\n        }\n    }\n    async run(func: () => Promise<any>) {\n        await this.enter();\n        try {\n            await func();\n        } finally {\n            this.exit();\n        }\n    }\n}\n\n/** Just like CancellationToken[Source] on .NET */\nexport class CancelToken {\n    cancelled = false;\n    onCancelled = new Callbacks();\n    cancel() {\n        if (this.cancelled) return;\n        this.cancelled = true;\n        this.onCancelled.invoke();\n    }\n    throwIfCancelled() {\n        if (this.cancelled)\n            throw new Error(\"operation cancelled.\");\n    }\n}\n\nexport interface IId {\n    id: keyof any;\n}\n\nexport class DataUpdatingHelper<T extends IId, TData extends IId = T> {\n    items: Iterable<T>;\n    update(newData: Iterable<TData>) {\n        const oldData = this.items;\n        var dataDict: Record<keyof any, TData> = {};\n        for (const n of newData) {\n            dataDict[this.dataSelectId(n)] = n;\n        }\n        var itemDict: Record<any, T> = {};\n        var removed: T[] = [];\n        for (const d of oldData) {\n            const id = this.selectId(d);\n            if (dataDict[id] !== undefined) {\n                itemDict[id] = d;\n            } else {\n                removed.push(d);\n            }\n        }\n        for (let i = removed.length - 1; i >= 0; i--)\n            this.removeItem(removed[i]);\n        var pos = 0;\n        for (const n of newData) {\n            const d = itemDict[this.dataSelectId(n)];\n            if (d !== undefined) {\n                this.updateItem(d, n);\n            } else {\n                this.addItem(n, pos);\n            }\n            pos++;\n        }\n    }\n    updateOrRebuildAll(newData: Iterable<TData>) {\n        this.update(newData);\n        if (!this.isSame(newData)) this.rebuildAll(newData);\n    }\n    isSame(newData: Iterable<TData>) {\n        var t = this.items[Symbol.iterator]();\n        for (const n of newData) {\n            var d = t.next();\n            if (d.done) return false;\n            if (this.selectId(d.value) !== this.dataSelectId(n)) return false;\n        }\n        if (!t.next().done) return false;\n        return true;\n    }\n    rebuildAll(newData: Iterable<TData>) {\n        var oldData = this.items;\n        if (oldData instanceof Array) {\n            for (let i = oldData.length - 1; i >= 0; i--) {\n                this.removeItem(oldData[i]);\n            }\n        } else {\n            for (const o of oldData) {\n                this.removeItem(o);\n            }\n        }\n        let i = 0;\n        for (const n of newData) {\n            this.addItem(n, i++);\n        }\n    }\n    protected selectId(obj: T): any { return obj.id; }\n    protected dataSelectId(obj: TData): any { return obj.id; }\n    addItem(obj: TData, pos: number) { }\n    updateItem(old: T, data: TData) { }\n    removeItem(obj: T) { }\n}\n\nexport class EventRegistrations {\n    list: { event: Callbacks; func: AnyFunc; }[] = [];\n    add<T extends AnyFunc>(event: Callbacks<T>, func: T) {\n        this.list.push({ event, func });\n        event.add(func);\n        return func;\n    }\n    removeAll() {\n        while (this.list.length) {\n            var r = this.list.pop()!;\n            r.event.remove(r.func);\n        }\n    }\n}\n\nexport class TextCompositionWatcher {\n    dom: HTMLElement;\n    onCompositingChanged = new Callbacks<Action>();\n    private _isCompositing = false;\n    get isCompositing() { return this._isCompositing; }\n    set isCompositing(val) {\n        this._isCompositing = val;\n        this.onCompositingChanged.invoke();\n    }\n    constructor(dom: IDOM) {\n        this.dom = dom.getDOM();\n        this.dom.addEventListener('compositionstart', (ev) => {\n            this.isCompositing = true;\n        });\n        this.dom.addEventListener('compositionend', (ev) => {\n            this.isCompositing = false;\n        });\n    }\n}\n\nexport class InputStateTracker {\n    state = {\n        mouseDown: false,\n        mouseIn: false,\n        focusIn: false,\n    };\n    private _removeEvents: Action | null = null;\n    private _removePointerEvents: Action | null = null;\n    readonly onChanged = new Callbacks<Action<keyof InputStateTracker['state']>>();\n    constructor(readonly dom: HTMLElement) {\n        this._removeEvents = utils.listenEvents(dom, ['mouseenter', 'mouseleave', 'focusin', 'focusout'], (e) => {\n            switch (e.type) {\n                case 'mouseenter':\n                    this.stateChanged('mouseIn', true);\n                    break;\n                case 'mouseleave':\n                    this.stateChanged('mouseIn', false);\n                    break;\n                case 'focusin':\n                    this.stateChanged('focusIn', true);\n                    break;\n                case 'focusout':\n                    this.stateChanged('focusIn', false);\n                    break;\n            }\n        }).remove;\n\n        this._removePointerEvents = utils.listenPointerEvents(dom, (e) => {\n            if (e.action == 'down') {\n                this.stateChanged('mouseDown', true);\n                return 'track';\n            } else if (e.action == 'up') {\n                this.stateChanged('mouseDown', false);\n            }\n        }).remove;\n    }\n    private stateChanged<T extends keyof InputStateTracker['state']>(state: T, val: InputStateTracker['state'][T]) {\n        this.state[state] = val;\n        this.onChanged.invoke(state);\n    }\n    removeListeners() {\n        this._removeEvents?.();\n        this._removePointerEvents?.();\n        this._removePointerEvents = this._removeEvents = null;\n    }\n}\n","import { Action, Func, FuncOrVal, utils } from \"./utils\";\n\n// BuildDOM types & implementation:\nexport type BuildDomExpr = string | BuildDomNode | HTMLElement | Node | IDOM;\n\nexport interface IDOM {\n    getDOM(): HTMLElement;\n    addChild(child: IDOM): void;\n}\n\nexport type BuildDomTag = string;\n\nexport type BuildDomReturn = HTMLElement | Text | Node;\n\nexport interface BuildDomNode {\n    tag?: BuildDomTag;\n    child?: BuildDomExpr[] | BuildDomExpr;\n    text?: FuncOrVal<string>;\n    hidden?: FuncOrVal<boolean>;\n    init?: Action<HTMLElement>;\n    update?: Action<HTMLElement>;\n    _ctx?: BuildDOMCtx | {};\n    _key?: string;\n    [key: string]: any;\n}\n\nexport class BuildDOMCtx {\n    dict: Record<string, HTMLElement>;\n    actions: BuildDOMUpdateAction[];\n    constructor(dict?: BuildDOMCtx['dict'] | {}) {\n        this.dict = dict ?? {};\n    }\n    static EnsureCtx(ctxOrDict: BuildDOMCtx | {}, origctx: BuildDOMCtx | null): BuildDOMCtx {\n        var ctx: BuildDOMCtx;\n        if (ctxOrDict instanceof BuildDOMCtx) ctx = ctxOrDict;\n        else ctx = new BuildDOMCtx(ctxOrDict);\n        if (origctx) {\n            if (!origctx.actions) origctx.actions = [];\n            ctx.actions = origctx.actions;\n        }\n        return ctx;\n    }\n    setDict(key: string, node: HTMLElement) {\n        if (!this.dict) this.dict = {};\n        this.dict[key] = node;\n    }\n    addUpdateAction(action: BuildDOMUpdateAction) {\n        if (!this.actions) this.actions = [];\n        this.actions.push(action);\n        // BuildDOMCtx.executeAction(action);\n    }\n    update() {\n        if (!this.actions) return;\n        for (const a of this.actions) {\n            BuildDOMCtx.executeAction(a);\n        }\n    }\n    static executeAction(a: BuildDOMUpdateAction) {\n        switch (a[0]) {\n            case 'text':\n                a[1].textContent = a[2]();\n                break;\n            case 'hidden':\n                a[1].hidden = a[2]();\n                break;\n            case 'update':\n                a[2](a[1]);\n                break;\n            default:\n                console.warn('unknown action', a);\n                break;\n        }\n    }\n}\n\ntype BuildDOMUpdateAction =\n    | ['text', Node, Func<string>]\n    | ['hidden', HTMLElement, Func<boolean>]\n    | ['update', HTMLElement, Action<HTMLElement>];\n\n\nvar createElementFromTag = function (tag: BuildDomTag): HTMLElement {\n    var reg = /[#\\.^]?[\\w\\-]+/y;\n    var match;\n    var ele;\n    while (match = reg.exec(tag)) {\n        var val = match[0];\n        var ch = val[0];\n        if (ch === '.') {\n            ele.classList.add(val.substr(1));\n        } else if (ch === '#') {\n            ele.id = val.substr(1);\n        } else {\n            if (ele) throw new Error('unexpected multiple tags');\n            ele = document.createElement(val);\n        }\n    }\n    return ele;\n};\n\nfunction tryHandleValues(obj: BuildDomExpr, ctx: BuildDOMCtx | null) {\n    if (typeof (obj) === 'string') { return document.createTextNode(obj); }\n    if (typeof obj === 'function') {\n        const val = (obj as any)();\n        if (!val || typeof val !== 'object') {\n            const node = document.createTextNode(val);\n            ctx?.addUpdateAction(['text', node, obj]);\n            return node;\n        } else {\n            throw new Error('Unexpected function return value');\n        }\n    }\n    if (Node && obj instanceof Node) return obj as Node;\n    return null;\n}\n\nvar buildDomCore = function (obj: BuildDomExpr, ttl: number, ctx: BuildDOMCtx | null): BuildDomReturn {\n    if (ttl-- < 0) throw new Error('ran out of TTL');\n    var r = tryHandleValues(obj, ctx);\n    if (r) return r;\n    if (obj instanceof JsxNode) return obj.buildDom(ctx, ttl);\n    if ('getDOM' in (obj as any)) return (obj as any).getDOM();\n    const tag = (obj as BuildDomNode).tag;\n    if (!tag) throw new Error('no tag');\n    var node = createElementFromTag(tag);\n    if (obj['_ctx']) ctx = BuildDOMCtx.EnsureCtx(obj['_ctx'], ctx);\n    for (var key in obj as any) {\n        if (obj.hasOwnProperty(key)) {\n            var val = obj[key];\n            buildDOMHandleKey(key, val, node, ctx, ttl);\n        }\n    }\n    const init = obj['init'];\n    if (init) init(node);\n\n    return node;\n};\n\nvar buildDOMHandleKey = function (key: string, val: any, node: HTMLElement, ctx: BuildDOMCtx | null, ttl: number) {\n    if (key === 'child') {\n        if (val instanceof Array) {\n            val.forEach(function (val) {\n                if (val instanceof Array) {\n                    val.forEach(function (val) {\n                        node.appendChild(buildDomCore(val, ttl, ctx));\n                    });\n                } else {\n                    node.appendChild(buildDomCore(val, ttl, ctx));\n                }\n            });\n        } else {\n            node.appendChild(buildDomCore(val, ttl, ctx));\n        }\n    } else if (key === '_key') {\n        ctx!.setDict(val, node);\n    } else if (key === 'text') {\n        if (typeof val === 'function') {\n            ctx!.addUpdateAction(['text', node, val]);\n        } else {\n            node.textContent = val;\n        }\n    } else if (key === 'class') {\n        node.className = val;\n    } else if (key === 'hidden' && typeof val === 'function') {\n        ctx!.addUpdateAction(['hidden', node, val]);\n    } else if (key === 'update' && typeof val === 'function') {\n        ctx!.addUpdateAction(['update', node, val]);\n    } else if (key === 'init') {\n        // no-op\n    } else {\n        node[key] = val;\n    }\n};\n\nexport const buildDOM: typeof utils['buildDOM'] = utils.buildDOM = function (obj: BuildDomExpr, ctx: BuildDOMCtx): any {\n    return buildDomCore(obj, 32, ctx);\n};\n\nexport class JsxNode<T extends IDOM> implements IDOM {\n    tag: T | string;\n    attrs: Record<any, any> | undefined;\n    child: any[] | undefined;\n    constructor(tag: any, attrs: Record<any, any> | undefined, childs: any[] | undefined) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.child = childs;\n    }\n    getDOM(): HTMLElement {\n        return this.buildDom(null, 64) as any;\n    }\n    private _getDOMExpr(): BuildDomExpr {\n        return { tag: this.tag as string, child: this.child, ...this.attrs };\n    }\n    buildDom(ctx: BuildDOMCtx | null, ttl: number) {\n        return this.buildView(ctx, ttl).getDOM();\n    }\n    buildView(ctx: BuildDOMCtx | null, ttl: number)\n        : T extends IDOM ? T : T extends keyof HTMLElementTagNameMap ? HTMLElementTagNameMap[T] : HTMLElement {\n        if (ttl-- < 0) throw new Error('ran out of TTL');\n        if (typeof this.tag === 'string') return buildDomCore(this._getDOMExpr(), ttl, ctx) as any;\n        if (this.child) for (const it of this.child) {\n            if (it instanceof Array) {\n                it.forEach(it => (this.tag as IDOM).addChild(jsxBuildCore(it, ttl, ctx) as any));\n            } else {\n                (this.tag as IDOM).addChild(jsxBuildCore(it, ttl, ctx) as any);\n            }\n        }\n        return this.tag as any;\n    }\n    addChild(child: IDOM): void {\n        if (this.child == null) this.child = [];\n        this.child.push(child);\n    }\n}\n\nexport function jsxBuildCore(node: JsxNode<any> | BuildDomExpr, ttl: number, ctx: BuildDOMCtx | null) {\n    if (ttl-- < 0) throw new Error('ran out of TTL');\n    var r = tryHandleValues(node, ctx);\n    if (r) return r;\n    if (node instanceof JsxNode) {\n        return node.buildView(ctx, ttl);\n    } else {\n        throw new Error(\"Unknown node type\");\n    }\n}\n\nexport function jsxBuild<T extends IDOM>(node: JsxNode<T>, ctx?: BuildDOMCtx): T {\n    return jsxBuildCore(node, 64, ctx || new BuildDOMCtx());\n}\n\nexport function jsxFactory<T extends string | { new(arg): IDOM; }>(tag: T, attrs: Record<any, any>, ...childs: any)\n    : T extends keyof HTMLElementTagNameMap ? HTMLElementTagNameMap[T]\n    : T extends { new(arg): infer U; } ? U extends IDOM ? JsxNode<U> : never : never {\n    if (typeof tag === 'string') {\n        return new JsxNode(tag, attrs, childs) as any;\n    } else {\n        return new JsxNode(new (tag as any)(attrs), undefined, childs) as any;\n    }\n}\n\nexport const jsx = utils.jsx = utils.jsxFactory = jsxFactory;\n\nexport class View<T extends HTMLElement = HTMLElement> implements IDOM {\n    constructor(dom?: BuildDomExpr) {\n        if (dom) this.domExprCreated(dom);\n    }\n\n    static getView(obj: IDOM) { return obj instanceof View ? obj : new View(obj); }\n\n    public parentView?: ContainerView<View> = undefined;\n    public _position?: number = undefined;\n    get position() { return this._position; }\n\n    domctx = new BuildDOMCtx();\n    protected _dom: T | undefined = undefined;\n    public get domCreated() { return !!this._dom; }\n    public get dom() {\n        this.ensureDom();\n        return this._dom!;\n    }\n    public get hidden() { return this.dom.hidden; }\n    public set hidden(val: boolean) { this.dom.hidden = val; }\n    public ensureDom() {\n        if (!this._dom) {\n            var r = this.createDom();\n            this.domExprCreated(r);\n        }\n    }\n    private domExprCreated(r: BuildDomExpr) {\n        this._dom = utils.buildDOM(r, this.domctx) as T;\n        this.postCreateDom();\n        this.updateDom();\n    }\n    protected createDom(): BuildDomExpr {\n        return document.createElement('div');\n    }\n    /** Will be called when the dom is created */\n    protected postCreateDom() {\n    }\n    /** Will be called when the dom is created, after postCreateDom() */\n    public updateDom() {\n        this.domctx.update();\n    }\n    /** Assign key-values and call `updateDom()` */\n    updateWith(kv: Partial<this>) {\n        utils.objectApply(this, kv);\n        this.updateDom();\n    }\n    toggleClass(clsName: string, force?: boolean) {\n        utils.toggleClass(this.dom, clsName, force);\n    }\n    appendView(view: View) { return this.dom.appendView(view); }\n    getDOM() { return this.dom; }\n    addChild(child: IDOM) {\n        if (child instanceof View) {\n            this.appendView(child);\n        } else {\n            this.dom.appendChild(utils.buildDOM(child));\n        }\n    }\n\n    _onactive: Action<MouseEvent> | undefined = undefined;\n    _onActiveCbs: Action<any>[] | undefined = undefined;\n    get onactive() { return this._onactive; }\n    set onactive(val) {\n        if (!!this._onactive !== !!val) {\n            if (val) {\n                this._onActiveCbs = [\n                    (e: MouseEvent) => {\n                        this._onactive!(e);\n                    },\n                    (e: KeyboardEvent) => {\n                        this.handleKeyDown(e, this._onactive!);\n                    }\n                ];\n                this.dom.addEventListener('click', this._onActiveCbs[0]);\n                this.dom.addEventListener('keydown', this._onActiveCbs[1]);\n            } else {\n                this.dom.removeEventListener('click', this._onActiveCbs![0]);\n                this.dom.removeEventListener('keydown', this._onActiveCbs![1]);\n                this._onActiveCbs = undefined;\n            }\n        }\n        this._onactive = val;\n    }\n\n    handleKeyDown(e: KeyboardEvent, onactive: Action<MouseEvent | null>) {\n        if (e.code === 'Enter') {\n            const rect = this.dom.getBoundingClientRect();\n            onactive(new MouseEvent('click', {\n                clientX: rect.x, clientY: rect.y,\n                relatedTarget: this.dom\n            }));\n            e.preventDefault();\n        }\n    }\n}\n\ndeclare global {\n    interface Node {\n        getDOM(): this;\n        appendView(view: View);\n        addChild(child: IDOM): void;\n    }\n}\n\nNode.prototype.getDOM = function () { return this; };\n\nNode.prototype.addChild = function (child) {\n    this.appendChild(utils.buildDOM(child));\n};\n\nNode.prototype.appendView = function (this: Node, view: View) {\n    this.appendChild(view.dom);\n};\n\nexport class ContainerView<T extends View> extends View {\n    items: T[] = [];\n    appendView(view: T) {\n        this.addView(view as any);\n    }\n    addView(view: T, pos?: number) {\n        const items = this.items;\n        if (view.parentView) throw new Error('the view is already in a container view');\n        view.parentView = this;\n        if (pos === undefined) {\n            view._position = items.length;\n            items.push(view);\n            this._insertToDom(view, items.length - 1);\n        } else {\n            items.splice(pos, 0, view);\n            for (let i = pos; i < items.length; i++) {\n                items[i]._position = i;\n            }\n            this._insertToDom(view, pos);\n        }\n    }\n    removeView(view: T | number) {\n        view = this._ensureItem(view);\n        this._removeFromDom(view);\n        var pos = view._position!;\n        view.parentView = view._position = undefined;\n        this.items.splice(pos, 1);\n        for (let i = pos; i < this.items.length; i++) {\n            this.items[i]._position = i;\n        }\n    }\n    removeAllView() {\n        while (this.length) this.removeView(this.length - 1);\n    }\n    updateChildrenDom() {\n        for (const item of this.items) {\n            item.updateDom();\n        }\n    }\n    protected _insertToDom(item: T, pos: number) {\n        if (pos == this.items.length - 1) this.dom.appendChild(item.dom);\n        else this.dom.insertBefore(item.dom, this.items[pos + 1]?.dom || null);\n    }\n    protected _removeFromDom(item: T) {\n        if (item.domCreated) item.dom.remove();\n    }\n    protected _ensureItem(item: T | number) {\n        if (typeof item === 'number') item = this.items[item];\n        else if (!item) throw new Error('item is null or undefined.');\n        else if (item.parentView !== this) throw new Error('the item is not in this listview.');\n        return item;\n    }\n\n    [Symbol.iterator]() { return this.items[Symbol.iterator](); }\n    get length() { return this.items.length; }\n    get(idx: number) {\n        return this.items[idx];\n    }\n    map<TRet>(func: (lvi: T) => TRet) { return utils.arrayMap(this, func); }\n    find(func: (lvi: T, idx: number) => any) { return utils.arrayFind(this, func); }\n    forEach(func: (lvi: T, idx: number) => void) { return utils.arrayForeach(this, func); }\n}\n","// file: I18n.ts\n\nimport { FlagsInput } from \"./viewlib\";\n\nexport interface I18nData {\n    [lang: string]: LangObj;\n}\n\nexport type LangObj = Record<string, string>;\n\n/** Internationalization (aka i18n) helper class */\nexport class I18n {\n    data: I18nData = {};\n    curLang = 'en';\n    missing = new Map<string, 1>();\n    /** Get i18n string for `key`, return `key` when not found. */\n    get(key, arg?: any[]): string {\n        return this.get2(key, arg) || key;\n    }\n    /** Get i18n string for `key`, return `null` when not found. */\n    get2(key, arg?: any[], lang?: string): string | null {\n        lang = lang || this.curLang;\n        var langObj = this.data[lang];\n        if (!langObj) {\n            console.log('i18n missing lang: ' + lang);\n            return null;\n        }\n        var r = langObj[key];\n        if (!r) {\n            if (!this.missing.has(key)) {\n                this.missing.set(key, 1);\n                console.log('i18n missing key: ' + key);\n            }\n            return null;\n        }\n        if (arg) {\n            for (const key in arg) {\n                if (arg.hasOwnProperty(key)) {\n                    const val = arg[key];\n                    r = r.replace('{' + key + '}', val);\n                    // Note that it only replaces the first occurrence.\n                }\n            }\n        }\n        return r;\n    }\n    /** Fills data with an 2darray */\n    add2dArray(array: [...string[][]]) {\n        const langObjs: LangObj[] = [];\n        const langs = array[0];\n        for (const lang of langs) {\n            langObjs.push(this.data[lang] = this.data[lang] || {});\n        }\n        for (let i = 1; i < array.length; i++) {\n            const line = array[i];\n            const key = line[0];\n            for (let j = 0; j < line.length; j++) {\n                const val = line[j];\n                langObjs[j][key] = val;\n            }\n        }\n    }\n    renderElements(elements) {\n        console.log('i18n elements rendering');\n        elements.forEach(x => {\n            for (const node of x.childNodes) {\n                if (node.nodeType === Node.TEXT_NODE) {\n                    // console.log('node', node);\n                    var r = this.get2(node.beforeI18n || node.textContent);\n                    if (r) {\n                        node.beforeI18n = node.beforeI18n || node.textContent;\n                        node.textContent = r;\n                    }\n                    else {\n                        if (node.beforeI18n) {\n                            node.textContent = node.beforeI18n;\n                        }\n                        console.log('missing key for node', node);\n                    }\n                }\n            }\n        });\n    }\n    /**\n     * Detect the best available language using\n     * the user language preferences provided by the browser.\n     * @param langs Available languages\n     */\n    static detectLanguage(langs: string[]) {\n        var cur: string | null = null;\n        var curIdx = -1;\n        var languages: string[] = [];\n        // ['en-US'] -> ['en-US', 'en']\n        (navigator.languages || [navigator.language]).forEach(lang => {\n            languages.push(lang);\n            if (lang.indexOf('-') > 0)\n                languages.push(lang.substr(0, lang.indexOf('-')));\n        });\n        langs.forEach((l) => {\n            var idx = languages.indexOf(l);\n            if (!cur || (idx !== -1 && idx < curIdx)) {\n                cur = l;\n                curIdx = idx;\n            }\n        });\n        return cur || langs[0];\n    }\n}\n\nexport function createStringBuilder(i18n: I18n) {\n    var arrBuilder = createArrayBuilder(i18n);\n\n    return function (literals: TemplateStringsArray, ...placeholders: any[]) {\n        if (placeholders.length === 0) {\n            return i18n.get(literals[0]);\n        }\n        return arrBuilder(literals, ...placeholders).join('');\n    }\n}\n\nexport function createArrayBuilder(i18n: I18n) {\n    var formatCache = new WeakMap<TemplateStringsArray, string>();\n    var parseCache = new Map<string, (string | number)[]>();\n\n    return function <T extends any[]>(literals: TemplateStringsArray, ...placeholders: T): (string | T)[] {\n        if (placeholders.length === 0) {\n            return [i18n.get(literals[0])];\n        }\n\n        // Generate format string from template string if it's not cached:\n        let format = formatCache.get(literals);\n        if (format === undefined) {\n            format = '';\n            for (let i = 0; i < literals.length; i++) {\n                const lit = literals[i];\n                format += lit;\n                if (i < placeholders.length) {\n                    format += '{' + i + '}';\n                }\n            }\n            formatCache.set(literals, format);\n        }\n\n        const translatedFormat = i18n.get(format);\n\n        // Also cache parsed template\n        let parsed = parseCache.get(translatedFormat);\n        if (parsed === undefined) {\n            parsed = parseTemplate(translatedFormat);\n        }\n\n        return parsed.map(x => typeof x == 'number' ? placeholders[x] : x);\n    }\n}\n\nfunction parseTemplate(template: string): (string | number)[] {\n    const result: (string | number)[] = [];\n    let state = 0; // 0: normal / 1: after '{' / 2: after '}' / 3: after '{' and numbers\n    let buf = '';\n    for (let i = 0; i < template.length; i++) {\n        const ch = template[i];\n        switch (ch) {\n            case '{':\n                if (state == 0) state = 1;\n                else if (state == 1) { state = 0; buf += '{'; }\n                else throw new Error(`Expected number, got '${ch}' at ${i}`);\n                break;\n            case '}':\n                if (state == 3) { state = 0; result.push(+buf); buf = ''; }\n                else if (state == 0) { state = 2; }\n                else if (state == 2) { state = 0; buf += '}'; }\n                else throw new Error(`Expected number, got '${ch}' at ${i}`);\n                break;\n            default:\n                if (state == 2) throw new Error(`Expected '}', got '${ch}' at ${i}`);\n                else if (state == 1) { state = 3; if (buf) result.push(buf); buf = ''; }\n                buf += ch;\n        }\n    }\n    if (state != 0) throw new Error(\"Unexpected end of template string\");\n    if (buf) result.push(buf);\n    return result;\n}\n\nexport var i18n = new I18n();\n\nexport const I = createStringBuilder(i18n);\n","// file: viewlib.ts\n\nimport { utils, Action, Callbacks, Timer } from \"./utils\";\nimport { BuildDomExpr, BuildDomNode, ContainerView, IDOM, View } from \"./view\";\nimport { I, i18n } from \"./I18n\";\nimport css from \"../style.css\";\n\nexport function getWebfxCss() { return css; }\nlet cssInjected = false;\nexport function injectWebfxCss() {\n    if (!cssInjected) {\n        utils.injectCss(getWebfxCss(), { tag: 'style.webfx-injected-style' });\n        cssInjected = true;\n    }\n}\n\n/** DragManager is used to help exchange information between views */\nexport var dragManager = new class DragManager {\n    /** The item being dragged */\n    _currentItem: any | null = null;\n    _currentArray: any[] | null = null;\n    get currentItem() { return this._currentItem ?? this._currentArray?.[0] ?? null; };\n    get currentArray() {\n        if (this._currentItem) return [this._currentItem];\n        return this._currentArray;\n    }\n    onDragStart = new Callbacks();\n    onDragEnd = new Callbacks();\n    start(item: any) {\n        this._currentItem = item;\n        console.log('drag start', item);\n        this.onDragStart.invoke();\n    }\n    startArray(arr: any[]) {\n        this._currentArray = arr;\n        console.log('drag start array', arr);\n        this.onDragStart.invoke();\n    }\n    end() {\n        this._currentItem = null;\n        this._currentArray = null;\n        console.log('drag end');\n        this.onDragEnd.invoke();\n    }\n};\n\nexport abstract class ListViewItem extends View implements ISelectable {\n    get listview() { return this.parentView as ListView<this>; }\n    get selectionHelper() { return this.listview.selectionHelper; }\n\n    get dragData() { return this.dom.textContent; }\n\n    onDragover: ListView['onDragover'];\n    onContextMenu: ListView['onContextMenu'];\n\n    dragging?: boolean = undefined;\n\n    private _selected: boolean = false;\n    public get selected(): boolean { return this._selected; }\n    public set selected(v: boolean) {\n        this._selected = v;\n        this.domCreated && this.updateDom();\n        this.onSelectedChanged.invoke();\n    }\n    onSelectedChanged = new Callbacks();\n\n\n    remove() {\n        if (!this.listview) return;\n        this.listview.remove(this);\n    }\n\n    protected postCreateDom() {\n        super.postCreateDom();\n        this.dom.setAttribute('role', 'listitem');\n        this.dom.addEventListener('click', (ev) => {\n            if (this.listview?.selectionHelper.handleItemClicked(this, ev)) return;\n            this.listview?.onItemClicked?.(this);\n        });\n        this.dom.addEventListener('keydown', (ev) => {\n            if (ev.code === 'Enter') {\n                if (ev.altKey) {\n                    const rect = this.dom.getBoundingClientRect();\n                    const mouseev = new MouseEvent('contextmenu', {\n                        clientX: rect.left, clientY: rect.top,\n                        relatedTarget: this.dom\n                    });\n                    (this.onContextMenu ?? this.listview?.onContextMenu)?.(this, mouseev);\n                } else {\n                    if (this.listview?.selectionHelper.handleItemClicked(this, ev)) return;\n                    this.listview?.onItemClicked?.(this);\n                }\n                ev.preventDefault();\n            } else if (this.listview && (ev.code === 'ArrowUp' || ev.code === 'ArrowDown')) {\n                const direction = ev.code === 'ArrowUp' ? -1 : 1;\n                const item = this.listview.get(this.position! + direction);\n                if (item) {\n                    item.dom.focus();\n                    ev.preventDefault();\n                }\n            } else if (this.listview && (ev.code === 'PageUp' || ev.code === 'PageDown')) {\n                const dir = ev.code === 'PageUp' ? -1 : 1;\n                const scrollBox = this.listview.scrollBox;\n                const targetY = dir > 0 ? (this.dom.offsetTop + scrollBox.offsetHeight)\n                    : (this.dom.offsetTop + this.dom.offsetHeight - scrollBox.offsetHeight);\n                const len = this.listview.length;\n                let item = this;\n                while (dir > 0 ? (targetY > item.dom.offsetTop + item.dom.offsetHeight)\n                    : (targetY < item.dom.offsetTop)) {\n                    const nextIdx = item.position! + dir;\n                    if (nextIdx < 0 || nextIdx >= len) break;\n                    item = this.listview.get(nextIdx);\n                }\n                if (item && item !== this) {\n                    item.dom.focus();\n                    ev.preventDefault();\n                }\n            } else if (this.listview && (ev.code === 'Home' || ev.code === 'End')) {\n                this.listview.get(ev.code == 'Home' ? 0 : (this.listview.length - 1)).dom.focus();\n                ev.preventDefault();\n            } else if (this.listview && this.listview.selectionHelper.handleItemKeyDown(this, ev)) {\n                // noop\n            }\n        });\n        this.dom.addEventListener('contextmenu', (ev) => {\n            (this.onContextMenu ?? this.listview?.onContextMenu)?.(this, ev);\n        });\n        this.dom.addEventListener('dragstart', (ev) => {\n            if (!(this.dragging ?? this.listview?.dragging)) {\n                ev.preventDefault();\n                return;\n            }\n            var arr: ListViewItem[] = [];\n            if (this.selected) {\n                arr = [...this.selectionHelper.selectedItems];\n                arr.sort((a, b) => a.position! - b.position!); // remove this line to get a new feature!\n            } else {\n                arr = [this];\n            }\n            dragManager.startArray(arr);\n            ev.dataTransfer!.setData('text/plain', arr.map(x => x.dragData).join('\\r\\n'));\n            arr.forEach(x => x.dom.style.opacity = '.5');\n        });\n        this.dom.addEventListener('dragend', (ev) => {\n            var arr = dragManager.currentArray as ListViewItem[];\n            dragManager.end();\n            ev.preventDefault();\n            arr.forEach(x => x.dom.style.opacity = '');\n        });\n        this.dom.addEventListener('dragover', (ev) => {\n            this.dragHandler(ev, 'dragover');\n        });\n        this.dom.addEventListener('dragenter', (ev) => {\n            this.dragHandler(ev, 'dragenter');\n        });\n        this.dom.addEventListener('dragleave', (ev) => {\n            this.dragHandler(ev, 'dragleave');\n        });\n        this.dom.addEventListener('drop', (ev) => {\n            this.dragHandler(ev, 'drop');\n        });\n    }\n    // https://stackoverflow.com/questions/7110353\n    private enterctr = 0;\n    private dragoverPlaceholder: [HTMLElement, 'move' | 'move-after'] | null = null;\n    dragHandler(ev: DragEvent, type: string) {\n        const item = dragManager.currentItem;\n        let items = dragManager.currentArray! as ListViewItem[];\n        const drop = type === 'drop';\n        const arg: DragArg<ListViewItem> = {\n            source: item, target: this,\n            sourceItems: items,\n            event: ev, drop: drop,\n            accept: false\n        };\n        if (item instanceof ListViewItem) {\n            if (this.listview?.moveByDragging && item.listview === this.listview) {\n                ev.preventDefault();\n                const selfInside = (items.indexOf(this) >= 0);\n                const after = ev.clientY - this.dom.getBoundingClientRect().top > this.dom.offsetHeight / 2;\n                if (!(selfInside && drop))\n                    arg.accept = after ? 'move-after' : 'move';\n                if (!drop) {\n                    ev.dataTransfer!.dropEffect = 'move';\n                } else {\n                    if (items.indexOf(this) === -1) {\n                        let newpos = this.position!;\n                        if (after) newpos++;\n                        for (const it of items) {\n                            if (it !== this) {\n                                if (newpos > it.position!) newpos--;\n                                this.listview.move(it as this, newpos);\n                                newpos++;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        const onDragover = this.onDragover ?? this.listview?.onDragover;\n        if (!arg.accept && onDragover) {\n            onDragover(arg);\n            if (drop || arg.accept) ev.preventDefault();\n        }\n        const onContextMenu = this.onContextMenu ?? this.listview?.onContextMenu;\n        if (!arg.accept && item === this && onContextMenu) {\n            if (drop) onContextMenu(this, ev);\n            else ev.preventDefault();\n        }\n        if (type === 'dragenter' || type == 'dragover' || type === 'dragleave' || drop) {\n            if (type === 'dragenter') {\n                this.enterctr++;\n            } else if (type === 'dragleave') {\n                this.enterctr--;\n            } else if (type === 'drop') {\n                this.enterctr = 0;\n            }\n            let hover = this.enterctr > 0;\n            this.toggleClass('dragover', hover);\n            let placeholder = hover && (arg.accept === 'move' || arg.accept === 'move-after') && arg.accept;\n            if (placeholder != (this.dragoverPlaceholder?.[1] ?? false)) {\n                this.dragoverPlaceholder?.[0].remove();\n                this.dragoverPlaceholder = null;\n                if (placeholder) {\n                    this.dragoverPlaceholder = [\n                        utils.buildDOM({ tag: 'div.dragover-placeholder' }) as HTMLElement,\n                        placeholder\n                    ];\n                    var before = this.dom as Element;\n                    if (arg.accept === 'move-after') before = before.nextElementSibling!;\n                    this.dom.parentElement!.insertBefore(this.dragoverPlaceholder[0], before);\n                }\n            }\n        }\n    };\n}\n\ninterface DragArg<T> {\n    source: ListViewItem, target: T, drop: boolean,\n    sourceItems: ListViewItem[],\n    accept: boolean | 'move' | 'move-after', event: DragEvent;\n}\n\nexport class ListView<T extends ListViewItem = ListViewItem> extends ContainerView<T> implements Iterable<T> {\n    // private items: Array<T> = [];\n    onItemClicked: null | ((item: T) => void) = null;\n    /**\n     * Allow user to drag an item.\n     */\n    dragging = false;\n    /**\n     * Allow user to drag an item and change its position.\n     */\n    moveByDragging = false;\n\n    selectionHelper = new SelectionHelper<T>();\n\n    private _scrollBox: HTMLElement | null = null;\n\n    get scrollBox() { return this._scrollBox || this.dom; }\n    set scrollBox(val: HTMLElement) { this._scrollBox = val; }\n\n    onItemMoved: null | ((item: T, from: number) => void) = null;\n    /** \n     * When dragover or drop\n     */\n    onDragover: null | ((arg: DragArg<T>) => void) = null;\n    onContextMenu: null | ((item: ListViewItem, ev: MouseEvent) => void) = null;\n    constructor(container?: BuildDomExpr) {\n        super(container);\n        this.selectionHelper.itemProvider = this;\n    }\n    protected postCreateDom() {\n        super.postCreateDom();\n        this.dom.setAttribute('role', 'list');\n    }\n    add(item: T, pos?: number) {\n        this.addView(item, pos);\n        if (this.dragging) item.dom.draggable = true;\n    }\n    remove(item: T | number, keepSelected?: boolean) {\n        item = this._ensureItem(item);\n        if (!keepSelected && item.selected) this.selectionHelper.toggleItemSelection(item);\n        this.removeView(item);\n    }\n    move(item: T | number, newpos: number) {\n        item = this._ensureItem(item);\n        this.remove(item, true);\n        this.add(item, newpos);\n        this.onItemMoved?.(item, item.position!);\n    }\n    /** Remove all items */\n    removeAll() {\n        while (this.length) this.remove(this.length - 1);\n    }\n    /** Remove all items and all DOM children */\n    clear() {\n        this.removeAll();\n        utils.clearChildren(this.dom);\n    }\n    ReplaceChild(dom: IDOM) {\n        this.clear();\n        this.dom.appendChild(dom.getDOM());\n    }\n}\n\nexport interface ISelectable {\n    selected: boolean;\n    position?: number;\n}\n\nexport class SelectionHelper<TItem extends ISelectable> {\n    _enabled: boolean = false;\n    get enabled() { return this._enabled; }\n    set enabled(val) {\n        if (!!val === !!this._enabled) return;\n        this._enabled = val;\n        while (this.selectedItems.length)\n            this.toggleItemSelection(this.selectedItems[0], false);\n        this.lastToggledItem = null;\n        this.onEnabledChanged.invoke();\n    }\n    onEnabledChanged = new Callbacks();\n\n    itemProvider: null | {\n        get: (pos: number) => TItem;\n        length: number;\n    } = null;\n\n    ctrlForceSelect = false;\n\n    selectedItems: TItem[] = [];\n    onSelectedItemsChanged = new Callbacks<(action: 'add' | 'remove', item: TItem) => void>();\n    get count() { return this.selectedItems.length; }\n\n    /** For shift-click */\n    lastToggledItem: TItem | null = null;\n\n    /** Returns true if it's handled by the helper. */\n    handleItemClicked(item: TItem, ev: MouseEvent | KeyboardEvent): boolean {\n        if (!this.enabled) {\n            if (!this.ctrlForceSelect || !ev.ctrlKey) return false;\n            this.enabled = true;\n        }\n        if (ev.shiftKey && this.lastToggledItem && this.itemProvider) {\n            var toSelect = !!this.lastToggledItem.selected;\n            var start = item.position!, end = this.lastToggledItem.position!;\n            if (start > end) [start, end] = [end, start];\n            for (let i = start; i <= end; i++) {\n                this.toggleItemSelection(this.itemProvider.get(i), toSelect);\n            }\n            this.lastToggledItem = item;\n        } else {\n            this.toggleItemSelection(item);\n        }\n        ev.preventDefault();\n        return true;\n    }\n\n    /** Returns true if it's handled by the helper. */\n    handleItemKeyDown(item: TItem, ev: KeyboardEvent): boolean {\n        if (!this.enabled) return false;\n        if (this.itemProvider && ev.ctrlKey && ev.code === 'KeyA') {\n            const len = this.itemProvider.length;\n            for (let i = 0; i < len; i++) {\n                this.toggleItemSelection(this.itemProvider.get(i), true);\n            }\n            ev.preventDefault();\n            return true;\n        }\n        return false;\n    }\n\n    toggleItemSelection(item: TItem, force?: boolean) {\n        if (force !== undefined && force === !!item.selected) return;\n        if (item.selected) {\n            item.selected = false;\n            this.selectedItems.remove(item);\n            this.onSelectedItemsChanged.invoke('remove', item);\n        } else {\n            item.selected = true;\n            this.selectedItems.push(item);\n            this.onSelectedItemsChanged.invoke('add', item);\n        }\n        this.lastToggledItem = item;\n        if (this.count === 0 && this.ctrlForceSelect) this.enabled = false;\n    }\n}\n\nexport class ItemActiveHelper<T extends View> {\n    funcSetActive = (item: T, val: boolean) => item.toggleClass('active', val);\n    current: T | null = null;\n    constructor(init?: Partial<ItemActiveHelper<T>>) {\n        utils.objectApply(this, init);\n    }\n    set(item: T | null) {\n        if (this.current === item) return;\n        if (this.current) this.funcSetActive(this.current, false);\n        this.current = item;\n        if (this.current) this.funcSetActive(this.current, true);\n    }\n}\n\nexport class LazyListView<T extends ListViewItem = ListViewItem> extends ListView<T> {\n    private _loaded = 0;\n    private _lazy = false;\n    private _slowLoading: Promise<boolean> | null = null;\n    private _autoLoad: { interval: number, batchSize: number; } | null = null;\n    get loaded() { return this.loaded; }\n    get slowLoading() { return this._slowLoading; }\n    get autoLoad() { return this._autoLoad; }\n    get lazy() { return this._lazy; }\n    set lazy(val) {\n        this._lazy = val;\n        if (!val) this.ensureLoaded(this.length - 1);\n    }\n    ensureLoaded(pos: number) {\n        if (pos >= this.length) pos = this.length - 1;\n        while (this._loaded <= pos) {\n            this.dom.appendChild(this.items[this._loaded].dom);\n            this._loaded++;\n        }\n    }\n    loadNext(batchSize = 50) {\n        if (this._loaded < this.length) {\n            this.ensureLoaded(Math.min(this.length - 1, this._loaded + batchSize - 1));\n            return true;\n        }\n        return false;\n    }\n    slowlyLoad(interval = 30, batchSize = 50, autoLoad = false) {\n        if (autoLoad) this.enableAutoLoad(interval, batchSize);\n        if (this._slowLoading) return this._slowLoading;\n        if (this._loaded >= this.length) return Promise.resolve(true);\n        return this._slowLoading = new Promise<boolean>((r) => {\n            var cancel: Action;\n            var cont: Action;\n            var callback = () => {\n                if (!this._slowLoading || !this.loadNext(batchSize)) {\n                    this.lazy = !!this._autoLoad;\n                    cancel();\n                    r(!!this._slowLoading);\n                    this._slowLoading = null;\n                } else {\n                    cont();\n                }\n            };\n            if (interval == -1 && window['requestIdleCallback']) {\n                let handle: number;\n                cancel = () => window['cancelIdleCallback'](handle);\n                cont = () => {\n                    handle = window['requestIdleCallback'](callback);\n                };\n                cont();\n            } else {\n                if (interval == -1) interval = 30;\n                let timer = setInterval(callback, interval);\n                cancel = () => clearInterval(timer);\n                cont = () => { };\n            }\n        });\n    }\n    enableAutoLoad(interval = 30, batchSize = 50) {\n        this._autoLoad = { interval, batchSize };\n        this.slowlyLoad(interval, batchSize);\n    }\n    stopLoading() {\n        this._slowLoading = null;\n        this._autoLoad = null;\n    }\n    unload() {\n        this.stopLoading();\n        for (let i = this._loaded - 1; i >= 0; i--) {\n            this.items[i].dom.remove();\n        }\n        this.lazy = true;\n        this._loaded = 0;\n    }\n    protected _insertToDom(item: T, pos: number) {\n        if (!this.lazy || pos < this._loaded) {\n            super._insertToDom(item, pos);\n            this._loaded++;\n        } else {\n            if (this._autoLoad) {\n                this.slowlyLoad(this._autoLoad.interval, this._autoLoad.batchSize);\n            }\n        }\n    }\n    protected _removeFromDom(item: T) {\n        if (item.position! < this._loaded) {\n            super._removeFromDom(item);\n            this._loaded--;\n        }\n    }\n}\n\ntype SectionActionOptions = { text: string, onclick: Action<MouseEvent>; };\n\nexport class Section extends View {\n    titleView = new TextView({ tag: 'span.section-title' });\n    headerView = new View({\n        tag: 'div.section-header',\n        child: [\n            this.titleView\n        ]\n    });\n    constructor(arg?: { title?: string, content?: IDOM, actions?: SectionActionOptions[]; }) {\n        super();\n        this.ensureDom();\n        if (arg) {\n            if (arg.title) this.setTitle(arg.title);\n            if (arg.content) this.setContent(arg.content);\n            if (arg.actions) arg.actions.forEach(x => this.addAction(x));\n        }\n    }\n    createDom(): BuildDomExpr {\n        return {\n            _ctx: this,\n            tag: 'div.section',\n            child: [\n                this.headerView\n            ]\n        };\n    }\n    setTitle(text: string) {\n        this.titleView.text = text;\n    }\n    setContent(view: IDOM) {\n        var dom = this.dom;\n        var firstChild = dom.firstChild;\n        while (dom.lastChild !== firstChild) dom.removeChild(dom.lastChild!);\n        dom.appendChild(view.getDOM());\n    }\n    addAction(arg: SectionActionOptions) {\n        var view = new View({\n            tag: 'div.section-action.clickable',\n            text: arg.text,\n            tabIndex: 0\n        });\n        view.onactive = arg.onclick;\n        this.headerView.dom.appendChild(view.dom);\n    }\n}\n\ntype LoadingIndicatorState = 'normal' | 'running' | 'error';\n\nexport class LoadingIndicator extends View {\n    constructor(init?: Partial<LoadingIndicator>) {\n        super();\n        if (init) utils.objectApply(this, init);\n    }\n    private _status: LoadingIndicatorState = 'running';\n    get state() { return this._status; }\n    set state(val: LoadingIndicatorState) {\n        this._status = val;\n        ['running', 'error', 'normal'].forEach(x => this.toggleClass(x, val === x));\n    }\n    private _text: string;\n    private _textdom: HTMLElement;\n    get content() { return this._text; }\n    set content(val: string) { this._text = val; this.ensureDom(); this._textdom.textContent = val; }\n    onclick: ((e: MouseEvent) => void) | null = null;\n    reset() {\n        this.state = 'running';\n        this.content = I`Loading`;\n        this.onclick = null;\n    }\n    error(err, retry?: Action) {\n        this.state = 'error';\n        this.content = I`Oh no! Something just goes wrong:` + '\\r\\n' + err;\n        if (retry) {\n            this.content += '\\r\\n' + I`[Click here to retry]`;\n        }\n        this.onclick = retry as any;\n    }\n    async action(func: () => Promise<void>) {\n        try {\n            await func();\n        } catch (error) {\n            this.error(error, () => this.action(func));\n        }\n    }\n    createDom(): BuildDomExpr {\n        return {\n            _ctx: this,\n            tag: 'div.loading-indicator',\n            child: [{\n                tag: 'div.loading-indicator-inner',\n                child: [{ tag: 'div.loading-indicator-text', _key: '_textdom' }]\n            }],\n            onclick: (e) => this.onclick && this.onclick(e)\n        };\n    }\n    postCreateDom() {\n        this.reset();\n    }\n}\n\nexport class Overlay extends View {\n    createDom() {\n        return { tag: 'div.overlay' };\n    }\n    setCenterChild(centerChild: boolean) {\n        this.toggleClass('centerchild', centerChild);\n        return this;\n    }\n    setNoBg(nobg: boolean) {\n        this.toggleClass('nobg', nobg);\n        return this;\n    }\n    setFixed(fixed: boolean) {\n        this.toggleClass('fixed', fixed);\n        return this;\n    }\n}\n\nexport class EditableHelper {\n    editing = false;\n    beforeEdit: string | null = null;\n    element: HTMLElement;\n    onComplete: ((newName: string) => void) | null = null;\n    constructor(element: HTMLElement) {\n        this.element = element;\n    }\n    startEdit(onComplete?: this['onComplete']) {\n        if (this.editing) return;\n        this.editing = true;\n        var ele = this.element;\n        var beforeEdit = this.beforeEdit = ele.textContent!;\n        utils.toggleClass(ele, 'editing', true);\n        var input = utils.buildDOM({\n            tag: 'input', type: 'text', value: beforeEdit\n        }) as HTMLInputElement;\n        while (ele.firstChild) ele.removeChild(ele.firstChild);\n        ele.appendChild(input);\n        input.select();\n        input.focus();\n        var stopEdit = () => {\n            this.editing = false;\n            utils.toggleClass(ele, 'editing', false);\n            events.forEach(x => x.remove());\n            input.remove();\n            this.onComplete?.(input.value);\n            onComplete?.(input.value);\n        };\n        var events = [\n            utils.listenEvent(input, 'keydown', (evv) => {\n                if (evv.code === 'Enter') {\n                    stopEdit();\n                    evv.preventDefault();\n                }\n            }),\n            utils.listenEvent(input, 'focusout', (evv) => { stopEdit(); }),\n        ];\n    }\n    startEditAsync() {\n        return new Promise<string>((resolve) => this.startEdit(resolve));\n    }\n}\n\nexport class MenuItem extends ListViewItem {\n    text: string = '';\n    cls: 'normal' | 'dangerous' = 'normal';\n    onclick: Action<MouseEvent> | null = null;\n    constructor(init: Partial<MenuItem>) {\n        super();\n        utils.objectApply(this, init);\n    }\n    createDom(): BuildDomExpr {\n        return {\n            tag: 'div.item.no-selection',\n            tabIndex: 0\n        };\n    }\n    postCreateDom() {\n        super.postCreateDom();\n        this.onactive = (ev) => {\n            if (this.parentView instanceof ContextMenu) {\n                if (!this.parentView.keepOpen) this.parentView.close();\n            }\n            this.onclick?.(ev);\n        };\n    }\n    private _lastcls;\n    updateDom() {\n        this.dom.textContent = this.text;\n        if (this.cls !== this._lastcls) {\n            if (this._lastcls) this.dom.classList.remove(this._lastcls);\n            if (this.cls) this.dom.classList.add(this.cls);\n        }\n    }\n}\n\nexport class MenuLinkItem extends MenuItem {\n    link: string = '';\n    download: string = '';\n    constructor(init: Partial<MenuLinkItem>) {\n        super(init);\n        utils.objectApply(this, init);\n    }\n    createDom(): BuildDomExpr {\n        var dom = super.createDom() as BuildDomNode;\n        dom.tag = 'a.item.no-selection';\n        dom.target = \"_blank\";\n        return dom;\n    }\n    updateDom() {\n        super.updateDom();\n        (this.dom as HTMLAnchorElement).href = this.link;\n        (this.dom as HTMLAnchorElement).download = this.download;\n    }\n}\n\nexport class MenuInfoItem extends MenuItem {\n    text: string = '';\n    constructor(init: Partial<MenuInfoItem>) {\n        super(init);\n        utils.objectApply(this, init);\n    }\n    createDom(): BuildDomExpr {\n        return {\n            tag: 'div.menu-info'\n        };\n    }\n    updateDom() {\n        super.updateDom();\n        this.dom.textContent = this.text;\n    }\n}\n\n\nexport class ContextMenu extends ListView {\n    keepOpen = false;\n    useOverlay = true;\n    private _visible = false;\n    get visible() { return this._visible; };\n    overlay: Overlay | null = null;\n    onClose = new Callbacks<Action>();\n    private _originalFocused: Element | null = null;\n    constructor(items?: MenuItem[]) {\n        super({ tag: 'div.context-menu', tabIndex: 0 });\n        items?.forEach(x => this.add(x));\n    }\n    postCreateDom() {\n        super.postCreateDom();\n        this.dom.addEventListener('focusout', (e) => {\n            !this.dom.contains(e.relatedTarget as HTMLElement) && this.close();\n        });\n        this.dom.addEventListener('keydown', (e) => {\n            if (e.code === 'Escape') {\n                e.preventDefault();\n                this.close();\n            }\n        });\n    }\n    show(arg: { x: number, y: number; } | { ev: MouseEvent; }) {\n        if (this._visible) {\n            console.warn(\"[ContextMenu] show() called when it's already visible.\");\n            return;\n        }\n        if ('ev' in arg) arg = {\n            x: arg.ev.clientX,\n            y: arg.ev.clientY\n        };\n        this._visible = true;\n        if (this.useOverlay) {\n            if (!this.overlay) {\n                this.overlay = new Overlay().setFixed(true);\n                this.overlay.dom.style.background = 'rgba(0, 0, 0, .1)';\n                this.overlay.dom.addEventListener('mousedown', (ev) => {\n                    if (ev.eventPhase !== Event.AT_TARGET) return;\n                    ev.preventDefault();\n                    this.close();\n                });\n            }\n            this.overlay.appendView(this);\n            document.body.appendChild(this.overlay.dom);\n        } else {\n            document.body.appendChild(this.dom);\n        }\n        this._originalFocused = document.activeElement;\n        this.dom.focus();\n        var width = this.dom.offsetWidth, height = this.dom.offsetHeight;\n        var parentWidth = document.body.offsetWidth;\n        var parentHeight = document.body.offsetHeight;\n        if (this.useOverlay) {\n            const overlayDom = this.overlay!.dom;\n            parentWidth = overlayDom.offsetWidth;\n            parentHeight = overlayDom.offsetHeight;\n        }\n        var x = arg.x, y = arg.y;\n        if (x + width > parentWidth) x -= width;\n        if (y + height > parentHeight) y -= height;\n        if (x < 0) {\n            if (arg.x > parentWidth / 2) x = 0;\n            else x = parentWidth - width;\n        }\n        if (y < 0) {\n            if (arg.y > parentHeight / 2) y = 0;\n            else y = parentHeight - height;\n        }\n        this.dom.style.left = x + 'px';\n        this.dom.style.top = y + 'px';\n        this.dom.style.transformOrigin = `${arg.x - x}px ${arg.y - y}px`;\n    }\n    close() {\n        if (this._visible) {\n            this._visible = false;\n            this.onClose.invoke();\n            this._originalFocused?.['focus']?.();\n            this._originalFocused = null;\n            if (this.overlay) utils.fadeout(this.overlay.dom);\n            utils.fadeout(this.dom);\n        }\n    }\n}\n\nexport class Dialog extends View {\n    overlay: Overlay;\n    domheader: HTMLElement;\n    content = new ContainerView({ tag: 'div.dialog-content' });\n    shown = false;\n\n    btnTitle = new TabBtn({ active: true, clickable: false });\n    btnClose = new TabBtn({ text: I`Close`, right: true });\n\n    title = 'Dialog';\n    allowClose = true;\n    showCloseButton = true;\n    onShown = new Callbacks<Action>();\n    onClose = new Callbacks<Action>();\n    autoFocus: View;\n\n    focusTrap = new View({ tag: 'div.focustrap', tabIndex: 0 });\n\n    static _defaultParent: DialogParent | null = null;\n    static get defaultParent(): DialogParent {\n        if (!Dialog._defaultParent) Dialog._defaultParent = new DialogParent();\n        return Dialog._defaultParent;\n    }\n    static set defaultParent(val) {\n        Dialog._defaultParent = val;\n    }\n\n    get width() { return this.dom.style.width; }\n    set width(val) { this.dom.style.width = val; }\n\n    get contentFlex() { return this.content.dom.classList.contains('flex'); }\n    set contentFlex(val) { this.content.toggleClass('flex', !!val); }\n\n    get resizable() { return this.dom.classList.contains('resize'); }\n    set resizable(val) { this.toggleClass('resize', !!val); }\n\n    constructor() {\n        super();\n        this.btnClose.onClick.add(() => this.allowClose && this.close());\n    }\n    createDom(): BuildDomExpr {\n        return {\n            _ctx: this,\n            _key: 'dialog',\n            tag: 'div.dialog',\n            tabIndex: 0,\n            style: 'width: 300px',\n            child: [\n                {\n                    _key: 'domheader',\n                    tag: 'div.dialog-title',\n                    child: [\n                        { tag: 'div', style: 'clear: both;' }\n                    ]\n                },\n                this.content,\n                this.focusTrap\n            ]\n        };\n    }\n    postCreateDom() {\n        super.postCreateDom();\n        this.addBtn(this.btnTitle);\n        this.addBtn(this.btnClose);\n        this.overlay = new Overlay().setCenterChild(true).setNoBg(true);\n        this.overlay.dom.appendView(this);\n        this.overlay.dom.addEventListener('mousedown', (ev) => {\n            if (this.allowClose && ev.button === 0 && ev.target === this.overlay.dom) {\n                ev.preventDefault();\n                this.close();\n            }\n        });\n        this.overlay.dom.addEventListener('keydown', (ev) => {\n            if (this.allowClose && ev.keyCode === 27) { // ESC\n                ev.preventDefault();\n                this.close();\n            } else if (ev.target === this.dom && ev.code === 'Tab' && ev.shiftKey) {\n                ev.preventDefault();\n                let tabables = this.dom.querySelectorAll('a, [tabindex]');\n                if (tabables.length >= 2 && tabables[tabables.length - 2]['focus']) {\n                    // the last tabable is `focusTrap`, so the index used here is `length - 2`\n                    tabables[tabables.length - 2]['focus']();\n                }\n            }\n        });\n\n        // title bar pointer event handler:\n        {\n            let offset: { x: number; y: number; };\n            utils.listenPointerEvents(this.domheader, (e) => {\n                if (e.action === 'down') {\n                    if (e.ev.target !== this.domheader && e.ev.target !== this.btnTitle.dom) return;\n                    e.ev.preventDefault();\n                    const rectOverlay = this.overlay.dom.getBoundingClientRect();\n                    const rect = this.dom.getBoundingClientRect();\n                    offset = {\n                        x: e.point.pageX - rectOverlay.x - rect.x,\n                        y: e.point.pageY - rectOverlay.y - rect.y\n                    };\n                    return 'track';\n                } else if (e.action === 'move') {\n                    e.ev.preventDefault();\n                    const rect = this.overlay.dom.getBoundingClientRect();\n                    const pageX = utils.numLimit(e.point.pageX, rect.left, rect.right);\n                    const pageY = utils.numLimit(e.point.pageY, rect.top, rect.bottom);\n                    this.setOffset(pageX - offset.x, pageY - offset.y);\n                }\n            });\n        }\n\n        this.focusTrap.dom.addEventListener('focus', (ev) => {\n            this.dom.focus();\n        });\n    }\n    updateDom() {\n        this.btnTitle.updateWith({ text: this.title });\n        this.btnTitle.hidden = !this.title;\n        this.btnClose.hidden = !(this.allowClose && this.showCloseButton);\n    }\n    addBtn(btn: TabBtn) {\n        this.ensureDom();\n        this.domheader.insertBefore(btn.dom, this.domheader.lastChild);\n    }\n    addContent(view: IDOM, replace?: boolean) {\n        this.ensureDom();\n        if (replace) this.content.removeAllView();\n        this.content.appendView(View.getView(view));\n    }\n    setOffset(x: number, y: number) {\n        this.dom.style.left = x ? x + 'px' : '';\n        this.dom.style.top = y ? y + 'px' : '';\n        this.overlay.setCenterChild(false);\n    }\n    getOffset() {\n        var x = this.dom.style.left ? parseFloat(this.dom.style.left) : 0;\n        var y = this.dom.style.top ? parseFloat(this.dom.style.top) : 0;\n        return { x, y };\n    }\n    center() {\n        this.setOffset(0, 0);\n        this.overlay.setCenterChild(true);\n    }\n    show(ev?: MouseEvent) {\n        if (this.shown) return;\n        this.shown = true;\n        this._cancelFadeout?.();\n        this.ensureDom();\n        Dialog.defaultParent.onDialogShowing(this);\n        this.setTransformOrigin(ev);\n        this.dom.focus();\n        (this.autoFocus || this).dom.focus();\n        this.onShown.invoke();\n    }\n    setTransformOrigin(ev?: MouseEvent) {\n        if (ev) {\n            const rect = this.dom.getBoundingClientRect();\n            this.dom.style.transformOrigin = `${ev.x - rect.x}px ${ev.y - rect.y}px`;\n        } else {\n            this.dom.style.transformOrigin = '';\n        }\n    }\n    private _cancelFadeout: Action;\n    close() {\n        if (!this.shown) return;\n        this.shown = false;\n        this.setTransformOrigin(undefined);\n        this.onClose.invoke();\n        this._cancelFadeout = utils.fadeout(this.overlay.dom).cancel;\n        Dialog.defaultParent.onDialogClosing(this);\n    }\n    waitClose(): Promise<void> {\n        return new Promise((resolve) => {\n            var cb = this.onClose.add(() => {\n                this.onClose.remove(cb);\n                resolve();\n            });\n        });\n    }\n}\n\nexport class DialogParent extends View {\n    bgOverlay = new Overlay();\n    dialogCount = 0;\n    fixed = false;\n    private _cancelFadeout: Action | null = null;\n\n    constructor(dom: BuildDomExpr = document.body) {\n        super(dom);\n        if (dom === document.body) {\n            this.fixed = true;\n        }\n    }\n    onDialogShowing(dialog: Dialog) {\n        if (this.dialogCount++ === 0) {\n            this._cancelFadeout?.();\n            this.bgOverlay.setFixed(this.fixed);\n            this.appendView(this.bgOverlay);\n        }\n        dialog.overlay.setFixed(this.fixed);\n        this.appendView(dialog.overlay);\n    }\n    onDialogClosing(dialog: Dialog) {\n        if (--this.dialogCount === 0) {\n            this._cancelFadeout = utils.fadeout(this.bgOverlay.dom).cancel;\n        }\n    }\n}\n\nexport class TabBtn extends View {\n    text: string = '';\n    clickable = true;\n    active = false;\n    right = false;\n    onclick: Action<MouseEvent> | null = null;\n    onClick = new Callbacks<Action<MouseEvent>>();\n    constructor(init?: Partial<TabBtn>) {\n        super();\n        utils.objectApply(this, init);\n    }\n    createDom(): BuildDomExpr {\n        return {\n            tag: 'span.tab.no-selection'\n        };\n    }\n    postCreateDom() {\n        this.onactive = (ev) => {\n            this.onclick?.(ev);\n            this.onClick.invoke(ev);\n        };\n    }\n    updateDom() {\n        this.dom.textContent = this.text;\n        this.dom.tabIndex = this.clickable ? 0 : -1;\n        this.toggleClass('clickable', this.clickable);\n        this.toggleClass('active', this.active);\n        this.dom.style.float = this.right ? 'right' : 'left';\n    }\n}\n\nexport class InputView extends View {\n    multiline: boolean = false;\n    type = 'text';\n    placeholder = '';\n    get value() { return (this.dom as HTMLInputElement).value; }\n    set value(val) { (this.dom as HTMLInputElement).value = val; }\n    constructor(init?: Partial<InputView>) {\n        super();\n        utils.objectApply(this, init);\n    }\n    createDom(): BuildDomExpr {\n        return this.multiline ? { tag: 'textarea.input-text' } : { tag: 'input.input-text' };\n    }\n    updateDom() {\n        super.updateDom();\n        if (this.dom instanceof HTMLInputElement) {\n            this.dom.type = this.type;\n            this.dom.placeholder = this.placeholder;\n        }\n    }\n}\n\nexport class TextView extends View {\n    get text() { return this.dom.textContent; }\n    set text(val) { this.dom.textContent = val; }\n}\n\nexport class ButtonView extends TextView {\n    disabled: boolean = false;\n    get onclick() { return this.onactive; }\n    set onclick(val) { this.onactive = val; }\n    type: 'normal' | 'big' = 'normal';\n    constructor(init?: Partial<ButtonView>) {\n        super();\n        utils.objectApply(this, init);\n        this.updateDom();\n    }\n    createDom(): BuildDomExpr {\n        return { tag: 'div.btn', tabIndex: 0 };\n    }\n    updateDom() {\n        super.updateDom();\n        this.toggleClass('disabled', this.disabled);\n        this.toggleClass('btn-big', this.type === 'big');\n    }\n}\n\nexport class LabeledInputBase<T extends View> extends View {\n    label: string = '';\n    input: T;\n    get dominput(): HTMLInputElement { return this.input.dom as any; }\n    constructor(init?: Partial<LabeledInputBase<T>>) {\n        super();\n        utils.objectApply(this, init);\n    }\n    createDom(): BuildDomExpr {\n        return {\n            _ctx: this,\n            tag: 'div.labeled-input',\n            child: [\n                { tag: 'div.input-label', text: () => this.label },\n                this.input\n            ]\n        };\n    }\n    updateDom() {\n        super.updateDom();\n        this.input.domCreated && this.input.updateDom();\n    }\n}\n\nexport class LabeledInput extends LabeledInputBase<InputView> {\n    type: string;\n    get value() { return this.dominput.value; }\n    set value(val) { this.dominput.value = val; }\n    constructor(init?: Partial<LabeledInput>) {\n        super();\n        utils.objectApply(this, init);\n        if (!this.input) this.input = new InputView();\n    }\n    updateDom() {\n        this.input.type = this.type;\n        super.updateDom();\n    }\n}\n\nexport namespace FlagsInput {\n    export class FlagsInput extends ContainerView<Flag> {\n        constructor(flags?: string[] | Flag[]) {\n            super();\n            flags?.forEach(f => {\n                var flag = f instanceof Flag ? f : new Flag({ text: Object.prototype.toString.call(f) });\n                this.addView(flag);\n            });\n        }\n        createDom() {\n            return { tag: 'div.flags-input' };\n        }\n    }\n\n    export class Flag extends TextView {\n        get parentInput() { return this.parentView as (FlagsInput | undefined); }\n        constructor(init?: Partial<Flag>) {\n            super();\n            utils.objectApply(this, init);\n        }\n        createDom() {\n            return { tag: 'div.flags-input-item' };\n        }\n    }\n}\n\nexport class ToastsContainer extends View {\n    static default: ToastsContainer = new ToastsContainer();\n    parentDom: HTMLElement | null = null;\n    toasts: Toast[] = [];\n    createDom() {\n        return { tag: 'div.toasts-container' };\n    }\n    addToast(toast: Toast) {\n        if (this.toasts.length === 0)\n            this.show();\n        this.toasts.push(toast);\n    }\n    removeToast(toast: Toast) {\n        this.toasts.remove(toast);\n        if (this.toasts.length === 0)\n            this.remove();\n    }\n    show() {\n        var parent = this.parentDom || document.body;\n        parent.appendChild(this.dom);\n    }\n    remove() {\n        this.dom.remove();\n    }\n}\n\nexport class Toast extends View {\n    text: string = '';\n    container: ToastsContainer;\n    shown = false;\n    timer = new Timer(() => this.close());\n    constructor(init?: Partial<Toast>) {\n        super();\n        utils.objectApply(this, init);\n        if (!this.container) this.container = ToastsContainer.default;\n    }\n    show(timeout?: number) {\n        if (!this.shown) {\n            this.container.addToast(this);\n            this.container.appendView(this);\n            this.shown = true;\n        }\n        if (timeout) this.timer.timeout(timeout);\n        else this.timer.tryCancel();\n    }\n    close() {\n        if (!this.shown) return;\n        this.shown = false;\n        utils.fadeout(this.dom)\n            .onFinished(() => this.container.removeToast(this));\n    }\n    createDom() {\n        return { tag: 'div.toast' };\n    }\n    updateDom() {\n        this.dom.textContent = this.text;\n    }\n    static show(text: string, timeout?: number) {\n        var toast = new Toast({ text });\n        toast.show(timeout);\n        return toast;\n    }\n}\n\nexport class MessageBox extends Dialog {\n    allowClose = false;\n    title = 'Message';\n    result: 'none' | 'no' | 'yes' | 'ok' | 'cancel' = 'none';\n    addResultBtns(results: this['result'][]) {\n        for (const r of results) {\n            this.addBtnWithResult(new TabBtn({ text: i18n.get('msgbox_' + r), right: true }), r);\n        }\n        return this;\n    }\n    setTitle(title: string) {\n        this.title = title;\n        if (this.domCreated) this.updateDom();\n        return this;\n    }\n    addText(text: string) {\n        this.addContent(new TextView({ tag: 'div.messagebox-text', textContent: text }));\n        return this;\n    }\n    allowCloseWithResult(result: this['result'], showCloseButton?: boolean) {\n        this.result = result;\n        this.allowClose = true;\n        this.showCloseButton = !!showCloseButton;\n        if (this.domCreated) this.updateDom();\n        return this;\n    }\n    addBtnWithResult(btn: TabBtn, result: this['result']) {\n        btn.onClick.add(() => { this.result = result; this.close(); });\n        this.addBtn(btn);\n        return this;\n    }\n    async showAndWaitResult() {\n        this.show();\n        await this.waitClose();\n        return this.result;\n    }\n}\n\nexport class ViewToggle<T extends keyof any> {\n    items: Record<T, View | View[]>;\n    shownKeys: T[] = [];\n    toggleMode: 'display' | 'hidden' | 'remove' = 'remove';\n    container: View | null = null;\n    constructor(init?: Partial<ViewToggle<T>>) {\n        utils.objectApply(this, init);\n        this.setShownKeys(this.shownKeys);\n    }\n    add(key: T, view: View) {\n        const oldVal = this.items[key];\n        if (oldVal) {\n            if (oldVal instanceof Array) {\n                (this.items[key] as View[]).push(view);\n            } else {\n                this.items[key] = [oldVal as View, view];\n            }\n        } else {\n            this.items[key] = view;\n        }\n        this.toggleView(view, this.shownKeys.indexOf(key) >= 0);\n    }\n    setShownKeys(keys: T[]) {\n        this.shownKeys = keys;\n        const items = this.items;\n        for (const key in items) {\n            const show = keys.indexOf(key) >= 0;\n            if (Object.prototype.hasOwnProperty.call(items, key)) {\n                const val = items[key];\n                if (val) {\n                    if (val instanceof Array) {\n                        for (const v of val) {\n                            this.toggleView(v, show);\n                        }\n                    } else if (val) {\n                        this.toggleView(val as View, show);\n                    }\n                }\n            }\n        }\n    }\n    toggleView(view: View, show: boolean, mode?: ViewToggle<T>['toggleMode']) {\n        if (!mode) mode = this.toggleMode;\n        if (mode == 'display') {\n            view.dom.style.display = show ? '' : 'none';\n        } else if (mode == 'hidden') {\n            view.dom.hidden = !show;\n        } else if (mode == 'remove') {\n            if (show) {\n                this.container!.appendView(view);\n            } else {\n                view.dom.remove();\n            }\n        } else {\n            throw new Error('Unknown toggle mode');\n        }\n    }\n}\n\nexport class ToolTip extends TextView {\n    createDom() {\n        return {\n            tag: 'div.tooltip'\n        };\n    }\n    private _shown = false;\n    private _timer = new Timer(() => this.close());\n    get shown() { return this._shown; }\n    show(options: PositionOptions & {\n        parent?: HTMLElement, timeout?: number;\n    }) {\n        if (this.shown) return;\n        this._shown = true;\n        this._cancelClose?.();\n        let { parent = document.body, timeout } = options;\n        if (timeout) this._timer.timeout(timeout);\n        const dom = this.dom;\n        setPosition(dom, options);\n        parent.appendChild(dom);\n    }\n    private _cancelClose: Action | null = null;\n    close(fadeOutOptions?: Parameters<typeof utils.fadeout>[1]) {\n        if (!this.shown) return;\n        this._timer.tryCancel();\n        this._shown = false;\n        this._cancelClose = utils.fadeout(this.dom, fadeOutOptions).cancel;\n    }\n}\n\nexport interface PositionOptions {\n    x?: number;\n    y?: number;\n    anchor?: 'bottom';\n}\n\nfunction setPosition(dom: HTMLElement, options: PositionOptions) {\n    let { x = 0, y = 0, anchor = 'bottom' } = options;\n    dom.style.left = x + 'px';\n    dom.style.top = y + 'px';\n    if (!dom.classList.contains('anchor-' + anchor)) {\n        dom.classList.forEach(x => {\n            if (x.startsWith('anchor-')) {\n                dom.classList.remove(x);\n            }\n        });\n        dom.classList.add('anchor-' + anchor);\n    }\n}\n","export const version = \"1.5.26\""],"names":["_object_assign","Object","assign","_object_hasOwnProperty","prototype","hasOwnProperty","utils","[object Object]","this","str","len","ch","length","sec","isNaN","Math","round","min","floor","strPadLeft","toString","size","unit","fileSizeUnits","toFixed","date","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","toLocaleString","num","max","nameFunc","existsFunc","btoa","encodeURIComponent","replace","match","p1","String","fromCharCode","time","Promise","resolve","setTimeout","node","lastChild","removeChild","newChild","clearChildren","appendChild","element","clsName","force","clsList","classList","toggle","undefined","contains","add","remove","options","className","duration","waitTransition","cb","end","removeEventListener","onTransitionend","e","eventPhase","Event","AT_TARGET","addEventListener","finished","callback","touchDown","mouseDown","type","ev","point","action","mousemove","mouseup","document","touchStart","ct","changedTouches","ret","touch","touchmove","touchend","touches","event","handler","events","forEach","css","head","buildDOM","tag","text","array","val","i","splice","pos","push","arr","func","Array","map","idx","item","find","sum","arrayForeach","x","obj","kv","keys","key","call","indexOf","a","b","blob","reject","reader","FileReader","onload","result","onerror","readAsDataURL","arrayRemove","Timer","cancelFunc","tryCancel","handle","window","clearTimeout","setInterval","clearInterval","requestAnimationFrame","cancelAnimationFrame","SettingItem","initial","types","serialize","deserialize","Error","readFromStorage","localStorage","getItem","isInitial","set","fn","dontRaiseNow","data","oldFn","onRender","newFn","btn","prefix","bool","span","createElement","insertBefore","firstChild","render","textContent","thiz","removeItem","setItem","dontSave","save","curData","oldIndex","findIndex","newData","json","JSON","stringify","parse","Callbacks","args","apply","error","console","BuildDOMCtx","dict","ctxOrDict","origctx","ctx","actions","executeAction","hidden","warn","tryHandleValues","createTextNode","addUpdateAction","Node","buildDomCore","ttl","r","JsxNode","buildDom","getDOM","ele","reg","exec","substr","id","createElementFromTag","EnsureCtx","buildDOMHandleKey","init","setDict","attrs","childs","child","buildView","_getDOMExpr","it","addChild","jsxBuildCore","jsxFactory","jsx","View","dom","domExprCreated","position","_position","domCreated","_dom","ensureDom","createDom","domctx","postCreateDom","updateDom","update","objectApply","toggleClass","view","appendView","onactive","_onactive","_onActiveCbs","handleKeyDown","code","rect","getBoundingClientRect","MouseEvent","clientX","clientY","y","relatedTarget","preventDefault","ContainerView","addView","items","parentView","_insertToDom","_ensureItem","_removeFromDom","removeView","Symbol","iterator","arrayMap","arrayFind","I18n","Map","arg","get2","lang","curLang","langObj","log","missing","has","langObjs","langs","line","j","elements","childNodes","nodeType","TEXT_NODE","beforeI18n","cur","curIdx","languages","navigator","language","l","createStringBuilder","i18n","arrBuilder","createArrayBuilder","literals","placeholders","get","join","formatCache","WeakMap","parseCache","format","translatedFormat","parsed","template","state","buf","parseTemplate","I","getWebfxCss","cssInjected","dragManager","currentItem","_currentItem","_currentArray","currentArray","onDragStart","invoke","onDragEnd","ListViewItem","listview","selectionHelper","dragData","selected","_selected","v","onSelectedChanged","super","setAttribute","handleItemClicked","onItemClicked","altKey","mouseev","left","top","onContextMenu","handleItemKeyDown","focus","dir","scrollBox","targetY","offsetTop","offsetHeight","nextIdx","direction","dragging","selectedItems","sort","startArray","dataTransfer","setData","style","opacity","dragHandler","drop","source","target","sourceItems","accept","moveByDragging","selfInside","after","newpos","move","dropEffect","onDragover","enterctr","hover","placeholder","dragoverPlaceholder","before","nextElementSibling","parentElement","ListView","container","SelectionHelper","itemProvider","_scrollBox","draggable","keepSelected","toggleItemSelection","onItemMoved","removeAll","clear","enabled","_enabled","lastToggledItem","onEnabledChanged","count","ctrlForceSelect","ctrlKey","shiftKey","toSelect","start","onSelectedItemsChanged","Overlay","centerChild","nobg","fixed","MenuItem","tabIndex","ContextMenu","keepOpen","close","onclick","cls","_lastcls","visible","_visible","useOverlay","overlay","setFixed","background","body","_originalFocused","activeElement","width","offsetWidth","height","parentWidth","parentHeight","overlayDom","transformOrigin","onClose","fadeout","Dialog","TabBtn","active","clickable","right","btnClose","onClick","allowClose","defaultParent","_defaultParent","DialogParent","contentFlex","content","resizable","_ctx","_key","focusTrap","addBtn","btnTitle","setCenterChild","setNoBg","button","keyCode","tabables","querySelectorAll","offset","listenPointerEvents","domheader","rectOverlay","pageX","pageY","numLimit","bottom","setOffset","updateWith","title","showCloseButton","removeAllView","getView","parseFloat","shown","_cancelFadeout","onDialogShowing","setTransformOrigin","autoFocus","onShown","cancel","onDialogClosing","dialog","dialogCount","bgOverlay","float","InputView","value","multiline","HTMLInputElement","TextView","LabeledInputBase","dominput","input","label","FlagsInput_1","flags","f","flag","Flag","parentInput","FlagsInput","ToastsContainer","toast","toasts","show","parentDom","Toast","default","timeout","addToast","timer","onFinished","removeToast","disabled","cancelled","onCancelled","oldData","dataDict","n","dataSelectId","itemDict","removed","d","selectId","updateItem","addItem","isSame","rebuildAll","t","next","done","o","old","onComplete","editing","beforeEdit","select","stopEdit","listenEvent","evv","startEdit","list","pop","mouseIn","focusIn","_removeEvents","listenEvents","stateChanged","_removePointerEvents","onChanged","current","funcSetActive","_func","_value","computed","rawValue","loaded","slowLoading","_slowLoading","autoLoad","_autoLoad","lazy","_lazy","ensureLoaded","_loaded","batchSize","interval","enableAutoLoad","cont","loadNext","slowlyLoad","stopLoading","_status","_text","_textdom","err","retry","reset","href","link","download","results","addBtnWithResult","addContent","waitClose","titleView","setTitle","setContent","addAction","headerView","runningCount","maxCount","prom","res","queue","queueMicrotask","shift","enter","exit","isCompositing","_isCompositing","onCompositingChanged","_shown","_cancelClose","parent","_timer","anchor","startsWith","setPosition","fadeOutOptions","setShownKeys","shownKeys","oldVal","toggleView","mode","toggleMode","display","injectCss","threshold","begin","lastRun","info"],"mappings":"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"}