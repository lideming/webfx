{"version":3,"file":"webfxcore.min.js","sources":["https://github.com/lideming/webfx/raw/v1.9.11/src/lib/view.ts","https://github.com/lideming/webfx/raw/v1.9.11/src/lib/buildDOM.ts","https://github.com/lideming/webfx/raw/v1.9.11/src/lib/utils.ts","https://github.com/lideming/webfx/raw/v1.9.11/version"],"sourcesContent":["import { Action, Callbacks, objectApply, toggleClass, arrayFind, arrayForeach, arrayMap } from \"./utils\";\nimport { buildDOM, BuildDOMCtx, BuildDomExpr, buildView, IDOM, IView, JsxNode, MountState } from \"./buildDOM\";\n\n\nexport class View<T extends HTMLElement = HTMLElement> implements IView {\n    constructor(dom?: BuildDomExpr) {\n        this._domctx.view = this;\n        if (dom) this.domExprCreated(dom);\n    }\n\n    static getView(obj: BuildDomExpr) { return obj instanceof View ? obj : new View(obj); }\n\n    static debugging = false;\n\n    public parentView?: View = undefined;\n    public _position?: number = undefined;\n    get position() { return this._position; }\n\n    private _domctx = new BuildDOMCtx();\n\n    protected _dom: T | undefined = undefined;\n    public get dom() {\n        this.ensureDom();\n        return this._dom!;\n    }\n    public get domCreated() { return !!this._dom; }\n\n    private _baseView: View | undefined = undefined;\n    public get baseView() { return this._baseView; }\n\n    private _mountState: MountState = MountState.Unmounted;\n    public get mountState() { return this._mountState; }\n\n    public get hidden() { return this.dom.hidden; }\n    public set hidden(val: boolean) { this.dom.hidden = val; }\n\n    public ensureDom() {\n        if (!this._dom) {\n            var r = this.createDom();\n            this.domExprCreated(r);\n        }\n    }\n\n    private domExprCreated(r: BuildDomExpr) {\n        var view = buildView(r, this._domctx);\n        if (view instanceof View) {\n            this._baseView = view;\n            this._dom = view.dom as T;\n        } else {\n            this._dom = view as T;\n        }\n        this.postCreateDom();\n        this.updateDom();\n    }\n\n    protected createDom(): BuildDomExpr {\n        return document.createElement('div');\n    }\n\n    /** Will be called when the dom is created */\n    protected postCreateDom() {\n        if (View.debugging) {\n            if (this.dom.dataset)\n                this.dom.dataset['webfx'] = MountState[this._mountState];\n        }\n    }\n\n    /** Will be called when the dom is created, after postCreateDom() */\n    public updateDom() {\n        this._domctx.update();\n    }\n\n    /** Will be called when the mounting state is changed  */\n    public mountStateChanged(state: MountState) {\n        if (state == this._mountState) {\n            console.trace(\"mountState unchanged\", state, this);\n            return;\n        }\n        this._mountState = state;\n        if (View.debugging) {\n            if (!this._baseView && this.domCreated && this.dom.dataset) {\n                if (this.dom.dataset['webfx'] == MountState[state]) {\n                    console.trace('mountState on the DOM is changed by other view', state, this);\n                }\n                this.dom.dataset['webfx'] = MountState[state];\n            }\n        }\n        if (this._baseView) {\n            // let the baseView do the rest\n            this._baseView.mountStateChanged(state);\n            return;\n        }\n        if (this._childViews) for (const child of this._childViews) {\n            child.mountStateChanged(state);\n        }\n    }\n\n    public getDomById(id: string): HTMLElement | null {\n        this.ensureDom();\n        return this._domctx.dict?.[id] ?? null;\n    }\n\n    /** Assign key-values and call `updateDom()` */\n    updateWith(kv: Partial<this>) {\n        objectApply(this, kv);\n        this.updateDom();\n    }\n    updateAllWith(kv: Partial<this>) {\n        objectApply(this, kv);\n        this.updateAll();\n    }\n    toggleClass(clsName: string, force?: boolean) {\n        toggleClass(this.dom, clsName, force);\n    }\n\n    // Implements `IDOMInstance`\n    // appendView(view: View) { this.dom.appendChild(view.dom); }\n    getDOM() { return this.dom; }\n    addChild(child: BuildDomExpr) {\n        const view = buildView(child, this._domctx);\n        if (view instanceof View) {\n            this.appendView(view);\n        } else {\n            this.dom.appendChild(view);\n        }\n    }\n\n    private _onActive: Callbacks<Action<MouseEvent>> | undefined = undefined;\n    get onActive() {\n        if (!this._onActive) {\n            this._onActive = new Callbacks<Action<MouseEvent>>();\n            this.dom.addEventListener('click', (e: MouseEvent) => {\n                this._onActive!.invoke(e);\n            });\n            this.dom.addEventListener('keydown', (e: KeyboardEvent) => {\n                this.handleKeyDown(e);\n            });\n        }\n        return this._onActive;\n    }\n\n    handleKeyDown(e: KeyboardEvent) {\n        if (e.code === 'Enter') {\n            const rect = this.dom.getBoundingClientRect();\n            this._onActive?.invoke(new MouseEvent('click', {\n                clientX: rect.x, clientY: rect.y,\n                relatedTarget: this.dom\n            }));\n            e.preventDefault();\n        }\n    }\n\n    private _childViews: View[] | undefined = undefined;\n    get childViews(): View[] {\n        // Return the childViews of the baseView if exists\n        if (this._baseView) { return this._baseView.childViews; }\n\n        // Lazy creating childViews array\n        if (!this._childViews) this._childViews = [];\n        return this._childViews;\n    }\n    appendView(view: View) {\n        this.addView(view);\n    }\n    addView(view: View, pos?: number) {\n        this._registerChild(view, pos, false);\n        if (this._mountState == MountState.Mounted) view.mountStateChanged(MountState.Mounting);\n        this._insertToDom(view, pos);\n        if (this._mountState != MountState.Unmounted) view.mountStateChanged(this._mountState);\n    }\n    _registerChild(view: View, pos?: number, changeMountState = true) {\n        const items = this.childViews;\n        if (view.parentView) throw new Error('the view is already in a container view');\n        view.parentView = this;\n        if (pos === undefined) {\n            view._position = items.length;\n            items.push(view);\n        } else {\n            items.splice(pos, 0, view);\n            for (let i = pos; i < items.length; i++) {\n                items[i]._position = i;\n            }\n        }\n        if (changeMountState && this._mountState != MountState.Unmounted) {\n            view.mountStateChanged(this._mountState);\n        }\n    }\n    removeView(view: View | number) {\n        view = this._ensureItem(view);\n        this._removeFromDom(view);\n        var pos = view._position!;\n        view.parentView = view._position = undefined;\n        this.childViews.splice(pos, 1);\n        for (let i = pos; i < this.childViews.length; i++) {\n            this.childViews[i]._position = i;\n        }\n        if (this._mountState != MountState.Unmounted) {\n            view.mountStateChanged(MountState.Unmounted);\n        }\n    }\n    removeAllView() {\n        while (this.childViews.length) this.removeView(this.childViews.length - 1);\n    }\n    removeFromParent() {\n        if (this.parentView) this.parentView.removeView(this);\n    }\n    /** updateDom() then updateChildren() */\n    updateAll() {\n        this.updateDom();\n        if (this.baseView) return this.baseView.updateAll();\n        this.updateChildren();\n    }\n    /** Call updateDom() on the whole tree */\n    updateChildren() {\n        if (this._childViews) for (const child of this._childViews) {\n            child.updateAll();\n        }\n    }\n    protected _insertToDom(item: View, pos?: number) {\n        if (pos == undefined) this.dom.appendChild(item.dom);\n        else this.dom.insertBefore(item.dom, this.childViews[pos + 1]?.dom || null);\n    }\n    protected _removeFromDom(item: View) {\n        if (item.domCreated) item.dom.remove();\n    }\n    protected _ensureItem(item: View | number) {\n        if (typeof item === 'number') item = this.childViews[item];\n        else if (!item) throw new Error('item is null or undefined.');\n        else if (item.parentView !== this) throw new Error('the item is not in this listview.');\n        return item;\n    }\n\n}\n\nexport function tryGetDOM(idom: IDOM | null | undefined) {\n    if (!idom) return idom;\n    if (idom instanceof View) {\n        return idom.getDOM();\n    } else if (idom instanceof Node) {\n        return idom;\n    } else if (idom && \"getDOM\" in idom) {\n        return idom.getDOM();\n    }\n}\n\nexport function getDOM(idom: IDOM) {\n    var dom = tryGetDOM(idom);\n    if (!dom) {\n        console.error(\"getDOM():\", idom);\n        throw new Error(\"getDOM(): unsupported parameter: \" + idom);\n    }\n    return dom;\n}\n\nexport function appendView(parent: IDOM, childView: View) {\n    warnMountingView(parent, childView);\n    getDOM(parent).appendChild(childView.dom);\n}\n\nexport function addChild(parent: IDOM, child: BuildDomExpr) {\n    // fast path\n    if (parent instanceof View) parent.addChild(child);\n    else if (parent instanceof Node) {\n        warnMountingView(parent, child);\n        parent.appendChild(buildDOM(child));\n    }\n    // slow path\n    else if ('addChild' in parent) {\n        parent.addChild(child);\n    } else {\n        console.error(\"addChild():\", { parent, child });\n        throw new Error(\"addChild(): unsupported parent\");\n    }\n}\n\nfunction warnMountingView(parent: IDOM, child: BuildDomExpr) {\n    if (child instanceof View) {\n        const data = { parent, child };\n        if (parent instanceof Node)\n            console.trace(\"Should use `mountView()` to mount a view to DOM.\", data);\n        else\n            console.trace(\"Should use `View.addChild()` or `View.appendView()` to add a view into another view.\", data);\n    }\n}\n\nexport function mountView(parent: Node, view: View) {\n    view.mountStateChanged(MountState.Mounting);\n    parent.appendChild(view.dom);\n    view.mountStateChanged(MountState.Mounted);\n}\n\nexport function unmountView(parent: Node, view: View) {\n    view.dom.remove();\n    view.mountStateChanged(MountState.Unmounted);\n}\n\ndeclare global {\n    interface Node {\n        /** @deprecated Use the exported function `getDOM()` instead. */\n        getDOM(): this;\n        /** @deprecated Use the exported function `appendView()` instead. */\n        appendView(view: View);\n        /** @deprecated Use the exported function `addChild()` instead. */\n        addChild(child: BuildDomExpr): void;\n    }\n}\n\n\nNode.prototype.getDOM = function () {\n    console.trace(\"webfx: Node.getDOM() is deprecated. Please use the exported function `getDOM()` instead.\");\n    return this;\n};\n\nNode.prototype.addChild = function (child) {\n    console.trace(\"webfx: Node.addChild() is deprecated. Please use the exported function `addChild()` instead.\");\n    addChild(this, child);\n};\n\nNode.prototype.appendView = function (this: Node, view: View) {\n    console.trace(\"webfx: Node.appendView() is deprecated. Please use the exported function `appendView()` instead.\");\n    appendView(this, view);\n};\n\nexport class ContainerView<T extends View> extends View {\n    addView(view: T, pos?: number): void {\n        return super.addView(view, pos);\n    }\n    removeView(view: T | number): void {\n        super.removeView(view);\n    }\n    protected _insertToDom(item: T, pos: number): void {\n        super._insertToDom(item, pos);\n    }\n    protected _removeFromDom(item: T): void {\n        super._removeFromDom(item);\n    }\n    protected _ensureItem(item: T | number): T {\n        return super._ensureItem(item) as T;\n    }\n\n    get items() { return this.childViews as T[]; }\n    [Symbol.iterator]() { return (this.childViews as T[])[Symbol.iterator](); }\n    get length() { return this.childViews.length; }\n    get(idx: number) {\n        return this.childViews[idx] as T;\n    }\n    map<TRet>(func: (lvi: T) => TRet) { return arrayMap(this, func); }\n    find(func: (lvi: T, idx: number) => any) { return arrayFind(this, func); }\n    forEach(func: (lvi: T, idx: number) => void) { return arrayForeach(this, func); }\n}\n","import { Action, Callbacks, ConvertObjectWithCallbacks, foreachFlaten, Func, FuncOrVal, Ref } from \"./utils\";\nimport { addChild, getDOM, View } from \"./view\";\n\n// BuildDOM types & implementation:\nexport type BuildDomExpr = string | BuildDomNode | HTMLElement | Node | IDOM;\n\nexport type IDOM = Node | View | IView;\n\nexport enum MountState {\n    /** The view is unmounted. */\n    Unmounted,\n    /** The view will be mounted soon. */\n    Mounting,\n    /** The view is mounted (i.e. the DOM is in the document). */\n    Mounted,\n}\n\nexport interface IView {\n    getDOM(): HTMLElement;\n    addChild(child: BuildDomExpr): void;\n    mountStateChanged(state: MountState): void;\n}\n\nexport type BuildDomTag = string;\n\nexport type BuildDomReturn = HTMLElement | Text | Node;\n\nexport interface BuildDomNode {\n    tag?: BuildDomTag;\n\n    child?: BuildDomExpr[] | BuildDomExpr;\n\n    text?: FuncOrVal<string>;\n    hidden?: FuncOrVal<boolean>;\n    init?: Action<HTMLElement>;\n    update?: Action<HTMLElement>;\n\n    ref?: Ref<HTMLElement | Text | Node>;\n\n    _id?: string;\n    /** @deprecated Use `_id` instead */\n    _key?: string;\n\n    [key: string]: any;\n}\n\nconst emptyAction = () => {};\n\nconst updateFunctionFactoryCache = new Map<string, (...values: any[]) => Action>();\n\nexport class BuildDOMCtx {\n    dict: Record<string, HTMLElement> | undefined = undefined;\n    actions: DOMUpdateAction[] | undefined = undefined;\n    view: View | undefined = undefined;\n\n    setDict(key: string, node: HTMLElement) {\n        if (!this.dict) this.dict = {};\n        this.dict[key] = node;\n    }\n    addUpdateAction(action: DOMUpdateAction) {\n        if (!this.actions) this.actions = [];\n        this.actions.push(action);\n    }\n    _compileUpdate() {\n        if (!this.actions) {\n            this.update = emptyAction;\n            return;\n        }\n        let statements: string[] = [];\n        let values: any[] = [];\n        for (const a of this.actions!) {\n            a.compile(statements, values);\n        }\n        const funcBody = `return function() {\n            ${statements.join(';\\n')}\n        }`;\n        let updateFuncFactory = updateFunctionFactoryCache.get(funcBody);\n        if (!updateFuncFactory) {\n            updateFuncFactory = new Function(...values.map((x, i) => 'v' + i), funcBody) as (...values: any[]) => Action;\n            updateFunctionFactoryCache.set(funcBody, updateFuncFactory!);\n        }\n        this.update = updateFuncFactory!.apply(null, values);\n        this.update();\n    }\n    update = this._compileUpdate;\n}\n\ninterface DOMUpdateAction {\n    // run(): void;\n    compile(statements: string[], values: any[]): void;\n}\n\nclass TextAction implements DOMUpdateAction {\n    constructor(readonly node: Node, readonly func: Func<string>) { }\n    run() {\n        this.node.textContent = this.func();\n    }\n    compile(statements: string[], values: any[]): void {\n        statements.push(`v${values.length}.textContent = v${values.length + 1}()`);\n        values.push(this.node, this.func);\n    }\n}\n\nclass HiddenAction implements DOMUpdateAction {\n    constructor(readonly node: HTMLElement, readonly func: Func<boolean>) { }\n    run() {\n        this.node.hidden = this.func();\n    }\n    compile(statements: string[], values: any[]): void {\n        statements.push(`v${values.length}.hidden = v${values.length + 1}()`);\n        values.push(this.node, this.func);\n    }\n}\n\nclass UpdateAction implements DOMUpdateAction {\n    constructor(readonly node: HTMLElement, readonly func: Action<HTMLElement>) { }\n    run() {\n        this.func(this.node);\n    }\n    compile(statements: string[], values: any[]): void {\n        statements.push(`v${values.length + 1}(v${values.length})`);\n        values.push(this.node, this.func);\n    }\n}\n\nvar createElementFromTag = function (tag: BuildDomTag): HTMLElement {\n    var reg = /[#\\.^]?[\\w\\-]+/y;\n    var match;\n    var ele;\n    while (match = reg.exec(tag)) {\n        var val = match[0];\n        var ch = val[0];\n        if (ch === '.') {\n            ele.classList.add(val.substr(1));\n        } else if (ch === '#') {\n            ele.id = val.substr(1);\n        } else {\n            if (ele) throw new Error('unexpected multiple tags');\n            ele = document.createElement(val);\n        }\n    }\n    return ele;\n};\n\nfunction tryHandleValues(obj: BuildDomExpr, ctx: BuildDOMCtx | null) {\n    if (typeof (obj) === 'string') { return document.createTextNode(obj); }\n    if (typeof obj === 'function') {\n        const val = (obj as any)();\n        if (!val || typeof val !== 'object') {\n            const node = document.createTextNode(val);\n            ctx?.addUpdateAction(new TextAction(node, obj));\n            return node;\n        } else {\n            throw new Error('Unexpected function return value');\n        }\n    }\n    if (Node && obj instanceof Node) return obj as Node;\n    return null;\n}\n\nvar buildDomCore = function (obj: BuildDomExpr, ttl: number, ctx: BuildDOMCtx | null): BuildDomReturn {\n    if (ttl-- < 0) throw new Error('ran out of TTL');\n    var r = tryHandleValues(obj, ctx);\n    if (r) return r;\n    if (obj instanceof JsxNode) {\n        obj = obj.buildView(ctx, ttl);\n        if (!(obj instanceof View)) return obj as Node;\n    }\n    if (obj instanceof View) {\n        ctx?.view?._registerChild(obj);\n        return obj.getDOM();\n    }\n    // if ('getDOM' in (obj as any)) return (obj as any).getDOM();\n    const tag = (obj as BuildDomNode).tag;\n    if (!tag) throw new Error('no tag');\n    var node = createElementFromTag(tag);\n    for (var key in obj as any) {\n        if (obj.hasOwnProperty(key)) {\n            var val = obj[key];\n            buildDOMHandleKey(key, val, node, ctx, ttl);\n        }\n    }\n    const init = obj['init'];\n    if (init) init(node);\n\n    return node;\n};\n\nvar buildDOMHandleKey = function (key: string, val: any, node: HTMLElement, ctx: BuildDOMCtx | null, ttl: number) {\n    if (key === 'child') {\n        if (val instanceof Array) {\n            foreachFlaten(val, function (val) {\n                node.appendChild(buildDomCore(val, ttl, ctx));\n            });\n        } else {\n            node.appendChild(buildDomCore(val, ttl, ctx));\n        }\n    } else if (key === '_id' || key === '_key') {\n        ctx!.setDict(val, node);\n    } else if (key === 'ref') {\n        (val as Ref<any>).value = node;\n    } else if (key === 'text') {\n        if (typeof val === 'function') {\n            ctx!.addUpdateAction(new TextAction(node, val));\n        } else {\n            node.textContent = val;\n        }\n    } else if (key === 'class') {\n        node.className = val;\n    } else if (key === 'style' && typeof val === 'object') {\n        for (const styleKey in val) {\n            if (Object.prototype.hasOwnProperty.call(val, styleKey)) {\n                const styleVal = val[styleKey];\n                node.style[styleKey] = styleVal;\n            }\n        }\n    } else if (key === 'hidden' && typeof val === 'function') {\n        ctx!.addUpdateAction(new HiddenAction(node, val));\n    } else if (key === 'update' && typeof val === 'function') {\n        ctx!.addUpdateAction(new UpdateAction(node, val));\n    } else if (key === 'init') {\n        // no-op\n    } else {\n        node[key] = val;\n    }\n};\n\n/** \n * Build a DOM tree from a JavaScript object.\n * @example\n * buildDOM({\n *     tag: 'div.item#firstitem',\n *     onclick: () => console.info('clicked'),\n *     child: [\n *         'Name: ',\n *         { tag: 'span.name', text: name },\n *     ],\n * });\n */\nexport function buildDOM<T extends BuildDomReturn = BuildDomReturn>(obj: BuildDomExpr, ctx?: BuildDOMCtx): T {\n    return buildDomCore(obj, 32, ctx || null) as T;\n};\n\n/** Get a View instance or a DOM Node. View is preferred. */\nexport function buildView(obj: BuildDomExpr, ctx?: BuildDOMCtx): View | Node {\n    if (obj instanceof View) {\n        return obj;\n    } else if (obj instanceof JsxNode) {\n        return obj.buildView(ctx as any, 64);\n    } else {\n        return buildDOM(obj, ctx);\n    }\n}\n\nexport class JsxNode<T extends IDOM> {\n    tag: T | string;\n    attrs: Record<any, any> | undefined;\n    child: any[] | undefined;\n    constructor(tag: any, attrs: Record<any, any> | undefined, childs: any[] | undefined) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.child = childs;\n    }\n    getDOM(): HTMLElement {\n        return this.buildDom(null, 64) as any;\n    }\n    buildDom(ctx: BuildDOMCtx | null, ttl: number) {\n        return getDOM(this.buildView(ctx, ttl));\n    }\n    buildView(ctx: BuildDOMCtx | null, ttl: number)\n        : T extends IDOM ? T : T extends keyof HTMLElementTagNameMap ? HTMLElementTagNameMap[T] : HTMLElement {\n        if (ttl-- < 0) throw new Error('ran out of TTL');\n        let view: Node | View;\n        if (typeof this.tag === 'string') {\n            // tag is an HTML tag\n            const dom = document.createElement(this.tag);\n            view = dom;\n            if (this.attrs) {\n                for (const key in this.attrs) {\n                    if (Object.prototype.hasOwnProperty.call(this.attrs, key)) {\n                        const val = this.attrs[key];\n                        buildDOMHandleKey(key, val, dom, ctx, ttl);\n                    }\n                }\n                const init = this.attrs['init'];\n                if (init) init(dom);\n            }\n        } else {\n            // tag is a View\n            view = this.tag as View;\n            if (this.attrs) {\n                let init: Action<IDOM> | null = null;\n                for (const key in this.attrs) {\n                    if (Object.prototype.hasOwnProperty.call(this.attrs, key)) {\n                        const val = this.attrs[key];\n                        if (key == \"init\") {\n                            init = val;\n                        } else if (key == \"ref\") {\n                            (val as Ref<any>).value = view;\n                        } else if (key.startsWith(\"on\") && view[key] instanceof Callbacks) {\n                            (view[key] as Callbacks).add(val);\n                        } else {\n                            view[key] = val;\n                        }\n                    }\n                }\n                if (init) init(view);\n            }\n        }\n        if (this.child) {\n            if (view instanceof View) {\n                foreachFlaten(this.child, it => {\n                    (view as View).addChild(jsxBuildCore(it, ttl, (view as View)['_domctx']) as any);\n                });\n            } else {\n                foreachFlaten(this.child, it => {\n                    const c = jsxBuildCore(it, ttl, ctx);\n                    if (c instanceof View) {\n                        (view as Node).appendChild(c.dom);\n                        ctx?.view?._registerChild(c);\n                    } else {\n                        addChild(view, c);\n                    }\n                });\n            }\n        }\n        return view as any;\n    }\n    addChild(child: IDOM): void {\n        if (this.child == null) this.child = [];\n        this.child.push(child);\n    }\n}\n\nfunction jsxBuildCore(node: JsxNode<any> | BuildDomExpr, ttl: number, ctx: BuildDOMCtx | null) {\n    if (ttl-- < 0) throw new Error('ran out of TTL');\n    if (node instanceof View) return node;\n    var r = tryHandleValues(node, ctx);\n    if (r) return r;\n    if (node instanceof JsxNode) {\n        return node.buildView(ctx, ttl);\n    } else {\n        console.error(\"Unknown node type\", node);\n        throw new Error(\"Unknown node type\");\n    }\n}\n\nexport function jsxBuild<T extends IDOM>(node: JsxNode<T>, ctx?: BuildDOMCtx): T {\n    return jsxBuildCore(node, 64, ctx || new BuildDOMCtx());\n}\n\nexport type JsxTag = JsxDOMTag | JsxCtorTag;\nexport type JsxCtorTag = new (...args) => IDOM;;\nexport type JsxDOMTag = keyof HTMLElementTagNameMap;\n\nexport type JsxTagInstance<T> =\n    T extends keyof HTMLElementTagNameMap ? HTMLElementTagNameMap[T] :\n    T extends (new (...args) => infer U) ? U extends IDOM ? U :\n    never : never;\n\nexport type JsxAttrs<T extends JsxTag> =\n    T extends JsxCtorTag ? JsxCtorAttrs<T> :\n    T extends JsxDOMTag ? JsxDOMAttrs<T> :\n    never;\n\nexport type JsxCtorAttrs<T extends JsxCtorTag, TI = InstanceType<T>> = {\n    args?: ConstructorParameters<T>;\n    init?: Action<TI>;\n} & Partial<ConvertObjectWithCallbacks<TI>>;\n\nexport type JsxDOMAttrs<T extends JsxDOMTag> = Omit<BuildDomNode, \"key\"> & Partial<JsxTagInstance<T>>;\n\nexport function jsxFactory<T extends JsxTag, TInstance extends IDOM = JsxTagInstance<T>>(tag: T, attrs: JsxAttrs<T>, ...childs: any)\n    : JsxNode<TInstance> {\n    if (typeof tag === 'string') {\n        return new JsxNode(tag, attrs, childs) as any;\n    } else {\n        const view = attrs?.args ?\n            new (tag as any)(...attrs.args) :\n            new (tag as any)();\n        return new JsxNode(view, attrs, childs) as any;\n    }\n}\n\nexport const jsx = jsxFactory;\n","// file: utils.ts\n\nimport { IDOM, buildDOM } from \"./buildDOM\";\nimport { getDOM } from \"./view\";\n\nconst _object_assign = Object.assign;\nconst _object_hasOwnProperty = Object.prototype.hasOwnProperty;\n\n// Time & formatting utils:\n\nexport function strPadLeft(str: string, len: number, ch: string = ' ') {\n    while (str.length < len) {\n        str = ch + str;\n    }\n    return str;\n}\n\nexport function formatTime(sec: number | any) {\n    if (typeof sec !== 'number' || isNaN(sec)) return '--:--';\n    sec = Math.round(sec);\n    var min = Math.floor(sec / 60);\n    sec %= 60;\n    return strPadLeft(min.toString(), 2, '0') + ':' + strPadLeft(sec.toString(), 2, '0');\n}\n\nconst fileSizeUnits = ['B', 'KB', 'MB', 'GB'];\nexport function formatFileSize(size: number | any) {\n    if (typeof size !== \"number\" || isNaN(size)) return 'NaN';\n    var unit = 0;\n    while (unit < fileSizeUnits.length - 1 && size >= 1024) {\n        unit++;\n        size /= 1024;\n    }\n    return size.toFixed(2) + ' ' + fileSizeUnits[unit];\n}\n\nexport function formatDateTime(date: Date) {\n    var now = new Date();\n    var sameday = date.getFullYear() === now.getFullYear()\n        && date.getMonth() === now.getMonth()\n        && date.getDate() === now.getDate();\n    return sameday ? date.toLocaleTimeString() : date.toLocaleString();\n}\n\nexport function numLimit(num: number, min: number, max: number) {\n    return (num < min || typeof num != 'number' || isNaN(num)) ? min :\n        (num > max) ? max : num;\n}\n\nexport function createName(nameFunc: (num: number) => string, existsFunc: (str: string) => boolean) {\n    for (let num = 0; ; num++) {\n        let str = nameFunc(num);\n        if (!existsFunc(str)) return str;\n    }\n}\n\n/** \n * btoa, but supports Unicode and uses UTF-8 encoding.\n * @see https://stackoverflow.com/questions/30106476\n */\nexport function base64EncodeUtf8(str) {\n    return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g,\n        function toSolidBytes(match, p1) {\n            return String.fromCharCode(('0x' + p1) as any);\n        }));\n}\n\nexport function sleepAsync(time: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, time);\n    });\n}\n\n// buildDOM: <T extends BuildDomReturn = BuildDomReturn>(tree: BuildDomExpr, ctx?: BuildDOMCtx) => T\n//     = null as any; // It will be initialized by view.ts\n\n// jsxFactory: typeof jsxFactory = null as any;\n// jsx: typeof jsxFactory = null as any;\n\n/** Remove all children from the node */\nexport function clearChildren(node: Node) {\n    while (node.lastChild) node.removeChild(node.lastChild);\n}\n\n/** Remove all children from the node (if needed) and append one (if present) */\nexport function replaceChild(node: Node, newChild?: Node) {\n    clearChildren(node);\n    if (newChild) node.appendChild(newChild);\n}\n\n/** Add or remove a classname for the element\n * @param force - true -> add; false -> remove; undefined -> toggle.\n */\nexport function toggleClass(element: HTMLElement, clsName: string, force?: boolean) {\n    var clsList = element.classList;\n    if (clsList.toggle) return clsList.toggle(clsName, force);\n    if (force === undefined) force = !clsList.contains(clsName);\n    if (force) clsList.add(clsName);\n    else clsList.remove(clsName);\n    return force;\n}\n\nexport interface FadeOutOptions {\n    className?: string;\n    duration?: number;\n    remove?: boolean;\n}\n\nexport interface FadeoutResult {\n    readonly finished: boolean;\n    onFinished(callback: Action): this;\n    cancel(finish?: boolean): void;\n}\n\n/** Fade out the element and remove it */\nexport function fadeout(element: HTMLElement, options?: FadeOutOptions): FadeoutResult {\n    const { className = 'fading-out', duration = 500, remove = true } = options || {};\n    element.classList.add(className);\n    var cb: Action | null = null;\n    var end: Action<boolean | void> | null = (finish = true) => {\n        if (!end) return; // use a random variable as flag ;)\n        end = null;\n        element.removeEventListener('transitionend', onTransitionend);\n        element.classList.remove(className);\n        if (remove && finish) {\n            element.remove();\n        }\n        finish && cb?.();\n    };\n    var onTransitionend = function (e: TransitionEvent) {\n        if (e.eventPhase === Event.AT_TARGET) end?.();\n    };\n    element.addEventListener('transitionend', onTransitionend);\n    setTimeout(end, duration); // failsafe\n    return {\n        get finished() { return !end; },\n        onFinished(callback: Action) {\n            if (!end) callback();\n            else cb = callback;\n            return this;\n        },\n        cancel(finish = false) {\n            end?.(finish);\n        }\n    };\n}\n\nexport function listenPointerEvents(element: HTMLElement, callback: (e: PtrEvent) => void | 'track', options?: AddEventListenerOptions) {\n    var touchDown = false;\n    var mouseDown = function (e: MouseEvent) {\n        if (callback({ type: 'mouse', ev: e, point: e, action: 'down' }) === 'track') {\n            var mousemove = function (e: MouseEvent) {\n                callback({ type: 'mouse', ev: e, point: e, action: 'move' });\n            };\n            var mouseup = function (e: MouseEvent) {\n                document.removeEventListener('mousemove', mousemove, true);\n                document.removeEventListener('mouseup', mouseup, true);\n                callback({ type: 'mouse', ev: e, point: e, action: 'up' });\n            };\n            document.addEventListener('mousemove', mousemove, true);\n            document.addEventListener('mouseup', mouseup, true);\n        }\n    };\n    var touchStart = function (e: TouchEvent) {\n        var ct = e.changedTouches[0];\n        var ret = callback({\n            type: 'touch', touch: 'start', ev: e, point: ct,\n            action: touchDown ? 'move' : 'down'\n        });\n        if (!touchDown && ret === 'track') {\n            touchDown = true;\n            var touchmove = function (e: TouchEvent) {\n                var ct = e.changedTouches[0];\n                callback({ type: 'touch', touch: 'move', ev: e, point: ct, action: 'move' });\n            };\n            var touchend = function (e: TouchEvent) {\n                if (e.touches.length === 0) {\n                    touchDown = false;\n                    element.removeEventListener('touchmove', touchmove);\n                    element.removeEventListener('touchend', touchend);\n                    element.removeEventListener('touchcancel', touchend);\n                }\n                var ct = e.changedTouches[0];\n                callback({\n                    type: 'touch', touch: 'end', ev: e, point: ct,\n                    action: touchDown ? 'move' : 'up'\n                });\n            };\n            element.addEventListener('touchmove', touchmove, options);\n            element.addEventListener('touchend', touchend, options);\n            element.addEventListener('touchcancel', touchend, options);\n        }\n    };\n    element.addEventListener('mousedown', mouseDown, options);\n    element.addEventListener('touchstart', touchStart, options);\n    return {\n        remove: () => {\n            element.removeEventListener('mousedown', mouseDown, options);\n            element.removeEventListener('touchstart', touchStart, options);\n        }\n    };\n}\n\nexport function listenEvent<K extends keyof HTMLElementEventMap>(element: HTMLElement, event: K,\n    handler: (ev: HTMLElementEventMap[K]) => any) {\n    element.addEventListener(event, handler);\n    return {\n        remove: () => element.removeEventListener(event, handler)\n    };\n}\n\nexport function listenEvents<K extends Array<keyof HTMLElementEventMap>>(element: HTMLElement, events: K,\n    handler: (ev: HTMLElementEventMap[K[number]]) => any) {\n    events.forEach(event => element.addEventListener(event, handler));\n    return {\n        remove: () => events.forEach(event => element.removeEventListener(event, handler))\n    };\n}\n\nexport function injectCss(css: string, options?: { tag: string; }) {\n    document.head.appendChild(buildDOM({ tag: options?.tag ?? 'style', text: css }));\n}\n\nexport function arrayRemove<T>(array: T[], val: T) {\n    for (let i = 0; i < array.length; i++) {\n        if (array[i] === val) {\n            array.splice(i, 1);\n            i--;\n        }\n    }\n}\n\nexport function arrayInsert<T>(array: T[], val: T, pos?: number) {\n    if (pos === undefined) array.push(val);\n    else array.splice(pos, 0, val);\n}\n\nexport function arrayMap<T, TRet>(arr: Iterable<T>, func: (item: T, idx: number) => TRet) {\n    if (arr instanceof Array) return arr.map(func);\n    var idx = 0;\n    var ret = new Array<TRet>((arr as any).length);\n    for (var item of arr) {\n        ret[idx] = (func(item, idx));\n        idx++;\n    }\n    return ret;\n}\n\nexport function arrayForeach<T>(arr: Iterable<T>, func: (item: T, idx: number) => void) {\n    var idx = 0;\n    for (var item of arr) {\n        func(item, idx++);\n    }\n}\n\n\nexport function foreachFlaten<T>(arr: T[], func: Action<T>) {\n    for (const it of arr) {\n        if (it instanceof Array) {\n            foreachFlaten(it as T[], func);\n        } else {\n            func(it);\n        }\n    }\n}\n\nexport function arrayFind<T>(arr: Iterable<T>, func: (item: T, idx: number) => any): T | null {\n    if (arr instanceof Array) return arr.find(func);\n    var idx = 0;\n    for (var item of arr) {\n        if (func(item, idx++)) return item;\n    }\n    return null;\n}\n\nexport function arraySum<T>(arr: Iterable<T>, func: (item: T) => number | null | undefined) {\n    var sum = 0;\n    arrayForeach(arr, (x) => {\n        var val = func(x);\n        if (val) sum += val;\n    });\n    return sum;\n}\n\nexport function objectApply<T>(obj: Partial<T>, kv?: Partial<T>, keys?: Array<keyof T>) {\n    if (kv) {\n        if (!keys) return _object_assign(obj, kv);\n        for (const key in kv as any) {\n            if (_object_hasOwnProperty.call(kv, key) && (!keys || keys.indexOf(key as any) >= 0)) {\n                const val = kv[key];\n                obj[key] = val;\n            }\n        }\n    }\n    return obj;\n}\n\nexport function objectInit<T>(obj: T, kv?: ObjectInit<T>, keys?: Array<keyof T>) {\n    if (kv) {\n        for (const key in kv as any) {\n            if (_object_hasOwnProperty.call(kv, key) && (!keys || keys.indexOf(key as any) >= 0)) {\n                const val = kv[key];\n                if (key.startsWith(\"on\") && obj[key] instanceof Callbacks) {\n                    (obj[key] as Callbacks).add(val);\n                } else {\n                    obj[key] = val;\n                }\n            }\n        }\n    }\n    return obj;\n}\n\nexport function mod(a: number, b: number): number {\n    if (a < 0) a = b + a;\n    return a % b;\n}\n\nexport function readBlobAsDataUrl(blob: Blob) {\n    return new Promise<string>((resolve, reject) => {\n        var reader = new FileReader();\n        reader.onload = (ev) => {\n            resolve(reader.result as string);\n        };\n        reader.onerror = (ev) => reject();\n        reader.readAsDataURL(blob);\n    });\n}\n\nArray.prototype.remove = function (item) {\n    arrayRemove(this, item);\n};\n\ndeclare global {\n    interface Array<T> {\n        /**\n         * (Extension method) remove the specified item from array.\n         * @param item The item to be removed from array\n         */\n        remove(item: T): void;\n    }\n}\n\nexport type ObjectInit<T> = Partial<ConvertObjectWithCallbacks<T>>;\n\nexport type ConvertObjectWithCallbacks<T> = {\n    [P in keyof T]: P extends `on${string}` ? CallbackInit<T[P]> : T[P];\n};\n\nexport type CallbackInit<T> = T extends Callbacks<infer U> ? T | U : T;\n\nexport function startBlockingDetect(threshold = 20) {\n    var begin = Date.now();\n    var lastRun = Date.now();\n    setInterval(() => {\n        var now = Date.now();\n        if (now - lastRun >= threshold) {\n            console.info(`[Blocking] ${(now - begin) / 1000}s: blocked for ${now - lastRun} ms`);\n        }\n        lastRun = now;\n    }, 1);\n}\n\nexport class Timer {\n    callback: () => void;\n    cancelFunc: (() => void) | undefined;\n    constructor(callback: () => void) {\n        this.callback = callback;\n        this.cancelFunc = undefined;\n    }\n    timeout(time: number) {\n        this.tryCancel();\n        var handle = setTimeout(this.callback, time);\n        this.cancelFunc = () => window.clearTimeout(handle);\n    }\n    interval(time: number) {\n        this.tryCancel();\n        var handle = setInterval(this.callback, time);\n        this.cancelFunc = () => window.clearInterval(handle);\n    }\n    animationFrame() {\n        this.tryCancel();\n        var handle = requestAnimationFrame(this.callback);\n        this.cancelFunc = () => cancelAnimationFrame(handle);\n    }\n    tryCancel() {\n        if (this.cancelFunc) {\n            this.cancelFunc();\n            this.cancelFunc = undefined;\n        }\n    }\n}\n\nexport type PtrEvent = ({\n    type: 'mouse';\n    ev: MouseEvent;\n} | {\n    type: 'touch';\n    touch: 'start' | 'move' | 'end';\n    ev: TouchEvent;\n}) & {\n    action: 'down' | 'move' | 'up';\n    point: MouseEvent | Touch;\n};\n\n\n// Some interesting function types:\nexport type AnyFunc = (...args: any) => any;\nexport type Action<T = void> = (arg: T) => void;\nexport type Func<TRet> = () => TRet;\nexport type AsyncFunc<T> = Func<Promise<T>>;\n\nexport type FuncOrVal<T> = T | Func<T>;\n\n\nexport class SettingItem<T> {\n    key: string;\n    type: SiType<T>;\n    data: T;\n    isInitial: boolean;\n    onRender: Action<T> | null = null;\n    constructor(key: string, type: 'bool' | 'str' | 'json' | SiType<T>, initial: T) {\n        this.key = key;\n        type = this.type = typeof type === 'string' ? SettingItem.types[type] : type;\n        if (!type || !type.serialize || !type.deserialize) throw new Error(\"invalid 'type' arugment\");\n        this.readFromStorage(initial);\n    }\n    readFromStorage(initial: T) {\n        var str = this.key ? localStorage.getItem(this.key) : null;\n        this.isInitial = !str;\n        this.set(str ? this.type.deserialize(str) : initial, true);\n    }\n    render(fn: (obj: T) => void, dontRaiseNow?: boolean) {\n        if (!dontRaiseNow) fn(this.data);\n        const oldFn = this.onRender;\n        const newFn = fn;\n        if (oldFn) fn = function (x) { oldFn(x); newFn(x); };\n        this.onRender = fn;\n        return this;\n    }\n    bindToBtn(btn: HTMLElement, prefix: string[]) {\n        if (this.type as any !== SettingItem.types.bool) throw new Error('only for bool type');\n        var span = document.createElement('span');\n        btn.insertBefore(span, btn.firstChild);\n        this.render(function (x) {\n            btn.classList.toggle('disabled', !x);\n            prefix = prefix || [\"❌\", \"✅\"];\n            span.textContent = prefix[+x];\n        });\n        var thiz = this;\n        btn.addEventListener('click', function () { thiz.toggle(); });\n        return this;\n    }\n    remove() {\n        localStorage.removeItem(this.key);\n    }\n    save() {\n        this.isInitial = false;\n        localStorage.setItem(this.key, this.type.serialize(this.data));\n    }\n    set(data: T, dontSave?: boolean) {\n        this.data = data;\n        this.isInitial = false;\n        this.onRender && this.onRender(data);\n        if (!dontSave && this.key) this.save();\n    }\n    get() {\n        return this.data;\n    }\n    toggle() {\n        if (this.type as any !== SettingItem.types.bool) throw new Error('only for bool type');\n        this.set((!(this.data as any)) as any);\n    }\n    loop(arr: any[]) {\n        var curData = this.data;\n        var oldIndex = arr.findIndex(function (x) { return x === curData; });\n        var newData = arr[(oldIndex + 1) % arr.length];\n        this.set(newData);\n    }\n\n    static types = {\n        bool: {\n            serialize: function (data) { return data ? 'true' : 'false'; },\n            deserialize: function (str) { return str === 'true' ? true : str === 'false' ? false : undefined; }\n        },\n        str: {\n            serialize: function (x) { return x; },\n            deserialize: function (x) { return x; }\n        },\n        json: {\n            serialize: function (x) { return JSON.stringify(x); },\n            deserialize: function (x) { return JSON.parse(x); }\n        }\n    };\n}\n\ninterface SiType<T> {\n    serialize: (obj: T) => string;\n    deserialize: (str: string) => T;\n}\n\nclass CallbacksImpl<T extends AnyFunc = Action> extends Array<T> {\n    private _hook?: Callbacks<(adding: boolean, func: T) => void> = undefined;\n    get onChanged() {\n        this._hook ??= new Callbacks();\n        return this._hook;\n    }\n    invoke(...args: Parameters<T>) {\n        this.forEach((x) => {\n            try {\n                x.apply(this, args);\n            } catch (error) {\n                console.error(\"Error in callback\", error);\n            }\n        });\n    }\n    add(callback: T) {\n        this.push(callback);\n        this._hook?.invoke(true, callback);\n        return callback;\n    }\n    remove(callback: T) {\n        super.remove(callback);\n        this._hook?.invoke(false, callback);\n    }\n}\n\nexport interface Callbacks<T extends AnyFunc = Action> {\n    invoke(...args: Parameters<T>): void;\n    add(callback: T): T;\n    remove(callback: T): void;\n    readonly length: number;\n    readonly onChanged: Callbacks<(adding: boolean, func: T) => void>;\n}\nexport const Callbacks: { new <T extends AnyFunc = Action>(): Callbacks<T>; } = CallbacksImpl;\n\nexport class Ref<T> {\n    private _value: T | undefined = undefined;\n    private _onChanged: Callbacks<Action<Ref<T>>> | undefined = undefined;\n    get onChanged() {\n        if (!this._onChanged) this._onChanged = new Callbacks();\n        return this._onChanged;\n    }\n    get value() { return this._value; }\n    set value(val) {\n        this._value = val;\n        if (this._onChanged) this.onChanged.invoke(this);\n    }\n}\n\nexport class Lazy<T> {\n    private _func?: Func<T>;\n    private _value?: T;\n    get computed() { return !this._func; }\n    get rawValue() { return this._value; }\n    get value(): T {\n        if (this._func) {\n            this._value = this._func();\n            this._func = undefined;\n        }\n        return this._value!;\n    }\n    constructor(func: Func<T>) {\n        this._func = func;\n        this._value = undefined;\n    }\n}\n\nexport class Semaphore {\n    queue = new Array<Action>();\n    maxCount = 1;\n    runningCount = 0;\n    constructor(init: ObjectInit<Semaphore>) {\n        objectInit(this, init);\n    }\n    enter(): Promise<any> {\n        if (this.runningCount === this.maxCount) {\n            var resolve: Action;\n            var prom = new Promise((res) => { resolve = res; });\n            this.queue.push(resolve!);\n            return prom;\n        } else {\n            this.runningCount++;\n            return Promise.resolve();\n        }\n    }\n    exit() {\n        if (this.runningCount === this.maxCount && this.queue.length) {\n            if (window.queueMicrotask) {\n                window.queueMicrotask(this.queue.shift() as any);\n            } else {\n                setTimeout(this.queue.shift()!, 0);\n            }\n        } else {\n            this.runningCount--;\n        }\n    }\n    async run(func: () => Promise<any>) {\n        await this.enter();\n        try {\n            await func();\n        } finally {\n            this.exit();\n        }\n    }\n}\n\n/** Just like CancellationToken[Source] on .NET */\nexport class CancelToken {\n    cancelled = false;\n    onCancelled = new Callbacks();\n    cancel() {\n        if (this.cancelled) return;\n        this.cancelled = true;\n        this.onCancelled.invoke();\n    }\n    throwIfCancelled() {\n        if (this.cancelled)\n            throw new Error(\"operation cancelled.\");\n    }\n}\n\nexport class AutoResetEvent {\n    private _whenNotify: Promise<void> | null = null;\n    private _callback: Action | null = null;\n\n    wait() {\n        if (!this._whenNotify) {\n            this._whenNotify = new Promise(r => {\n                this._callback = () => {\n                    this._callback = this._whenNotify = null;\n                    r();\n                };\n            });\n        }\n        return this._whenNotify;\n    }\n    set() {\n        this._callback && this._callback();\n    }\n}\n\nexport interface IId {\n    id: keyof any;\n}\n\nexport class DataUpdatingHelper<T extends IId, TData extends IId = T> {\n    items: Iterable<T>;\n    update(newData: Iterable<TData>) {\n        const oldData = this.items;\n        var dataDict: Record<keyof any, TData> = {};\n        for (const n of newData) {\n            dataDict[this.dataSelectId(n)] = n;\n        }\n        var itemDict: Record<any, T> = {};\n        var removed: T[] = [];\n        for (const d of oldData) {\n            const id = this.selectId(d);\n            if (dataDict[id] !== undefined) {\n                itemDict[id] = d;\n            } else {\n                removed.push(d);\n            }\n        }\n        for (let i = removed.length - 1; i >= 0; i--)\n            this.removeItem(removed[i]);\n        var pos = 0;\n        for (const n of newData) {\n            const d = itemDict[this.dataSelectId(n)];\n            if (d !== undefined) {\n                this.updateItem(d, n);\n            } else {\n                this.addItem(n, pos);\n            }\n            pos++;\n        }\n    }\n    updateOrRebuildAll(newData: Iterable<TData>) {\n        this.update(newData);\n        if (!this.isSame(newData)) this.rebuildAll(newData);\n    }\n    isSame(newData: Iterable<TData>) {\n        var t = this.items[Symbol.iterator]();\n        for (const n of newData) {\n            var d = t.next();\n            if (d.done) return false;\n            if (this.selectId(d.value) !== this.dataSelectId(n)) return false;\n        }\n        if (!t.next().done) return false;\n        return true;\n    }\n    rebuildAll(newData: Iterable<TData>) {\n        var oldData = this.items;\n        if (oldData instanceof Array) {\n            for (let i = oldData.length - 1; i >= 0; i--) {\n                this.removeItem(oldData[i]);\n            }\n        } else {\n            for (const o of oldData) {\n                this.removeItem(o);\n            }\n        }\n        let i = 0;\n        for (const n of newData) {\n            this.addItem(n, i++);\n        }\n    }\n    protected selectId(obj: T): any { return obj.id; }\n    protected dataSelectId(obj: TData): any { return obj.id; }\n    addItem(obj: TData, pos: number) { }\n    updateItem(old: T, data: TData) { }\n    removeItem(obj: T) { }\n}\n\nexport class EventRegistrations {\n    list: { event: Callbacks; func: AnyFunc; }[] = [];\n    add<T extends AnyFunc>(event: Callbacks<T>, func: T) {\n        this.list.push({ event, func });\n        event.add(func);\n        return func;\n    }\n    removeAll() {\n        while (this.list.length) {\n            var r = this.list.pop()!;\n            r.event.remove(r.func);\n        }\n    }\n}\n\nexport class TextCompositionWatcher {\n    dom: HTMLElement;\n    onCompositingChanged = new Callbacks<Action>();\n    private _isCompositing = false;\n    get isCompositing() { return this._isCompositing; }\n    set isCompositing(val) {\n        this._isCompositing = val;\n        this.onCompositingChanged.invoke();\n    }\n    constructor(dom: IDOM) {\n        this.dom = getDOM(dom) as HTMLElement;\n        this.dom.addEventListener('compositionstart', (ev) => {\n            this.isCompositing = true;\n        });\n        this.dom.addEventListener('compositionend', (ev) => {\n            this.isCompositing = false;\n        });\n    }\n}\n\nexport class InputStateTracker {\n    state = {\n        mouseDown: false,\n        mouseIn: false,\n        focusIn: false,\n    };\n    private _removeEvents: Action | null = null;\n    private _removePointerEvents: Action | null = null;\n    readonly onChanged = new Callbacks<Action<keyof InputStateTracker['state']>>();\n    constructor(readonly dom: HTMLElement) {\n        this._removeEvents = listenEvents(dom, ['mouseenter', 'mouseleave', 'focusin', 'focusout'], (e) => {\n            switch (e.type) {\n                case 'mouseenter':\n                    this.stateChanged('mouseIn', true);\n                    break;\n                case 'mouseleave':\n                    this.stateChanged('mouseIn', false);\n                    break;\n                case 'focusin':\n                    this.stateChanged('focusIn', true);\n                    break;\n                case 'focusout':\n                    this.stateChanged('focusIn', false);\n                    break;\n            }\n        }).remove;\n\n        this._removePointerEvents = listenPointerEvents(dom, (e) => {\n            if (e.action == 'down') {\n                this.stateChanged('mouseDown', true);\n                return 'track';\n            } else if (e.action == 'up') {\n                this.stateChanged('mouseDown', false);\n            }\n        }).remove;\n    }\n    private stateChanged<T extends keyof InputStateTracker['state']>(state: T, val: InputStateTracker['state'][T]) {\n        this.state[state] = val;\n        this.onChanged.invoke(state);\n    }\n    removeListeners() {\n        this._removeEvents?.();\n        this._removePointerEvents?.();\n        this._removePointerEvents = this._removeEvents = null;\n    }\n}\n\n\n/** @deprecated May be removed in the future to make tree-shaking easier. */\nexport const utils = {\n    strPadLeft,\n    formatTime,\n    formatFileSize,\n    formatDateTime,\n    numLimit,\n    createName,\n    base64EncodeUtf8,\n    sleepAsync,\n    clearChildren,\n    replaceChild,\n    toggleClass,\n    fadeout,\n    listenPointerEvents,\n    listenEvent,\n    listenEvents,\n    injectCss,\n    arrayRemove,\n    arrayInsert,\n    arrayMap,\n    arrayForeach,\n    arrayFind,\n    arraySum,\n    objectApply,\n    objectInit,\n    mod,\n    readBlobAsDataUrl,\n    buildDOM,\n    Timer,\n};\n","export const version = \"1.9.11\""],"names":["View","constructor","dom","this","undefined","BuildDOMCtx","MountState","Unmounted","_domctx","view","domExprCreated","static","obj","position","_position","ensureDom","_dom","domCreated","baseView","_baseView","mountState","_mountState","hidden","val","r","createDom","buildView","postCreateDom","updateDom","document","createElement","debugging","dataset","update","mountStateChanged","state","console","trace","_childViews","child","getDomById","id","dict","updateWith","kv","objectApply","updateAllWith","updateAll","toggleClass","clsName","force","getDOM","addChild","appendView","appendChild","onActive","_onActive","Callbacks","addEventListener","e","invoke","handleKeyDown","code","rect","getBoundingClientRect","MouseEvent","clientX","x","clientY","y","relatedTarget","preventDefault","childViews","addView","pos","_registerChild","Mounted","Mounting","_insertToDom","changeMountState","items","parentView","Error","length","push","splice","i","removeView","_ensureItem","_removeFromDom","removeAllView","removeFromParent","updateChildren","item","insertBefore","remove","tryGetDOM","idom","Node","error","parent","childView","warnMountingView","buildDOM","data","prototype","ContainerView","super","Symbol","iterator","get","idx","map","func","arrayMap","find","arrayFind","forEach","arrayForeach","emptyAction","updateFunctionFactoryCache","Map","_compileUpdate","setDict","key","node","addUpdateAction","action","actions","statements","values","a","compile","funcBody","join","updateFuncFactory","Function","set","apply","TextAction","run","textContent","HiddenAction","UpdateAction","tryHandleValues","ctx","createTextNode","buildDomCore","ttl","JsxNode","tag","match","ele","reg","exec","ch","classList","add","substr","createElementFromTag","hasOwnProperty","buildDOMHandleKey","init","Array","foreachFlaten","value","className","styleKey","Object","call","styleVal","style","attrs","childs","buildDom","startsWith","it","jsxBuildCore","c","jsxFactory","args","jsx","_object_assign","assign","_object_hasOwnProperty","strPadLeft","str","len","formatTime","sec","isNaN","Math","round","min","floor","toString","fileSizeUnits","formatFileSize","size","unit","toFixed","formatDateTime","date","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","toLocaleString","numLimit","num","max","createName","nameFunc","existsFunc","base64EncodeUtf8","btoa","encodeURIComponent","replace","p1","String","fromCharCode","sleepAsync","time","Promise","resolve","setTimeout","clearChildren","lastChild","removeChild","replaceChild","newChild","element","clsList","toggle","contains","fadeout","options","duration","cb","end","finish","removeEventListener","onTransitionend","eventPhase","Event","AT_TARGET","finished","onFinished","callback","cancel","listenPointerEvents","touchDown","mouseDown","type","ev","point","mousemove","mouseup","touchStart","ct","changedTouches","ret","touch","touchmove","touchend","touches","listenEvent","event","handler","listenEvents","events","injectCss","css","head","text","arrayRemove","array","arrayInsert","arr","arraySum","sum","keys","indexOf","objectInit","mod","b","readBlobAsDataUrl","blob","reject","reader","FileReader","onload","result","onerror","readAsDataURL","Timer","cancelFunc","timeout","tryCancel","handle","window","clearTimeout","interval","setInterval","clearInterval","animationFrame","requestAnimationFrame","cancelAnimationFrame","SettingItem","initial","types","serialize","deserialize","readFromStorage","localStorage","getItem","isInitial","render","fn","dontRaiseNow","oldFn","onRender","newFn","bindToBtn","btn","prefix","bool","span","firstChild","thiz","removeItem","save","setItem","dontSave","loop","curData","oldIndex","findIndex","newData","json","JSON","stringify","parse","onChanged","_hook","utils","wait","_whenNotify","_callback","cancelled","onCancelled","throwIfCancelled","oldData","dataDict","n","dataSelectId","itemDict","removed","d","selectId","updateItem","addItem","updateOrRebuildAll","isSame","rebuildAll","t","next","done","o","old","list","removeAll","pop","mouseIn","focusIn","_removeEvents","stateChanged","_removePointerEvents","removeListeners","_func","_value","computed","rawValue","_onChanged","enter","runningCount","maxCount","prom","res","queue","exit","queueMicrotask","shift","isCompositing","_isCompositing","onCompositingChanged","threshold","begin","lastRun","info"],"mappings":"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"}