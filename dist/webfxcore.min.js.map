{"version":3,"file":"webfxcore.min.js","sources":["https://github.com/lideming/webfx/raw/v1.9.0/src/lib/view.ts","https://github.com/lideming/webfx/raw/v1.9.0/src/lib/buildDOM.ts","https://github.com/lideming/webfx/raw/v1.9.0/src/lib/utils.ts","https://github.com/lideming/webfx/raw/v1.9.0/src/lib/I18n.ts","https://github.com/lideming/webfx/raw/v1.9.0/version"],"sourcesContent":["import { Action, Callbacks, objectApply, toggleClass, arrayFind, arrayForeach, arrayMap } from \"./utils\";\nimport { buildDOM, BuildDOMCtx, BuildDomExpr, buildView, IDOM, IView, JsxNode, MountState } from \"./buildDOM\";\n\n\nexport class View<T extends HTMLElement = HTMLElement> implements IView {\n    constructor(dom?: BuildDomExpr) {\n        this._domctx.view = this;\n        if (dom) this.domExprCreated(dom);\n    }\n\n    static getView(obj: BuildDomExpr) { return obj instanceof View ? obj : new View(obj); }\n\n    static debugging = false;\n\n    public parentView?: View = undefined;\n    public _position?: number = undefined;\n    get position() { return this._position; }\n\n    private _domctx = new BuildDOMCtx();\n\n    protected _dom: T | undefined = undefined;\n    public get dom() {\n        this.ensureDom();\n        return this._dom!;\n    }\n    public get domCreated() { return !!this._dom; }\n\n    private _baseView: View | undefined = undefined;\n    public get baseView() { return this._baseView; }\n\n    private _mountState: MountState = MountState.Unmounted;\n    public get mountState() { return this._mountState; }\n\n    public get hidden() { return this.dom.hidden; }\n    public set hidden(val: boolean) { this.dom.hidden = val; }\n\n    public ensureDom() {\n        if (!this._dom) {\n            var r = this.createDom();\n            this.domExprCreated(r);\n        }\n    }\n\n    private domExprCreated(r: BuildDomExpr) {\n        var view = buildView(r, this._domctx);\n        if (view instanceof View) {\n            this._baseView = view;\n            this._dom = view.dom as T;\n        } else {\n            this._dom = view as T;\n        }\n        this.postCreateDom();\n        this.updateDom();\n    }\n\n    protected createDom(): BuildDomExpr {\n        return document.createElement('div');\n    }\n\n    /** Will be called when the dom is created */\n    protected postCreateDom() {\n        if (View.debugging) {\n            if (this.dom.dataset)\n                this.dom.dataset['webfx'] = MountState[this._mountState];\n        }\n    }\n\n    /** Will be called when the dom is created, after postCreateDom() */\n    public updateDom() {\n        this._domctx.update();\n    }\n\n    /** Will be called when the mounting state is changed  */\n    public mountStateChanged(state: MountState) {\n        if (state == this._mountState) {\n            console.trace(\"mountState unchanged\", state, this);\n            return;\n        }\n        this._mountState = state;\n        if (View.debugging) {\n            if (!this._baseView && this.domCreated && this.dom.dataset) {\n                if (this.dom.dataset['webfx'] == MountState[state]) {\n                    console.trace('mountState on the DOM is changed by other view', state, this);\n                }\n                this.dom.dataset['webfx'] = MountState[state];\n            }\n        }\n        if (this._baseView) {\n            // let the baseView do the rest\n            this._baseView.mountStateChanged(state);\n            return;\n        }\n        if (this._childViews) for (const child of this._childViews) {\n            child.mountStateChanged(state);\n        }\n    }\n\n    public getDomById(id: string): HTMLElement | null {\n        this.ensureDom();\n        return this._domctx.dict?.[id] ?? null;\n    }\n\n    /** Assign key-values and call `updateDom()` */\n    updateWith(kv: Partial<this>) {\n        objectApply(this, kv);\n        this.updateDom();\n    }\n    updateAllWith(kv: Partial<this>) {\n        objectApply(this, kv);\n        this.updateAll();\n    }\n    toggleClass(clsName: string, force?: boolean) {\n        toggleClass(this.dom, clsName, force);\n    }\n\n    // Implements `IDOMInstance`\n    // appendView(view: View) { this.dom.appendChild(view.dom); }\n    getDOM() { return this.dom; }\n    addChild(child: BuildDomExpr) {\n        const view = buildView(child, this._domctx);\n        if (view instanceof View) {\n            this.appendView(view);\n        } else {\n            this.dom.appendChild(view);\n        }\n    }\n\n    private _onActive: Callbacks<Action<MouseEvent>> | undefined = undefined;\n    get onActive() {\n        if (!this._onActive) {\n            this._onActive = new Callbacks<Action<MouseEvent>>();\n            this.dom.addEventListener('click', (e: MouseEvent) => {\n                this._onActive!.invoke(e);\n            });\n            this.dom.addEventListener('keydown', (e: KeyboardEvent) => {\n                this.handleKeyDown(e);\n            });\n        }\n        return this._onActive;\n    }\n\n    handleKeyDown(e: KeyboardEvent) {\n        if (e.code === 'Enter') {\n            const rect = this.dom.getBoundingClientRect();\n            this._onActive?.invoke(new MouseEvent('click', {\n                clientX: rect.x, clientY: rect.y,\n                relatedTarget: this.dom\n            }));\n            e.preventDefault();\n        }\n    }\n\n    private _childViews: View[] | undefined = undefined;\n    get childViews(): View[] {\n        // Return the childViews of the baseView if exists\n        if (this._baseView) { return this._baseView.childViews; }\n\n        // Lazy creating childViews array\n        if (!this._childViews) this._childViews = [];\n        return this._childViews;\n    }\n    appendView(view: View) {\n        this.addView(view);\n    }\n    addView(view: View, pos?: number) {\n        this._registerChild(view, pos, false);\n        if (this._mountState == MountState.Mounted) view.mountStateChanged(MountState.Mounting);\n        this._insertToDom(view, pos);\n        if (this._mountState != MountState.Unmounted) view.mountStateChanged(this._mountState);\n    }\n    _registerChild(view: View, pos?: number, changeMountState = true) {\n        const items = this.childViews;\n        if (view.parentView) throw new Error('the view is already in a container view');\n        view.parentView = this;\n        if (pos === undefined) {\n            view._position = items.length;\n            items.push(view);\n        } else {\n            items.splice(pos, 0, view);\n            for (let i = pos; i < items.length; i++) {\n                items[i]._position = i;\n            }\n        }\n        if (changeMountState && this._mountState != MountState.Unmounted) {\n            view.mountStateChanged(this._mountState);\n        }\n    }\n    removeView(view: View | number) {\n        view = this._ensureItem(view);\n        this._removeFromDom(view);\n        var pos = view._position!;\n        view.parentView = view._position = undefined;\n        this.childViews.splice(pos, 1);\n        for (let i = pos; i < this.childViews.length; i++) {\n            this.childViews[i]._position = i;\n        }\n        if (this._mountState != MountState.Unmounted) {\n            view.mountStateChanged(MountState.Unmounted);\n        }\n    }\n    removeAllView() {\n        while (this.childViews.length) this.removeView(this.childViews.length - 1);\n    }\n    /** updateDom() then updateChildren() */\n    updateAll() {\n        this.updateDom();\n        if (this.baseView) return this.baseView.updateAll();\n        this.updateChildren();\n    }\n    /** Call updateDom() on the whole tree */\n    updateChildren() {\n        if (this._childViews) for (const child of this._childViews) {\n            child.updateAll();\n        }\n    }\n    protected _insertToDom(item: View, pos?: number) {\n        if (pos == undefined) this.dom.appendChild(item.dom);\n        else this.dom.insertBefore(item.dom, this.childViews[pos + 1]?.dom || null);\n    }\n    protected _removeFromDom(item: View) {\n        if (item.domCreated) item.dom.remove();\n    }\n    protected _ensureItem(item: View | number) {\n        if (typeof item === 'number') item = this.childViews[item];\n        else if (!item) throw new Error('item is null or undefined.');\n        else if (item.parentView !== this) throw new Error('the item is not in this listview.');\n        return item;\n    }\n\n}\n\nexport function tryGetDOM(idom: IDOM | null | undefined) {\n    if (!idom) return idom;\n    if (idom instanceof View) {\n        return idom.getDOM();\n    } else if (idom instanceof Node) {\n        return idom;\n    } else if (idom && \"getDOM\" in idom) {\n        return idom.getDOM();\n    }\n}\n\nexport function getDOM(idom: IDOM) {\n    var dom = tryGetDOM(idom);\n    if (!dom) {\n        console.error(\"getDOM():\", idom);\n        throw new Error(\"getDOM(): unsupported parameter: \" + idom);\n    }\n    return dom;\n}\n\nexport function appendView(parent: IDOM, childView: View) {\n    warnMountingView(parent, childView);\n    getDOM(parent).appendChild(childView.dom);\n}\n\nexport function addChild(parent: IDOM, child: BuildDomExpr) {\n    // fast path\n    if (parent instanceof View) parent.addChild(child);\n    else if (parent instanceof Node) {\n        warnMountingView(parent, child);\n        parent.appendChild(buildDOM(child));\n    }\n    // slow path\n    else if ('addChild' in parent) {\n        parent.addChild(child);\n    } else {\n        console.error(\"addChild():\", { parent, child });\n        throw new Error(\"addChild(): unsupported parent\");\n    }\n}\n\nfunction warnMountingView(parent: IDOM, child: BuildDomExpr) {\n    if (child instanceof View) {\n        const data = { parent, child };\n        if (parent instanceof Node)\n            console.trace(\"Should use `mountView()` to mount a view to DOM.\", data);\n        else\n            console.trace(\"Should use `View.addChild()` or `View.appendView()` to add a view into another view.\", data);\n    }\n}\n\nexport function mountView(parent: Node, view: View) {\n    view.mountStateChanged(MountState.Mounting);\n    parent.appendChild(view.dom);\n    view.mountStateChanged(MountState.Mounted);\n}\n\nexport function unmountView(parent: Node, view: View) {\n    view.dom.remove();\n    view.mountStateChanged(MountState.Unmounted);\n}\n\ndeclare global {\n    interface Node {\n        /** @deprecated Use the exported function `getDOM()` instead. */\n        getDOM(): this;\n        /** @deprecated Use the exported function `appendView()` instead. */\n        appendView(view: View);\n        /** @deprecated Use the exported function `addChild()` instead. */\n        addChild(child: BuildDomExpr): void;\n    }\n}\n\n\nNode.prototype.getDOM = function () {\n    console.trace(\"webfx: Node.getDOM() is deprecated. Please use the exported function `getDOM()` instead.\");\n    return this;\n};\n\nNode.prototype.addChild = function (child) {\n    console.trace(\"webfx: Node.addChild() is deprecated. Please use the exported function `addChild()` instead.\");\n    addChild(this, child);\n};\n\nNode.prototype.appendView = function (this: Node, view: View) {\n    console.trace(\"webfx: Node.appendView() is deprecated. Please use the exported function `appendView()` instead.\");\n    appendView(this, view);\n};\n\nexport class ContainerView<T extends View> extends View {\n    addView(view: T, pos?: number): void {\n        return super.addView(view, pos);\n    }\n    removeView(view: T | number): void {\n        super.removeView(view);\n    }\n    protected _insertToDom(item: T, pos: number): void {\n        super._insertToDom(item, pos);\n    }\n    protected _removeFromDom(item: T): void {\n        super._removeFromDom(item);\n    }\n    protected _ensureItem(item: T | number): T {\n        return super._ensureItem(item) as T;\n    }\n\n    get items() { return this.childViews as T[]; }\n    [Symbol.iterator]() { return (this.childViews as T[])[Symbol.iterator](); }\n    get length() { return this.childViews.length; }\n    get(idx: number) {\n        return this.childViews[idx] as T;\n    }\n    map<TRet>(func: (lvi: T) => TRet) { return arrayMap(this, func); }\n    find(func: (lvi: T, idx: number) => any) { return arrayFind(this, func); }\n    forEach(func: (lvi: T, idx: number) => void) { return arrayForeach(this, func); }\n}\n","import { Action, Callbacks, ConvertObjectWithCallbacks, foreachFlaten, Func, FuncOrVal, Ref } from \"./utils\";\nimport { addChild, getDOM, View } from \"./view\";\n\n// BuildDOM types & implementation:\nexport type BuildDomExpr = string | BuildDomNode | HTMLElement | Node | IDOM;\n\nexport type IDOM = Node | View | IView;\n\nexport enum MountState {\n    /** The view is unmounted. */\n    Unmounted,\n    /** The view will be mounted soon. */\n    Mounting,\n    /** The view is mounted (i.e. the DOM is in the document). */\n    Mounted,\n}\n\nexport interface IView {\n    getDOM(): HTMLElement;\n    addChild(child: BuildDomExpr): void;\n    mountStateChanged(state: MountState): void;\n}\n\nexport type BuildDomTag = string;\n\nexport type BuildDomReturn = HTMLElement | Text | Node;\n\nexport interface BuildDomNode {\n    tag?: BuildDomTag;\n\n    child?: BuildDomExpr[] | BuildDomExpr;\n\n    text?: FuncOrVal<string>;\n    hidden?: FuncOrVal<boolean>;\n    init?: Action<HTMLElement>;\n    update?: Action<HTMLElement>;\n\n    ref?: Ref<HTMLElement | Text | Node>;\n\n    _id?: string;\n    /** @deprecated Use `_id` instead */\n    _key?: string;\n\n    [key: string]: any;\n}\n\nexport class BuildDOMCtx {\n    dict: Record<string, HTMLElement> | undefined = undefined;\n    actions: DOMUpdateAction[] | undefined = undefined;\n    view: View | undefined = undefined;\n\n    setDict(key: string, node: HTMLElement) {\n        if (!this.dict) this.dict = {};\n        this.dict[key] = node;\n    }\n    addUpdateAction(action: DOMUpdateAction) {\n        if (!this.actions) this.actions = [];\n        this.actions.push(action);\n    }\n    update() {\n        if (!this.actions) return;\n        for (const a of this.actions) {\n            a.run();\n        }\n    }\n}\n\ninterface DOMUpdateAction {\n    run(): void;\n}\n\nclass TextAction implements DOMUpdateAction {\n    constructor(readonly node: Node, readonly func: Func<string>) { }\n    run() {\n        this.node.textContent = this.func();\n    }\n}\n\nclass HiddenAction implements DOMUpdateAction {\n    constructor(readonly node: HTMLElement, readonly func: Func<boolean>) { }\n    run() {\n        this.node.hidden = this.func();\n    }\n}\n\nclass UpdateAction implements DOMUpdateAction {\n    constructor(readonly node: HTMLElement, readonly func: Action<HTMLElement>) { }\n    run() {\n        this.func(this.node);\n    }\n}\n\nvar createElementFromTag = function (tag: BuildDomTag): HTMLElement {\n    var reg = /[#\\.^]?[\\w\\-]+/y;\n    var match;\n    var ele;\n    while (match = reg.exec(tag)) {\n        var val = match[0];\n        var ch = val[0];\n        if (ch === '.') {\n            ele.classList.add(val.substr(1));\n        } else if (ch === '#') {\n            ele.id = val.substr(1);\n        } else {\n            if (ele) throw new Error('unexpected multiple tags');\n            ele = document.createElement(val);\n        }\n    }\n    return ele;\n};\n\nfunction tryHandleValues(obj: BuildDomExpr, ctx: BuildDOMCtx | null) {\n    if (typeof (obj) === 'string') { return document.createTextNode(obj); }\n    if (typeof obj === 'function') {\n        const val = (obj as any)();\n        if (!val || typeof val !== 'object') {\n            const node = document.createTextNode(val);\n            ctx?.addUpdateAction(new TextAction(node, obj));\n            return node;\n        } else {\n            throw new Error('Unexpected function return value');\n        }\n    }\n    if (Node && obj instanceof Node) return obj as Node;\n    return null;\n}\n\nvar buildDomCore = function (obj: BuildDomExpr, ttl: number, ctx: BuildDOMCtx | null): BuildDomReturn {\n    if (ttl-- < 0) throw new Error('ran out of TTL');\n    var r = tryHandleValues(obj, ctx);\n    if (r) return r;\n    if (obj instanceof JsxNode) {\n        obj = obj.buildView(ctx, ttl);\n        if (!(obj instanceof View)) return obj as Node;\n    }\n    if (obj instanceof View) {\n        ctx?.view?._registerChild(obj);\n        return obj.getDOM();\n    }\n    // if ('getDOM' in (obj as any)) return (obj as any).getDOM();\n    const tag = (obj as BuildDomNode).tag;\n    if (!tag) throw new Error('no tag');\n    var node = createElementFromTag(tag);\n    for (var key in obj as any) {\n        if (obj.hasOwnProperty(key)) {\n            var val = obj[key];\n            buildDOMHandleKey(key, val, node, ctx, ttl);\n        }\n    }\n    const init = obj['init'];\n    if (init) init(node);\n\n    return node;\n};\n\nvar buildDOMHandleKey = function (key: string, val: any, node: HTMLElement, ctx: BuildDOMCtx | null, ttl: number) {\n    if (key === 'child') {\n        if (val instanceof Array) {\n            foreachFlaten(val, function (val) {\n                node.appendChild(buildDomCore(val, ttl, ctx));\n            });\n        } else {\n            node.appendChild(buildDomCore(val, ttl, ctx));\n        }\n    } else if (key === '_id' || key === '_key') {\n        ctx!.setDict(val, node);\n    } else if (key === 'ref') {\n        (val as Ref<any>).value = node;\n    } else if (key === 'text') {\n        if (typeof val === 'function') {\n            ctx!.addUpdateAction(new TextAction(node, val));\n        } else {\n            node.textContent = val;\n        }\n    } else if (key === 'class') {\n        node.className = val;\n    } else if (key === 'hidden' && typeof val === 'function') {\n        ctx!.addUpdateAction(new HiddenAction(node, val));\n    } else if (key === 'update' && typeof val === 'function') {\n        ctx!.addUpdateAction(new UpdateAction(node, val));\n    } else if (key === 'init') {\n        // no-op\n    } else {\n        node[key] = val;\n    }\n};\n\n/** \n * Build a DOM tree from a JavaScript object.\n * @example\n * buildDOM({\n *     tag: 'div.item#firstitem',\n *     onclick: () => console.info('clicked'),\n *     child: [\n *         'Name: ',\n *         { tag: 'span.name', text: name },\n *     ],\n * });\n */\nexport function buildDOM<T extends BuildDomReturn = BuildDomReturn>(obj: BuildDomExpr, ctx?: BuildDOMCtx): T {\n    return buildDomCore(obj, 32, ctx || null) as T;\n};\n\n/** Get a View instance or a DOM Node. View is preferred. */\nexport function buildView(obj: BuildDomExpr, ctx?: BuildDOMCtx): View | Node {\n    if (obj instanceof View) {\n        return obj;\n    } else if (obj instanceof JsxNode) {\n        return obj.buildView(ctx as any, 64);\n    } else {\n        return buildDOM(obj, ctx);\n    }\n}\n\nexport class JsxNode<T extends IDOM> {\n    tag: T | string;\n    attrs: Record<any, any> | undefined;\n    child: any[] | undefined;\n    constructor(tag: any, attrs: Record<any, any> | undefined, childs: any[] | undefined) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.child = childs;\n    }\n    getDOM(): HTMLElement {\n        return this.buildDom(null, 64) as any;\n    }\n    buildDom(ctx: BuildDOMCtx | null, ttl: number) {\n        return getDOM(this.buildView(ctx, ttl));\n    }\n    buildView(ctx: BuildDOMCtx | null, ttl: number)\n        : T extends IDOM ? T : T extends keyof HTMLElementTagNameMap ? HTMLElementTagNameMap[T] : HTMLElement {\n        if (ttl-- < 0) throw new Error('ran out of TTL');\n        let view: Node | View;\n        if (typeof this.tag === 'string') {\n            // tag is an HTML tag\n            const dom = document.createElement(this.tag);\n            view = dom;\n            if (this.attrs) {\n                for (const key in this.attrs) {\n                    if (Object.prototype.hasOwnProperty.call(this.attrs, key)) {\n                        const val = this.attrs[key];\n                        buildDOMHandleKey(key, val, dom, ctx, ttl);\n                    }\n                }\n                const init = this.attrs['init'];\n                if (init) init(dom);\n            }\n        } else {\n            // tag is a View\n            view = this.tag as View;\n            if (this.attrs) {\n                let init: Action<IDOM> | null = null;\n                for (const key in this.attrs) {\n                    if (Object.prototype.hasOwnProperty.call(this.attrs, key)) {\n                        const val = this.attrs[key];\n                        if (key == \"init\") {\n                            init = val;\n                        } else if (key == \"ref\") {\n                            (val as Ref<any>).value = view;\n                        } else if (key.startsWith(\"on\") && view[key] instanceof Callbacks) {\n                            (view[key] as Callbacks).add(val);\n                        } else {\n                            view[key] = val;\n                        }\n                    }\n                }\n                if (init) init(view);\n            }\n        }\n        if (this.child) {\n            if (view instanceof View) {\n                foreachFlaten(this.child, it => {\n                    (view as View).addChild(jsxBuildCore(it, ttl, (view as View)['_domctx']) as any);\n                });\n            } else {\n                foreachFlaten(this.child, it => {\n                    const c = jsxBuildCore(it, ttl, ctx);\n                    if (c instanceof View) {\n                        (view as Node).appendChild(c.dom);\n                        ctx?.view?._registerChild(c);\n                    } else {\n                        addChild(view, c);\n                    }\n                });\n            }\n        }\n        return view as any;\n    }\n    addChild(child: IDOM): void {\n        if (this.child == null) this.child = [];\n        this.child.push(child);\n    }\n}\n\nfunction jsxBuildCore(node: JsxNode<any> | BuildDomExpr, ttl: number, ctx: BuildDOMCtx | null) {\n    if (ttl-- < 0) throw new Error('ran out of TTL');\n    if (node instanceof View) return node;\n    var r = tryHandleValues(node, ctx);\n    if (r) return r;\n    if (node instanceof JsxNode) {\n        return node.buildView(ctx, ttl);\n    } else {\n        console.error(\"Unknown node type\", node);\n        throw new Error(\"Unknown node type\");\n    }\n}\n\nexport function jsxBuild<T extends IDOM>(node: JsxNode<T>, ctx?: BuildDOMCtx): T {\n    return jsxBuildCore(node, 64, ctx || new BuildDOMCtx());\n}\n\nexport type JsxTag = JsxDOMTag | JsxCtorTag;\nexport type JsxCtorTag = new (...args) => IDOM;;\nexport type JsxDOMTag = keyof HTMLElementTagNameMap;\n\nexport type JsxTagInstance<T> =\n    T extends keyof HTMLElementTagNameMap ? HTMLElementTagNameMap[T] :\n    T extends (new (...args) => infer U) ? U extends IDOM ? U :\n    never : never;\n\nexport type JsxAttrs<T extends JsxTag> =\n    T extends JsxCtorTag ? JsxCtorAttrs<T> :\n    T extends JsxDOMTag ? JsxDOMAttrs<T> :\n    never;\n\nexport type JsxCtorAttrs<T extends JsxCtorTag, TI = InstanceType<T>> = {\n    args?: ConstructorParameters<T>;\n    init?: Action<TI>;\n} & Partial<ConvertObjectWithCallbacks<TI>>;\n\nexport type JsxDOMAttrs<T extends JsxDOMTag> = Omit<BuildDomNode, \"key\"> & Partial<JsxTagInstance<T>>;\n\nexport function jsxFactory<T extends JsxTag, TInstance extends IDOM = JsxTagInstance<T>>(tag: T, attrs: JsxAttrs<T>, ...childs: any)\n    : JsxNode<TInstance> {\n    if (typeof tag === 'string') {\n        return new JsxNode(tag, attrs, childs) as any;\n    } else {\n        const view = attrs?.args ?\n            new (tag as any)(...attrs.args) :\n            new (tag as any)();\n        return new JsxNode(view, attrs, childs) as any;\n    }\n}\n\nexport const jsx = jsxFactory;\n","// file: utils.ts\n\nimport { IDOM, buildDOM } from \"./buildDOM\";\nimport { getDOM } from \"./view\";\n\nconst _object_assign = Object.assign;\nconst _object_hasOwnProperty = Object.prototype.hasOwnProperty;\n\n// Time & formatting utils:\n\nexport function strPadLeft(str: string, len: number, ch: string = ' ') {\n    while (str.length < len) {\n        str = ch + str;\n    }\n    return str;\n}\n\nexport function formatTime(sec: number | any) {\n    if (typeof sec !== 'number' || isNaN(sec)) return '--:--';\n    sec = Math.round(sec);\n    var min = Math.floor(sec / 60);\n    sec %= 60;\n    return strPadLeft(min.toString(), 2, '0') + ':' + strPadLeft(sec.toString(), 2, '0');\n}\n\nconst fileSizeUnits = ['B', 'KB', 'MB', 'GB'];\nexport function formatFileSize(size: number | any) {\n    if (typeof size !== \"number\" || isNaN(size)) return 'NaN';\n    var unit = 0;\n    while (unit < fileSizeUnits.length - 1 && size >= 1024) {\n        unit++;\n        size /= 1024;\n    }\n    return size.toFixed(2) + ' ' + fileSizeUnits[unit];\n}\n\nexport function formatDateTime(date: Date) {\n    var now = new Date();\n    var sameday = date.getFullYear() === now.getFullYear()\n        && date.getMonth() === now.getMonth()\n        && date.getDate() === now.getDate();\n    return sameday ? date.toLocaleTimeString() : date.toLocaleString();\n}\n\nexport function numLimit(num: number, min: number, max: number) {\n    return (num < min || typeof num != 'number' || isNaN(num)) ? min :\n        (num > max) ? max : num;\n}\n\nexport function createName(nameFunc: (num: number) => string, existsFunc: (str: string) => boolean) {\n    for (let num = 0; ; num++) {\n        let str = nameFunc(num);\n        if (!existsFunc(str)) return str;\n    }\n}\n\n/** \n * btoa, but supports Unicode and uses UTF-8 encoding.\n * @see https://stackoverflow.com/questions/30106476\n */\nexport function base64EncodeUtf8(str) {\n    return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g,\n        function toSolidBytes(match, p1) {\n            return String.fromCharCode(('0x' + p1) as any);\n        }));\n}\n\nexport function sleepAsync(time: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, time);\n    });\n}\n\n// buildDOM: <T extends BuildDomReturn = BuildDomReturn>(tree: BuildDomExpr, ctx?: BuildDOMCtx) => T\n//     = null as any; // It will be initialized by view.ts\n\n// jsxFactory: typeof jsxFactory = null as any;\n// jsx: typeof jsxFactory = null as any;\n\n/** Remove all children from the node */\nexport function clearChildren(node: Node) {\n    while (node.lastChild) node.removeChild(node.lastChild);\n}\n\n/** Remove all children from the node (if needed) and append one (if present) */\nexport function replaceChild(node: Node, newChild?: Node) {\n    clearChildren(node);\n    if (newChild) node.appendChild(newChild);\n}\n\n/** Add or remove a classname for the element\n * @param force - true -> add; false -> remove; undefined -> toggle.\n */\nexport function toggleClass(element: HTMLElement, clsName: string, force?: boolean) {\n    var clsList = element.classList;\n    if (clsList.toggle) return clsList.toggle(clsName, force);\n    if (force === undefined) force = !clsList.contains(clsName);\n    if (force) clsList.add(clsName);\n    else clsList.remove(clsName);\n    return force;\n}\n\n/** Fade out the element and remove it */\nexport function fadeout(element: HTMLElement, options?: { className?: string, duration?: number, waitTransition?: boolean; }) {\n    const { className = 'fading-out', duration = 500, waitTransition = true } = options || {};\n    element.classList.add(className);\n    var cb: Action | null = null;\n    var end: Action | null = () => {\n        if (!end) return; // use a random variable as flag ;)\n        end = null;\n        if (waitTransition)\n            element.removeEventListener('transitionend', onTransitionend);\n        element.classList.remove(className);\n        element.remove();\n        cb && cb();\n    };\n    if (waitTransition) {\n        var onTransitionend = function (e: TransitionEvent) {\n            if (e.eventPhase === Event.AT_TARGET) end!();\n        };\n        element.addEventListener('transitionend', onTransitionend);\n    }\n    setTimeout(end, duration); // failsafe\n    return {\n        get finished() { return !end; },\n        onFinished(callback: Action) {\n            if (!end) callback();\n            else cb = callback;\n            return this;\n        },\n        cancel() { end?.(); }\n    };\n}\n\nexport function listenPointerEvents(element: HTMLElement, callback: (e: PtrEvent) => void | 'track', options?: AddEventListenerOptions) {\n    var touchDown = false;\n    var mouseDown = function (e: MouseEvent) {\n        if (callback({ type: 'mouse', ev: e, point: e, action: 'down' }) === 'track') {\n            var mousemove = function (e: MouseEvent) {\n                callback({ type: 'mouse', ev: e, point: e, action: 'move' });\n            };\n            var mouseup = function (e: MouseEvent) {\n                document.removeEventListener('mousemove', mousemove, true);\n                document.removeEventListener('mouseup', mouseup, true);\n                callback({ type: 'mouse', ev: e, point: e, action: 'up' });\n            };\n            document.addEventListener('mousemove', mousemove, true);\n            document.addEventListener('mouseup', mouseup, true);\n        }\n    };\n    var touchStart = function (e: TouchEvent) {\n        var ct = e.changedTouches[0];\n        var ret = callback({\n            type: 'touch', touch: 'start', ev: e, point: ct,\n            action: touchDown ? 'move' : 'down'\n        });\n        if (!touchDown && ret === 'track') {\n            touchDown = true;\n            var touchmove = function (e: TouchEvent) {\n                var ct = e.changedTouches[0];\n                callback({ type: 'touch', touch: 'move', ev: e, point: ct, action: 'move' });\n            };\n            var touchend = function (e: TouchEvent) {\n                if (e.touches.length === 0) {\n                    touchDown = false;\n                    element.removeEventListener('touchmove', touchmove);\n                    element.removeEventListener('touchend', touchend);\n                    element.removeEventListener('touchcancel', touchend);\n                }\n                var ct = e.changedTouches[0];\n                callback({\n                    type: 'touch', touch: 'end', ev: e, point: ct,\n                    action: touchDown ? 'move' : 'up'\n                });\n            };\n            element.addEventListener('touchmove', touchmove, options);\n            element.addEventListener('touchend', touchend, options);\n            element.addEventListener('touchcancel', touchend, options);\n        }\n    };\n    element.addEventListener('mousedown', mouseDown, options);\n    element.addEventListener('touchstart', touchStart, options);\n    return {\n        remove: () => {\n            element.removeEventListener('mousedown', mouseDown, options);\n            element.removeEventListener('touchstart', touchStart, options);\n        }\n    };\n}\n\nexport function listenEvent<K extends keyof HTMLElementEventMap>(element: HTMLElement, event: K,\n    handler: (ev: HTMLElementEventMap[K]) => any) {\n    element.addEventListener(event, handler);\n    return {\n        remove: () => element.removeEventListener(event, handler)\n    };\n}\n\nexport function listenEvents<K extends Array<keyof HTMLElementEventMap>>(element: HTMLElement, events: K,\n    handler: (ev: HTMLElementEventMap[K[number]]) => any) {\n    events.forEach(event => element.addEventListener(event, handler));\n    return {\n        remove: () => events.forEach(event => element.removeEventListener(event, handler))\n    };\n}\n\nexport function injectCss(css: string, options?: { tag: string; }) {\n    document.head.appendChild(buildDOM({ tag: options?.tag ?? 'style', text: css }));\n}\n\nexport function arrayRemove<T>(array: T[], val: T) {\n    for (let i = 0; i < array.length; i++) {\n        if (array[i] === val) {\n            array.splice(i, 1);\n            i--;\n        }\n    }\n}\n\nexport function arrayInsert<T>(array: T[], val: T, pos?: number) {\n    if (pos === undefined) array.push(val);\n    else array.splice(pos, 0, val);\n}\n\nexport function arrayMap<T, TRet>(arr: Iterable<T>, func: (item: T, idx: number) => TRet) {\n    if (arr instanceof Array) return arr.map(func);\n    var idx = 0;\n    var ret = new Array<TRet>((arr as any).length);\n    for (var item of arr) {\n        ret[idx] = (func(item, idx));\n        idx++;\n    }\n    return ret;\n}\n\nexport function arrayForeach<T>(arr: Iterable<T>, func: (item: T, idx: number) => void) {\n    var idx = 0;\n    for (var item of arr) {\n        func(item, idx++);\n    }\n}\n\n\nexport function foreachFlaten<T>(arr: T[], func: Action<T>) {\n    for (const it of arr) {\n        if (it instanceof Array) {\n            foreachFlaten(it as T[], func);\n        } else {\n            func(it);\n        }\n    }\n}\n\nexport function arrayFind<T>(arr: Iterable<T>, func: (item: T, idx: number) => any): T | null {\n    if (arr instanceof Array) return arr.find(func);\n    var idx = 0;\n    for (var item of arr) {\n        if (func(item, idx++)) return item;\n    }\n    return null;\n}\n\nexport function arraySum<T>(arr: Iterable<T>, func: (item: T) => number | null | undefined) {\n    var sum = 0;\n    arrayForeach(arr, (x) => {\n        var val = func(x);\n        if (val) sum += val;\n    });\n    return sum;\n}\n\nexport function objectApply<T>(obj: Partial<T>, kv?: Partial<T>, keys?: Array<keyof T>) {\n    if (kv) {\n        if (!keys) return _object_assign(obj, kv);\n        for (const key in kv as any) {\n            if (_object_hasOwnProperty.call(kv, key) && (!keys || keys.indexOf(key as any) >= 0)) {\n                const val = kv[key];\n                obj[key] = val;\n            }\n        }\n    }\n    return obj;\n}\n\nexport function objectInit<T>(obj: T, kv?: ObjectInit<T>, keys?: Array<keyof T>) {\n    if (kv) {\n        for (const key in kv as any) {\n            if (_object_hasOwnProperty.call(kv, key) && (!keys || keys.indexOf(key as any) >= 0)) {\n                const val = kv[key];\n                if (key.startsWith(\"on\") && obj[key] instanceof Callbacks) {\n                    (obj[key] as Callbacks).add(val);\n                } else {\n                    obj[key] = val;\n                }\n            }\n        }\n    }\n    return obj;\n}\n\nexport function mod(a: number, b: number): number {\n    if (a < 0) a = b + a;\n    return a % b;\n}\n\nexport function readBlobAsDataUrl(blob: Blob) {\n    return new Promise<string>((resolve, reject) => {\n        var reader = new FileReader();\n        reader.onload = (ev) => {\n            resolve(reader.result as string);\n        };\n        reader.onerror = (ev) => reject();\n        reader.readAsDataURL(blob);\n    });\n}\n\nArray.prototype.remove = function (item) {\n    arrayRemove(this, item);\n};\n\ndeclare global {\n    interface Array<T> {\n        /**\n         * (Extension method) remove the specified item from array.\n         * @param item The item to be removed from array\n         */\n        remove(item: T): void;\n    }\n}\n\nexport type ObjectInit<T> = Partial<ConvertObjectWithCallbacks<T>>;\n\nexport type ConvertObjectWithCallbacks<T> = {\n    [P in keyof T]: P extends `on${string}` ? CallbackInit<T[P]> : T[P];\n};\n\nexport type CallbackInit<T> = T extends Callbacks<infer U> ? T | U : T;\n\nexport function startBlockingDetect(threshold = 20) {\n    var begin = Date.now();\n    var lastRun = Date.now();\n    setInterval(() => {\n        var now = Date.now();\n        if (now - lastRun >= threshold) {\n            console.info(`[Blocking] ${(now - begin) / 1000}s: blocked for ${now - lastRun} ms`);\n        }\n        lastRun = now;\n    }, 1);\n}\n\nexport class Timer {\n    callback: () => void;\n    cancelFunc: (() => void) | undefined;\n    constructor(callback: () => void) {\n        this.callback = callback;\n        this.cancelFunc = undefined;\n    }\n    timeout(time: number) {\n        this.tryCancel();\n        var handle = setTimeout(this.callback, time);\n        this.cancelFunc = () => window.clearTimeout(handle);\n    }\n    interval(time: number) {\n        this.tryCancel();\n        var handle = setInterval(this.callback, time);\n        this.cancelFunc = () => window.clearInterval(handle);\n    }\n    animationFrame() {\n        this.tryCancel();\n        var handle = requestAnimationFrame(this.callback);\n        this.cancelFunc = () => cancelAnimationFrame(handle);\n    }\n    tryCancel() {\n        if (this.cancelFunc) {\n            this.cancelFunc();\n            this.cancelFunc = undefined;\n        }\n    }\n}\n\nexport type PtrEvent = ({\n    type: 'mouse';\n    ev: MouseEvent;\n} | {\n    type: 'touch';\n    touch: 'start' | 'move' | 'end';\n    ev: TouchEvent;\n}) & {\n    action: 'down' | 'move' | 'up';\n    point: MouseEvent | Touch;\n};\n\n\n// Some interesting function types:\nexport type AnyFunc = (...args: any) => any;\nexport type Action<T = void> = (arg: T) => void;\nexport type Func<TRet> = () => TRet;\nexport type AsyncFunc<T> = Func<Promise<T>>;\n\nexport type FuncOrVal<T> = T | Func<T>;\n\n\nexport class SettingItem<T> {\n    key: string;\n    type: SiType<T>;\n    data: T;\n    isInitial: boolean;\n    onRender: Action<T> | null = null;\n    constructor(key: string, type: 'bool' | 'str' | 'json' | SiType<T>, initial: T) {\n        this.key = key;\n        type = this.type = typeof type === 'string' ? SettingItem.types[type] : type;\n        if (!type || !type.serialize || !type.deserialize) throw new Error(\"invalid 'type' arugment\");\n        this.readFromStorage(initial);\n    }\n    readFromStorage(initial: T) {\n        var str = this.key ? localStorage.getItem(this.key) : null;\n        this.isInitial = !str;\n        this.set(str ? this.type.deserialize(str) : initial, true);\n    }\n    render(fn: (obj: T) => void, dontRaiseNow?: boolean) {\n        if (!dontRaiseNow) fn(this.data);\n        const oldFn = this.onRender;\n        const newFn = fn;\n        if (oldFn) fn = function (x) { oldFn(x); newFn(x); };\n        this.onRender = fn;\n        return this;\n    }\n    bindToBtn(btn: HTMLElement, prefix: string[]) {\n        if (this.type as any !== SettingItem.types.bool) throw new Error('only for bool type');\n        var span = document.createElement('span');\n        btn.insertBefore(span, btn.firstChild);\n        this.render(function (x) {\n            btn.classList.toggle('disabled', !x);\n            prefix = prefix || [\"❌\", \"✅\"];\n            span.textContent = prefix[+x];\n        });\n        var thiz = this;\n        btn.addEventListener('click', function () { thiz.toggle(); });\n        return this;\n    }\n    remove() {\n        localStorage.removeItem(this.key);\n    }\n    save() {\n        this.isInitial = false;\n        localStorage.setItem(this.key, this.type.serialize(this.data));\n    }\n    set(data: T, dontSave?: boolean) {\n        this.data = data;\n        this.isInitial = false;\n        this.onRender && this.onRender(data);\n        if (!dontSave && this.key) this.save();\n    }\n    get() {\n        return this.data;\n    }\n    toggle() {\n        if (this.type as any !== SettingItem.types.bool) throw new Error('only for bool type');\n        this.set((!(this.data as any)) as any);\n    }\n    loop(arr: any[]) {\n        var curData = this.data;\n        var oldIndex = arr.findIndex(function (x) { return x === curData; });\n        var newData = arr[(oldIndex + 1) % arr.length];\n        this.set(newData);\n    }\n\n    static types = {\n        bool: {\n            serialize: function (data) { return data ? 'true' : 'false'; },\n            deserialize: function (str) { return str === 'true' ? true : str === 'false' ? false : undefined; }\n        },\n        str: {\n            serialize: function (x) { return x; },\n            deserialize: function (x) { return x; }\n        },\n        json: {\n            serialize: function (x) { return JSON.stringify(x); },\n            deserialize: function (x) { return JSON.parse(x); }\n        }\n    };\n}\n\ninterface SiType<T> {\n    serialize: (obj: T) => string;\n    deserialize: (str: string) => T;\n}\n\nclass CallbacksImpl<T extends AnyFunc = Action> extends Array<T> {\n    private _hook?: Callbacks<(adding: boolean, func: T) => void> = undefined;\n    get onChanged() {\n        this._hook ??= new Callbacks();\n        return this._hook;\n    }\n    invoke(...args: Parameters<T>) {\n        this.forEach((x) => {\n            try {\n                x.apply(this, args);\n            } catch (error) {\n                console.error(\"Error in callback\", error);\n            }\n        });\n    }\n    add(callback: T) {\n        this.push(callback);\n        this._hook?.invoke(true, callback);\n        return callback;\n    }\n    remove(callback: T) {\n        super.remove(callback);\n        this._hook?.invoke(false, callback);\n    }\n}\n\nexport interface Callbacks<T extends AnyFunc = Action> {\n    invoke(...args: Parameters<T>): void;\n    add(callback: T): T;\n    remove(callback: T): void;\n    readonly length: number;\n    readonly onChanged: Callbacks<(adding: boolean, func: T) => void>;\n}\nexport const Callbacks: { new <T extends AnyFunc = Action>(): Callbacks<T>; } = CallbacksImpl;\n\nexport class Ref<T> {\n    private _value: T | undefined = undefined;\n    private _onChanged: Callbacks<Action<Ref<T>>> | undefined = undefined;\n    get onChanged() {\n        if (!this._onChanged) this._onChanged = new Callbacks();\n        return this._onChanged;\n    }\n    get value() { return this._value; }\n    set value(val) {\n        this._value = val;\n        if (this._onChanged) this.onChanged.invoke(this);\n    }\n}\n\nexport class Lazy<T> {\n    private _func?: Func<T>;\n    private _value?: T;\n    get computed() { return !this._func; }\n    get rawValue() { return this._value; }\n    get value(): T {\n        if (this._func) {\n            this._value = this._func();\n            this._func = undefined;\n        }\n        return this._value!;\n    }\n    constructor(func: Func<T>) {\n        this._func = func;\n        this._value = undefined;\n    }\n}\n\nexport class Semaphore {\n    queue = new Array<Action>();\n    maxCount = 1;\n    runningCount = 0;\n    constructor(init: ObjectInit<Semaphore>) {\n        objectInit(this, init);\n    }\n    enter(): Promise<any> {\n        if (this.runningCount === this.maxCount) {\n            var resolve: Action;\n            var prom = new Promise((res) => { resolve = res; });\n            this.queue.push(resolve!);\n            return prom;\n        } else {\n            this.runningCount++;\n            return Promise.resolve();\n        }\n    }\n    exit() {\n        if (this.runningCount === this.maxCount && this.queue.length) {\n            if (window.queueMicrotask) {\n                window.queueMicrotask(this.queue.shift() as any);\n            } else {\n                setTimeout(this.queue.shift()!, 0);\n            }\n        } else {\n            this.runningCount--;\n        }\n    }\n    async run(func: () => Promise<any>) {\n        await this.enter();\n        try {\n            await func();\n        } finally {\n            this.exit();\n        }\n    }\n}\n\n/** Just like CancellationToken[Source] on .NET */\nexport class CancelToken {\n    cancelled = false;\n    onCancelled = new Callbacks();\n    cancel() {\n        if (this.cancelled) return;\n        this.cancelled = true;\n        this.onCancelled.invoke();\n    }\n    throwIfCancelled() {\n        if (this.cancelled)\n            throw new Error(\"operation cancelled.\");\n    }\n}\n\nexport class AutoResetEvent {\n    private _whenNotify: Promise<void> | null = null;\n    private _callback: Action | null = null;\n\n    wait() {\n        if (!this._whenNotify) {\n            this._whenNotify = new Promise(r => {\n                this._callback = () => {\n                    this._callback = this._whenNotify = null;\n                    r();\n                };\n            });\n        }\n        return this._whenNotify;\n    }\n    set() {\n        this._callback && this._callback();\n    }\n}\n\nexport interface IId {\n    id: keyof any;\n}\n\nexport class DataUpdatingHelper<T extends IId, TData extends IId = T> {\n    items: Iterable<T>;\n    update(newData: Iterable<TData>) {\n        const oldData = this.items;\n        var dataDict: Record<keyof any, TData> = {};\n        for (const n of newData) {\n            dataDict[this.dataSelectId(n)] = n;\n        }\n        var itemDict: Record<any, T> = {};\n        var removed: T[] = [];\n        for (const d of oldData) {\n            const id = this.selectId(d);\n            if (dataDict[id] !== undefined) {\n                itemDict[id] = d;\n            } else {\n                removed.push(d);\n            }\n        }\n        for (let i = removed.length - 1; i >= 0; i--)\n            this.removeItem(removed[i]);\n        var pos = 0;\n        for (const n of newData) {\n            const d = itemDict[this.dataSelectId(n)];\n            if (d !== undefined) {\n                this.updateItem(d, n);\n            } else {\n                this.addItem(n, pos);\n            }\n            pos++;\n        }\n    }\n    updateOrRebuildAll(newData: Iterable<TData>) {\n        this.update(newData);\n        if (!this.isSame(newData)) this.rebuildAll(newData);\n    }\n    isSame(newData: Iterable<TData>) {\n        var t = this.items[Symbol.iterator]();\n        for (const n of newData) {\n            var d = t.next();\n            if (d.done) return false;\n            if (this.selectId(d.value) !== this.dataSelectId(n)) return false;\n        }\n        if (!t.next().done) return false;\n        return true;\n    }\n    rebuildAll(newData: Iterable<TData>) {\n        var oldData = this.items;\n        if (oldData instanceof Array) {\n            for (let i = oldData.length - 1; i >= 0; i--) {\n                this.removeItem(oldData[i]);\n            }\n        } else {\n            for (const o of oldData) {\n                this.removeItem(o);\n            }\n        }\n        let i = 0;\n        for (const n of newData) {\n            this.addItem(n, i++);\n        }\n    }\n    protected selectId(obj: T): any { return obj.id; }\n    protected dataSelectId(obj: TData): any { return obj.id; }\n    addItem(obj: TData, pos: number) { }\n    updateItem(old: T, data: TData) { }\n    removeItem(obj: T) { }\n}\n\nexport class EventRegistrations {\n    list: { event: Callbacks; func: AnyFunc; }[] = [];\n    add<T extends AnyFunc>(event: Callbacks<T>, func: T) {\n        this.list.push({ event, func });\n        event.add(func);\n        return func;\n    }\n    removeAll() {\n        while (this.list.length) {\n            var r = this.list.pop()!;\n            r.event.remove(r.func);\n        }\n    }\n}\n\nexport class TextCompositionWatcher {\n    dom: HTMLElement;\n    onCompositingChanged = new Callbacks<Action>();\n    private _isCompositing = false;\n    get isCompositing() { return this._isCompositing; }\n    set isCompositing(val) {\n        this._isCompositing = val;\n        this.onCompositingChanged.invoke();\n    }\n    constructor(dom: IDOM) {\n        this.dom = getDOM(dom) as HTMLElement;\n        this.dom.addEventListener('compositionstart', (ev) => {\n            this.isCompositing = true;\n        });\n        this.dom.addEventListener('compositionend', (ev) => {\n            this.isCompositing = false;\n        });\n    }\n}\n\nexport class InputStateTracker {\n    state = {\n        mouseDown: false,\n        mouseIn: false,\n        focusIn: false,\n    };\n    private _removeEvents: Action | null = null;\n    private _removePointerEvents: Action | null = null;\n    readonly onChanged = new Callbacks<Action<keyof InputStateTracker['state']>>();\n    constructor(readonly dom: HTMLElement) {\n        this._removeEvents = listenEvents(dom, ['mouseenter', 'mouseleave', 'focusin', 'focusout'], (e) => {\n            switch (e.type) {\n                case 'mouseenter':\n                    this.stateChanged('mouseIn', true);\n                    break;\n                case 'mouseleave':\n                    this.stateChanged('mouseIn', false);\n                    break;\n                case 'focusin':\n                    this.stateChanged('focusIn', true);\n                    break;\n                case 'focusout':\n                    this.stateChanged('focusIn', false);\n                    break;\n            }\n        }).remove;\n\n        this._removePointerEvents = listenPointerEvents(dom, (e) => {\n            if (e.action == 'down') {\n                this.stateChanged('mouseDown', true);\n                return 'track';\n            } else if (e.action == 'up') {\n                this.stateChanged('mouseDown', false);\n            }\n        }).remove;\n    }\n    private stateChanged<T extends keyof InputStateTracker['state']>(state: T, val: InputStateTracker['state'][T]) {\n        this.state[state] = val;\n        this.onChanged.invoke(state);\n    }\n    removeListeners() {\n        this._removeEvents?.();\n        this._removePointerEvents?.();\n        this._removePointerEvents = this._removeEvents = null;\n    }\n}\n\n\n/** @deprecated May be removed in the future to make tree-shaking easier. */\nexport const utils = {\n    strPadLeft,\n    formatTime,\n    formatFileSize,\n    formatDateTime,\n    numLimit,\n    createName,\n    base64EncodeUtf8,\n    sleepAsync,\n    clearChildren,\n    replaceChild,\n    toggleClass,\n    fadeout,\n    listenPointerEvents,\n    listenEvent,\n    listenEvents,\n    injectCss,\n    arrayRemove,\n    arrayInsert,\n    arrayMap,\n    arrayForeach,\n    arrayFind,\n    arraySum,\n    objectApply,\n    objectInit,\n    mod,\n    readBlobAsDataUrl,\n    buildDOM,\n    Timer,\n};\n","// file: I18n.ts\n\nexport interface I18nData {\n    [lang: string]: LangObj;\n}\n\nexport type LangObj = Record<string, string>;\n\n/** Internationalization (aka i18n) helper class */\nexport class I18n {\n    data: I18nData = {};\n    curLang = 'en';\n    missing = new Map<string, 1>();\n    /** Get i18n string for `key`, return `key` when not found. */\n    get(key, arg?: any[]): string {\n        return this.get2(key, arg) || key;\n    }\n    /** Get i18n string for `key`, return `null` when not found. */\n    get2(key, arg?: any[], lang?: string): string | null {\n        lang = lang || this.curLang;\n        var langObj = this.data[lang];\n        if (!langObj) {\n            console.log('i18n missing lang: ' + lang);\n            return null;\n        }\n        var r = langObj[key];\n        if (!r) {\n            if (!this.missing.has(key)) {\n                this.missing.set(key, 1);\n                console.log('i18n missing key: ' + key);\n            }\n            return null;\n        }\n        if (arg) {\n            for (const key in arg) {\n                if (arg.hasOwnProperty(key)) {\n                    const val = arg[key];\n                    r = r.replace('{' + key + '}', val);\n                    // Note that it only replaces the first occurrence.\n                }\n            }\n        }\n        return r;\n    }\n    /** Fills data with an 2darray */\n    add2dArray(array: [...string[][]]) {\n        const langObjs: LangObj[] = [];\n        const langs = array[0];\n        for (const lang of langs) {\n            langObjs.push(this.data[lang] = this.data[lang] || {});\n        }\n        for (let i = 1; i < array.length; i++) {\n            const line = array[i];\n            const key = line[0];\n            for (let j = 0; j < line.length; j++) {\n                const val = line[j];\n                langObjs[j][key] = val;\n            }\n        }\n    }\n    renderElements(elements) {\n        console.log('i18n elements rendering');\n        elements.forEach(x => {\n            for (const node of x.childNodes) {\n                if (node.nodeType === Node.TEXT_NODE) {\n                    // console.log('node', node);\n                    var r = this.get2(node.beforeI18n || node.textContent);\n                    if (r) {\n                        node.beforeI18n = node.beforeI18n || node.textContent;\n                        node.textContent = r;\n                    }\n                    else {\n                        if (node.beforeI18n) {\n                            node.textContent = node.beforeI18n;\n                        }\n                        console.log('missing key for node', node);\n                    }\n                }\n            }\n        });\n    }\n    /**\n     * Detect the best available language using\n     * the user language preferences provided by the browser.\n     * @param langs Available languages\n     */\n    static detectLanguage(langs: string[]) {\n        var cur: string | null = null;\n        var curIdx = -1;\n        var languages: string[] = [];\n        // ['en-US'] -> ['en-US', 'en']\n        (navigator.languages || [navigator.language]).forEach(lang => {\n            languages.push(lang);\n            if (lang.indexOf('-') > 0)\n                languages.push(lang.substr(0, lang.indexOf('-')));\n        });\n        langs.forEach((l) => {\n            var idx = languages.indexOf(l);\n            if (!cur || (idx !== -1 && idx < curIdx)) {\n                cur = l;\n                curIdx = idx;\n            }\n        });\n        return cur || langs[0];\n    }\n}\n\nexport function createStringBuilder(i18n: I18n) {\n    var arrBuilder = createArrayBuilder(i18n);\n\n    return function (literals: TemplateStringsArray, ...placeholders: any[]) {\n        if (placeholders.length === 0) {\n            return i18n.get(literals[0]);\n        }\n        return arrBuilder(literals, ...placeholders).join('');\n    }\n}\n\nexport function createArrayBuilder(i18n: I18n) {\n    var formatCache = new WeakMap<TemplateStringsArray, string>();\n    var parseCache = new Map<string, (string | number)[]>();\n\n    return function <T extends any[]>(literals: TemplateStringsArray, ...placeholders: T): (string | T)[] {\n        if (placeholders.length === 0) {\n            return [i18n.get(literals[0])];\n        }\n\n        // Generate format string from template string if it's not cached:\n        let format = formatCache.get(literals);\n        if (format === undefined) {\n            format = '';\n            for (let i = 0; i < literals.length; i++) {\n                const lit = literals[i];\n                format += lit;\n                if (i < placeholders.length) {\n                    format += '{' + i + '}';\n                }\n            }\n            formatCache.set(literals, format);\n        }\n\n        const translatedFormat = i18n.get(format);\n\n        // Also cache parsed template\n        let parsed = parseCache.get(translatedFormat);\n        if (parsed === undefined) {\n            parsed = parseTemplate(translatedFormat);\n        }\n\n        return parsed.map(x => typeof x == 'number' ? placeholders[x] : x);\n    }\n}\n\nfunction parseTemplate(template: string): (string | number)[] {\n    const result: (string | number)[] = [];\n    let state = 0; // 0: normal / 1: after '{' / 2: after '}' / 3: after '{' and numbers\n    let buf = '';\n    for (let i = 0; i < template.length; i++) {\n        const ch = template[i];\n        switch (ch) {\n            case '{':\n                if (state == 0) state = 1;\n                else if (state == 1) { state = 0; buf += '{'; }\n                else throw new Error(`Expected number, got '${ch}' at ${i}`);\n                break;\n            case '}':\n                if (state == 3) { state = 0; result.push(+buf); buf = ''; }\n                else if (state == 0) { state = 2; }\n                else if (state == 2) { state = 0; buf += '}'; }\n                else throw new Error(`Expected number, got '${ch}' at ${i}`);\n                break;\n            default:\n                if (state == 2) throw new Error(`Expected '}', got '${ch}' at ${i}`);\n                else if (state == 1) { state = 3; if (buf) result.push(buf); buf = ''; }\n                buf += ch;\n        }\n    }\n    if (state != 0) throw new Error(\"Unexpected end of template string\");\n    if (buf) result.push(buf);\n    return result;\n}\n\nexport var i18n = new I18n();\n\nexport const I = createStringBuilder(i18n);\n","export const version = \"1.9.0\""],"names":["View","[object Object]","dom","this","undefined","BuildDOMCtx","MountState","Unmounted","_domctx","view","domExprCreated","obj","position","_position","ensureDom","_dom","domCreated","baseView","_baseView","mountState","_mountState","hidden","val","r","createDom","buildView","postCreateDom","updateDom","document","createElement","debugging","dataset","update","state","console","trace","mountStateChanged","_childViews","child","id","dict","kv","objectApply","updateAll","clsName","force","toggleClass","appendView","appendChild","onActive","_onActive","Callbacks","addEventListener","e","invoke","handleKeyDown","code","rect","getBoundingClientRect","MouseEvent","clientX","x","clientY","y","relatedTarget","preventDefault","childViews","addView","pos","_registerChild","Mounted","Mounting","_insertToDom","changeMountState","items","parentView","Error","length","push","splice","i","_ensureItem","_removeFromDom","removeView","updateChildren","item","insertBefore","remove","tryGetDOM","idom","getDOM","Node","error","parent","childView","warnMountingView","addChild","buildDOM","data","prototype","ContainerView","super","Symbol","iterator","idx","func","arrayMap","arrayFind","arrayForeach","key","node","action","actions","a","run","TextAction","textContent","HiddenAction","UpdateAction","tryHandleValues","ctx","createTextNode","addUpdateAction","buildDomCore","ttl","JsxNode","tag","match","ele","reg","exec","ch","classList","add","substr","createElementFromTag","hasOwnProperty","buildDOMHandleKey","init","Array","foreachFlaten","setDict","value","className","attrs","childs","buildDom","Object","call","startsWith","it","jsxBuildCore","c","jsxFactory","args","jsx","_object_assign","assign","_object_hasOwnProperty","strPadLeft","str","len","formatTime","sec","isNaN","Math","round","min","floor","toString","fileSizeUnits","formatFileSize","size","unit","toFixed","formatDateTime","date","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","toLocaleString","numLimit","num","max","createName","nameFunc","existsFunc","base64EncodeUtf8","btoa","encodeURIComponent","replace","p1","String","fromCharCode","sleepAsync","time","Promise","resolve","setTimeout","clearChildren","lastChild","removeChild","replaceChild","newChild","element","clsList","toggle","contains","fadeout","options","duration","waitTransition","cb","end","removeEventListener","onTransitionend","eventPhase","Event","AT_TARGET","finished","callback","listenPointerEvents","touchDown","mouseDown","type","ev","point","mousemove","mouseup","touchStart","ct","changedTouches","ret","touch","touchmove","touchend","touches","listenEvent","event","handler","listenEvents","events","forEach","injectCss","css","head","text","arrayRemove","array","arrayInsert","arr","map","find","arraySum","sum","keys","indexOf","objectInit","mod","b","readBlobAsDataUrl","blob","reject","reader","FileReader","onload","result","onerror","readAsDataURL","Timer","cancelFunc","tryCancel","handle","window","clearTimeout","setInterval","clearInterval","requestAnimationFrame","cancelAnimationFrame","SettingItem","initial","types","serialize","deserialize","readFromStorage","localStorage","getItem","isInitial","set","fn","dontRaiseNow","oldFn","onRender","newFn","btn","prefix","bool","span","firstChild","render","thiz","removeItem","setItem","dontSave","save","curData","oldIndex","findIndex","newData","json","JSON","stringify","parse","onChanged","_hook","apply","utils","I18n","Map","arg","get2","lang","curLang","langObj","log","missing","has","langObjs","langs","line","j","elements","childNodes","nodeType","TEXT_NODE","beforeI18n","cur","curIdx","languages","navigator","language","l","createStringBuilder","i18n","arrBuilder","createArrayBuilder","literals","placeholders","get","join","formatCache","WeakMap","parseCache","format","translatedFormat","parsed","template","buf","parseTemplate","I","_whenNotify","_callback","cancelled","onCancelled","oldData","dataDict","n","dataSelectId","itemDict","removed","d","selectId","updateItem","addItem","isSame","rebuildAll","t","next","done","o","old","list","pop","mouseIn","focusIn","_removeEvents","stateChanged","_removePointerEvents","_func","_value","computed","rawValue","_onChanged","runningCount","maxCount","prom","res","queue","queueMicrotask","shift","enter","exit","isCompositing","_isCompositing","onCompositingChanged","threshold","begin","lastRun","info"],"mappings":"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"}